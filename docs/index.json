[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/browser/browser.tests.entry.js",
    "content": "// fetch polyfill, used everywhere in code\nrequire('isomorphic-fetch') // TODO to webpack?\nrequire('babel-register')();\nrequire('source-map-support').install();\n\n// this is copy+paste from\n// https://semaphoreci.com/community/tutorials/testing-react-components-with-enzyme-and-mocha\n// and\n// https://github.com/airbnb/enzyme/issues/942\nconst { JSDOM } = require('jsdom');\nconst jsdom = new JSDOM('<!doctype html><html><body></body></html>');\nconst { window } = jsdom;\n\nfunction copyProps(src, target) {\n  const props = Object.getOwnPropertyNames(src)\n    .filter(prop => typeof target[prop] === 'undefined')\n    .map(prop => Object.getOwnPropertyDescriptor(src, prop));\n  Object.defineProperties(target, props);\n}\n\nglobal.window = window;\nglobal.document = window.document;\nglobal.navigator = {\n  userAgent: 'node.js'\n};\ncopyProps(window, global);\n\n// This will search for files ending in .test.js and require them\n// so that they are added to the webpack bundle\nvar context = require.context('.', true, /.+\\.test\\.js?$/);\ncontext.keys().forEach(context);\nmodule.exports = context;",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/browser.tests.entry.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "JSDOM",
    "memberof": "src/browser/browser.tests.entry.js",
    "static": true,
    "longname": "src/browser/browser.tests.entry.js~JSDOM",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/browser.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "jsdom",
    "memberof": "src/browser/browser.tests.entry.js",
    "static": true,
    "longname": "src/browser/browser.tests.entry.js~jsdom",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/browser.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "window",
    "memberof": "src/browser/browser.tests.entry.js",
    "static": true,
    "longname": "src/browser/browser.tests.entry.js~window",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/browser.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "copyProps",
    "memberof": "src/browser/browser.tests.entry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/browser.tests.entry.js~copyProps",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/browser.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "src",
        "types": [
          "*"
        ]
      },
      {
        "name": "target",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "context",
    "memberof": "src/browser/browser.tests.entry.js",
    "static": true,
    "longname": "src/browser/browser.tests.entry.js~context",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/browser.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "file",
    "name": "src/browser/components/CommentsList/index.js",
    "content": "export { default, CommentsList } from './CommentsList.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/CommentsList/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 55,
    "kind": "file",
    "name": "src/browser/components/CreateForumForm/index.js",
    "content": "export { default, CreateForumForm } from './CreateForumForm.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/CreateForumForm/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 56,
    "kind": "file",
    "name": "src/browser/components/CreateThreadForm/index.js",
    "content": "export { default, CreateThreadForm } from './CreateThreadForm.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/CreateThreadForm/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "src/browser/components/CreateThreadFormOrButton/index.js",
    "content": "export { default } from './CreateThreadFormOrButton.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/CreateThreadFormOrButton/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "file",
    "name": "src/browser/components/Decision/index.js",
    "content": "export { default, Decision } from './Decision.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/Decision/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/browser/components/Feedback/index.js",
    "content": "export { default, Feedback } from './Feedback.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/Feedback/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "file",
    "name": "src/browser/components/ForumsList/index.js",
    "content": "export { default, ForumsList } from './ForumsList.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/ForumsList/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "src/browser/components/MetaData/index.js",
    "content": "export { default, MetaData } from './MetaData.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/MetaData/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "file",
    "name": "src/browser/components/MoodsInsert/index.js",
    "content": "export { default, MoodsInsert } from './MoodsInsert.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/MoodsInsert/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 63,
    "kind": "file",
    "name": "src/browser/components/MoodTabs/index.js",
    "content": "export { default, MoodTabs } from './MoodTabs.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/MoodTabs/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "src/browser/components/PageLoading/index.js",
    "content": "export { default, PageLoading } from './PageLoading.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/PageLoading/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "file",
    "name": "src/browser/components/ShareButton/index.js",
    "content": "export { default } from './ShareButton.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/ShareButton/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 66,
    "kind": "file",
    "name": "src/browser/components/Sidebar/index.js",
    "content": "export { default, Sidebar, stateToProps, dispatchToProps } from './Sidebar.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/Sidebar/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 67,
    "kind": "file",
    "name": "src/browser/components/SocialLike/index.js",
    "content": "export { default, SocialLike } from './SocialLike.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/SocialLike/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/browser/components/ThreadsList/index.js",
    "content": "export { default, ThreadsList } from './ThreadsList.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/ThreadsList/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "file",
    "name": "src/browser/components/WelcomeCard/index.js",
    "content": "export { default, WelcomeCard } from './WelcomeCard.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/WelcomeCard/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "src/browser/components/WysiwygEditor/index.js",
    "content": "export { default, WysiwygEditor } from './WysiwygEditor.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/WysiwygEditor/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/browser/components/YoutubeSearch/index.js",
    "content": "export { default, YoutubeSearch } from './YoutubeSearch.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/components/YoutubeSearch/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "file",
    "name": "src/browser/i18n/en.js",
    "content": "export default {\n    login: 'login',\n    logout: 'logout',\n    profile: 'profile',\n    about: 'about',\n    search: 'search',\n    cancel: 'Cancel',\n    submit: 'Submit',\n    cant_be_empty: \"Can't be empty\",\n    name_cant_be_empty: \"Name can't be empty\",\n    please_login: 'Please login',\n    url_cant_be_empty: \"Url can't be empty\",\n    this_mood_already_exists: 'This mood already exist!',\n    something_wrong_with_this_url: 'Something wrong with this url',\n    add_something: 'Add something',\n    error_accured: 'Error accured!',\n    add_your_own_mood: 'Add your own mood!',\n    choose_your_language: 'Choose your language',\n    currently_zero_content_here: 'Currently zero content here',\n    image_url: 'Image url',\n    image_url_not_required: 'Image url (not required)',\n\n    mood_is_a_content_consumption_service: 'Mood is a content consumption service.',\n    pick_your_mood_and_service_will_generate: 'Pick your mood and service will generate unique personalized playlist for you',\n    ok: 'OK',\n    current_mood: 'Current mood: ',\n    incorrent_password: 'incorrect password',\n    user_does_not_exists: 'user does not exists',\n    user_already_exists: 'user already exists',\n    email_not_valid: 'email not valid',\n    must_not_be_empty: 'must not be empty',\n    no_whitespace_allowed: 'no whitespace allowed',\n    email: 'email',\n    username: 'username',\n    password: 'password',\n    sign_up: 'Sign Up',\n    loading: 'Loading',\n    add_url: 'Add url',\n    search_for_video: 'Search for video',\n    page_not_found: 'Page not found',\n    list_is_empty: 'List is empty',\n    this_video_already_exists_please_no_duplicates: 'This video already added! Please don\\'t add duplicates.',\n    whats_on_your_mind: \"What's on your mind?\",\n    // used for img's \"alt\" property\n    things_image: \"'s image\",\n    popular: 'popular',\n    new: 'new',\n    random: 'random',\n    created_moods: 'Created moods',\n    your_avatar: 'Your avatar',\n    i_like_it: 'i like it',\n    skip: 'skip',\n    dont_like_it_dont_show_again: 'i don\\'t like it (you will never see this again here)',\n    add_this_video: 'add this video',\n    welcome_to_our_awesome_boilerplate: 'Welcome to our awesome boilerplate.',\n    hope_you_will_enjoy_it: 'Hope you will enjoy it.',\n    description: 'Description',\n    forum: 'forum',\n    image_of_user_username: 'Image of user {username}',\n    user_on_APP_NAME: 'User {username} on ' + process.env.APP_NAME,\n    about_us: 'About Us',\n    forums_list: 'Forums list',\n    feedback: 'Feedback',\n    create_thread: 'Create thread',\n}\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/i18n/en.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "src/browser/i18n/ru.js",
    "content": "export default {\n    login: 'войти',\n    logout: 'выйти',\n    search: 'поиск',\n    profile: 'профиль',\n    about: 'о проекте',\n    cancel: 'Отмена',\n    submit: 'Отправить',\n    cant_be_empty: \"Не может быть пустым\",\n    name_cant_be_empty: \"Имя не может быть пустым\",\n    please_login: 'Пожалуйста, войдите',\n    url_cant_be_empty: \"Url не может быть пустым\",\n    this_mood_already_exists: 'Настроение с таким именем уже существует!',\n    something_wrong_with_this_url: 'Что-то не так с этим url',\n    error_accured: 'Произошла ошибка!',\n    add_something: 'Добавить что-нибудь',\n    add_your_own_mood: 'Создать настроение!',\n    choose_your_language: 'Выберите ваш язык',\n    currently_zero_content_here: 'Пока контента нет',\n    image_url: 'Url изображения',\n    image_url_not_required: 'Url изображения (не обязательно)',\n\n    mood_is_a_content_consumption_service: 'Mood - это сервис потребления контента.',\n    pick_your_mood_and_service_will_generate: 'Выберите свое настроение и сервис сгенерирует для вас уникальный персональный плейлист.',\n    ok: 'OK',\n    current_mood: 'Мое настроение: ',\n    incorrent_password: 'неправильный пароль',\n    user_does_not_exists: 'пользователя не существует',\n    user_already_exists: 'пользователь уже существует',\n    email_not_valid: 'адрес не действителен',\n    must_not_be_empty: 'не может быть пустым',\n    no_whitespace_allowed: 'пробелы не разрешены',\n    email: 'электронная почта',\n    username: 'имя пользователя',\n    password: 'пароль',\n    sign_up: 'Регистрация',\n    loading: 'Загрузка',\n    add_url: 'Добавить url',\n    search_for_video: 'Искать видео',\n    page_not_found: 'Страница не найдена',\n    list_is_empty: 'Список пуст',\n    this_video_already_exists_please_no_duplicates: 'Это видео уже добавлено! Пожалуйста, не добавляйте дубликатов.',\n    whats_on_your_mind: \"Что у тебя на уме?\",\n    // used for img's \"alt\" property\n    things_image: ' изображение',\n    popular: 'популярное',\n    new: 'новое',\n    random: 'случайное',\n    created_moods: 'Созданные настроения',\n    your_avatar: 'Ваш аватар',\n    i_like_it: 'мне нравится',\n    skip: 'пропустить',\n    dont_like_it_dont_show_again: 'мне не нравится (вы больше не увидите это видео)',\n    add_this_video: 'добавить это видео',\n    welcome_to_our_awesome_boilerplate: 'Добро пожаловать в наш классный boilerplate.',\n    hope_you_will_enjoy_it: 'Надеюсь он вам понравится.',\n    description: 'Описание',\n    forum: 'форум',\n    image_of_user_username: 'Изображение пользователя {username}',\n    user_on_APP_NAME: 'Пользователь {username} на ' + process.env.APP_NAME,\n    about_us: 'О нас',\n    forums_list: 'Список форумов',\n    feedback: 'Обратная связь',\n    create_thread: 'Создать тему',\n}\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/i18n/ru.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "src/browser/i18n/uk.js",
    "content": "export default {\n    login: 'увійти',\n    logout: 'вийти',\n    search: 'пошук',\n    profile: 'профіль',\n    about: 'про проект',\n    cancel: 'відміна',\n    submit: 'відправити',\n    name_cant_be_empty: \"Ім'я не може бути порожнім\",\n    please_login: 'Будь ласка, увійдіть',\n    url_cant_be_empty: \"Url не може бути порожнім\",\n    this_mood_already_exists: 'Настрій з таким ім\\'ям вже існує!',\n    something_wrong_with_this_url: 'Щось не так з цим url',\n    error_accured: 'Виникла помилка!',\n    add_something: 'Додати що-небудь',\n    add_your_own_mood: 'Створити настрій!',\n    choose_your_language: 'Оберіть вашу мову',\n    currently_zero_content_here: 'Поки контенту немає',\n}",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/i18n/uk.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "file",
    "name": "src/browser/pages/AboutPage/index.js",
    "content": "export { default, AboutPage } from './AboutPage.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/pages/AboutPage/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "file",
    "name": "src/browser/pages/ForumPage/index.js",
    "content": "export { default, ForumPage } from './ForumPage.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/pages/ForumPage/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 77,
    "kind": "file",
    "name": "src/browser/pages/ForumsPage/index.js",
    "content": "export { default, ForumsPage } from './ForumsPage.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/pages/ForumsPage/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "src/browser/pages/IndexPage/index.js",
    "content": "export { default, IndexPage } from './IndexPage.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/pages/IndexPage/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "src/browser/pages/ThreadPage/index.js",
    "content": "export { default, ThreadPage } from './ThreadPage.jsx'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/pages/ThreadPage/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "file",
    "name": "src/browser/redux/actions/actionHelpers.js",
    "content": "// import React from 'react'\nimport isObject from 'lodash/isObject'\nimport { toastr } from 'react-redux-toastr'\nimport { translate } from 'browser/containers/Translator'\n\n// TODO add comments\nexport function checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response\n  } else {\n    let error = new Error(response.statusText)\n    let message = ''\n    error.response = response\n    if (response.statusText == 'Unauthorized') message = translate('please_login')\n    const toastrType = 'warning';\n\t\t\tconst toastrOptions = {\n\t\t\t  icon: toastrType,\n\t\t\t  status: toastrType,\n        showCloseButton: false\n\t\t\t}\n    toastr.error('Error accured!', message || response.statusText, toastrOptions)\n    console.error(error);\n    console.info(response);\n  }\n}\n\n// TODO add typings\nexport function parseJSON(response) {\n  try {\n    return response.json()\n  } catch (error) {\n    console.error(error);\n    return null\n  }\n}\n/**\n * apply boilerplate headers and body to request\n * @export\n * @param {object} payload request data\n * @param {string} [method='POST'] request method ('PUT', 'POST', 'GET', 'DELETE')\n * @returns {object} request headers\n */\nexport function headersAndBody(payload, method = 'POST') {\n  // const body = isObject(payload) ?\n  return {\n\t\tmethod: method.toUpperCase(),\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tcredentials: 'same-origin',\n\t\tbody: JSON.stringify(payload),\n        // isObject(payload) ? payload : {[payload]: payload}\n      // ),\n\t}\n}\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/redux/actions/actionHelpers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "checkStatus",
    "memberof": "src/browser/redux/actions/actionHelpers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/actionHelpers.js~checkStatus",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/actionHelpers.js",
    "importStyle": "{checkStatus}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "response",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "parseJSON",
    "memberof": "src/browser/redux/actions/actionHelpers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/actionHelpers.js~parseJSON",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/actionHelpers.js",
    "importStyle": "{parseJSON}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "response",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "function",
    "name": "headersAndBody",
    "memberof": "src/browser/redux/actions/actionHelpers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/actionHelpers.js~headersAndBody",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/actionHelpers.js",
    "importStyle": "{headersAndBody}",
    "description": "apply boilerplate headers and body to request",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} request headers"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": "request data"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "'POST'",
        "defaultRaw": "'POST'",
        "name": "method",
        "description": "request method ('PUT', 'POST', 'GET', 'DELETE')"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "request headers"
    }
  },
  {
    "__docId__": 84,
    "kind": "file",
    "name": "src/browser/redux/actions/GlobalActions.js",
    "content": "import { createAction, createActions } from 'redux-actions'\n\nexport const actions = createActions({\n\t/**\n\t * @param {Boolean} payload value to set for headerIsShown\n\t */\n\tTOGGLE_HEADER: boolean => boolean,\n\t/**\n\t * @param {Boolean} payload value to set for sidebarIsOpen\n\t */\n\tTOGGLE_SIDEBAR: boolean => boolean,\n\t/**\n\t * @param {Boolean} payload value to set for controlsAreShown\n\t */\n\tTOGGLE_CONTROLS: boolean => boolean,\n})",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/redux/actions/GlobalActions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "actions",
    "memberof": "src/browser/redux/actions/GlobalActions.js",
    "static": true,
    "longname": "src/browser/redux/actions/GlobalActions.js~actions",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/GlobalActions.js",
    "importStyle": "{actions}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "file",
    "name": "src/browser/redux/actions/MoodActions.js",
    "content": "// @ts-check\nimport { createAction } from 'redux-actions'\nimport { checkStatus, parseJSON, headersAndBody } from'./actionHelpers'\nimport { toastr } from 'react-redux-toastr'\n\nconst moodsUrl = String(process.env.API_URL) + 'moods/'\n\n// export const { recieveMood, recieveMoods, fetchingInProgress, fetchingError } = createActions({\n//   recieveMood: mood => mood, // object => object\n//   recieveMoods: moods => moods,\n//   fetchingInProgress: value => value,\n//   fetchingError: reason => reason\n// })\n\n/**\n * @param {object} moods moods data (ex. pages, moods array)\n */\nexport const recieveMoods = createAction('RECIEVE_MOODS')\n/**\n * @param {object} mood\n */\nexport const recieveMood = createAction('RECIEVE_MOOD')\n/**\n * @param {array} moods\n */\nexport const recieveSearchResult = createAction('RECIEVE_SEARCH_RESULT')\n/**\n * @param {boolean} value // TODO add toggle\n */\nexport const fetchingInProgress = createAction('FETCHING_MOOD')\n/**\n * @param {string} reason\n */\nexport const fetchingError = createAction('FETCHING_ERROR', reason => reason)\n/**\n *\n */\nexport const unloadMood = createAction('UNLOAD_MOOD')\n\n/**\n *\n * @param {string} selector route api specifier (popular, new, random)\n * @param {number} pageNumber\n */\nexport const fetchMoods = (selector = 'popular', pageNumber = 1) => dispatch => {\n\tdispatch(fetchingInProgress())\n\treturn fetch(moodsUrl + selector + (pageNumber ? '/' + pageNumber : ''))\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then(data => {\n\t\t\tdata.currentPage = pageNumber\n\t\t\tdata.selector = selector\n\t\t\t// TODO\n\t\t\treturn dispatch(recieveMoods(data))\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(error)\n\t\t})\n}\n/**\n * fetch mood by slug\n * @param {string} slug\n */\nexport const fetchMood = (slug) => dispatch => {\n\tdispatch(fetchingInProgress())\n\treturn fetch(moodsUrl + 'mood/' + slug || '')\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then(mood => {\n\t\t\treturn dispatch(recieveMood((mood)))\n\t\t})\n}\n/**\n * create mood\n * @param {String} name mood name\n * @param {Function} callback\n */\nexport const insertMood = (name, callback) => dispatch => {\n\tdispatch(fetchingInProgress())\n\tfetch('/api/moods', headersAndBody({ name }))\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then(({slug}) => {\n\t\t\tcallback && callback(slug)\n\t\t\treturn slug\n\t\t})\n\t\t.then(() => dispatch(fetchMoods()))\n}\n/**\n * search moods by name\n * @param {String} name\n */\nexport const findMoods = name => dispatch => {\n\tdispatch(fetchingInProgress())\n\tfetch(moodsUrl + 'search/' + name)\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then(data => {\n\t\t\tconsole.log('moods have been found!', data)\n\t\t\treturn data\n\t\t})\n\t\t.then(data => dispatch(recieveSearchResult((data))))\n}\n\nexport const toggleDialog = () => dispatch => {\n\tdispatch({type: 'TOGGLE_MOODS_INSERT_DIALOG'})\n}",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/redux/actions/MoodActions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "moodsUrl",
    "memberof": "src/browser/redux/actions/MoodActions.js",
    "static": true,
    "longname": "src/browser/redux/actions/MoodActions.js~moodsUrl",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/actions/MoodActions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "recieveMoods",
    "memberof": "src/browser/redux/actions/MoodActions.js",
    "static": true,
    "longname": "src/browser/redux/actions/MoodActions.js~recieveMoods",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/MoodActions.js",
    "importStyle": "{recieveMoods}",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "moods",
        "description": "moods data (ex. pages, moods array)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "recieveMood",
    "memberof": "src/browser/redux/actions/MoodActions.js",
    "static": true,
    "longname": "src/browser/redux/actions/MoodActions.js~recieveMood",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/MoodActions.js",
    "importStyle": "{recieveMood}",
    "description": "",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "mood",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "recieveSearchResult",
    "memberof": "src/browser/redux/actions/MoodActions.js",
    "static": true,
    "longname": "src/browser/redux/actions/MoodActions.js~recieveSearchResult",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/MoodActions.js",
    "importStyle": "{recieveSearchResult}",
    "description": "",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "array"
        ],
        "spread": false,
        "optional": false,
        "name": "moods",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "name": "fetchingInProgress",
    "memberof": "src/browser/redux/actions/MoodActions.js",
    "static": true,
    "longname": "src/browser/redux/actions/MoodActions.js~fetchingInProgress",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/MoodActions.js",
    "importStyle": "{fetchingInProgress}",
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "// TODO add toggle"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "variable",
    "name": "fetchingError",
    "memberof": "src/browser/redux/actions/MoodActions.js",
    "static": true,
    "longname": "src/browser/redux/actions/MoodActions.js~fetchingError",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/MoodActions.js",
    "importStyle": "{fetchingError}",
    "description": "",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "reason",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "unloadMood",
    "memberof": "src/browser/redux/actions/MoodActions.js",
    "static": true,
    "longname": "src/browser/redux/actions/MoodActions.js~unloadMood",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/MoodActions.js",
    "importStyle": "{unloadMood}",
    "description": "",
    "lineNumber": 38,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "fetchMoods",
    "memberof": "src/browser/redux/actions/MoodActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/MoodActions.js~fetchMoods",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/MoodActions.js",
    "importStyle": "{fetchMoods}",
    "description": "",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "selector",
        "description": "route api specifier (popular, new, random)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pageNumber",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "fetchMood",
    "memberof": "src/browser/redux/actions/MoodActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/MoodActions.js~fetchMood",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/MoodActions.js",
    "importStyle": "{fetchMood}",
    "description": "fetch mood by slug",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "slug",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "insertMood",
    "memberof": "src/browser/redux/actions/MoodActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/MoodActions.js~insertMood",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/MoodActions.js",
    "importStyle": "{insertMood}",
    "description": "create mood",
    "lineNumber": 78,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "mood name"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "findMoods",
    "memberof": "src/browser/redux/actions/MoodActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/MoodActions.js~findMoods",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/MoodActions.js",
    "importStyle": "{findMoods}",
    "description": "search moods by name",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "toggleDialog",
    "memberof": "src/browser/redux/actions/MoodActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/MoodActions.js~toggleDialog",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/MoodActions.js",
    "importStyle": "{toggleDialog}",
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 99,
    "kind": "file",
    "name": "src/browser/redux/actions/NodeActions.js",
    "content": "import selectn from 'selectn'\nimport { stringify } from 'query-string'\nimport { createAction, createActions } from 'redux-actions'\nimport { checkStatus, parseJSON, headersAndBody } from'./actionHelpers'\n\nconst {API_URL} = process.env\nconst nodesUrl = API_URL + 'nodes/'\nconst decisionsUrl = API_URL + 'decisions/'\nconst externalsUrl = API_URL + 'externals/search/'\n\nexport const actions = createActions({\n  UNLOAD_NODE: () => null,\n  REMOVE_NODE: id => id,\n  TOGGLE_DIALOG: () => null,\n  RECIEVE_NODE: node => node,\n  RECIEVE_NODES: nodes => nodes,\n  UPDATE_NODE: object => object,\n//   FETCHING_NODE: () => null,\n  FETCHING_ERROR: reason => reason,\n  RECIEVE_SEARCHED_VIDEOS: videos => videos,\n})\n\n// TODO comments\nexport const nextVideo = () => (dispatch, getState) => {\n\tconst \tstate = getState().node,\n\t\t\tnodes = state.get('nodes'),\n\t\t\tcurrentNode = nodes.find(node => {\n\t\t\t\treturn node.get('id') == state.get('id')\n\t\t\t}),\n\t\t\tposition = nodes.indexOf(currentNode),\n\t\t\tnextNode = nodes.get(position + 1)\n\n\tif (nextNode) dispatch(actions.recieveNode(nextNode))\n\telse dispatch(actions.recieveNode(nodes.get(0)))\n}\n\n/**\n * create a node\n * @param {Object} payload content url\n */\nexport const insertNode = payload => (dispatch, getState) => {\n\treturn fetch(nodesUrl, headersAndBody(payload))\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then(function(response) {\n\t\t\tdispatch(actions.toggleDialog())\n\t\t\treturn dispatch(actions.recieveNode(response))\n\t\t})\n}\n\n/**\n * fetch nodes using mood slug\n * @param {String} slug mood slug (optional)\n */\nexport const fetchNodes = slug => (dispatch, getState) => {\n\tconst state = getState()\n\tconst nodeId = state.node.id\n\tconst moodSlug = slug || state.mood.get('slug')\n\n\t// dispatch(actions.fetchingNode())\n\n\treturn fetch(\n\t\tnodesUrl + moodSlug,\n\t\t{ credentials: 'same-origin' }\n\t)\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then(data => {\n\t\t\t/*\n\t\t\t\tunload node before assigning new one because\n\t\t\t\tmutability does not load youtube video if node is the same\n\t\t\t*/\n\t\t\tdispatch(actions.unloadNode())\n\t\t\treturn dispatch(actions.recieveNodes((data)))\n\t\t})\n\t\t.catch(err => console.error('fetchNode failed!', err))\n}\n\n/**\n * fetch node using mood slug\n * @param {String} slug mood slug (optional)\n */\nexport const fetchNode = slug => (dispatch, getState) => {\n\tconst state = getState()\n\tconst nodeId = state.node.id\n\tconst moodSlug = slug || state.mood.get('slug')\n\n\t// dispatch(actions.fetchingNode())\n\n\treturn fetch(\n\t\tnodesUrl + moodSlug + '/' + nodeId,\n\t\t{ credentials: 'same-origin' }\n\t)\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then(data => {\n\t\t\t/*\n\t\t\t\tunload node before assigning new one because\n\t\t\t\tmutability does not load youtube video if node is the same\n\t\t\t*/\n\t\t\tdispatch(actions.unloadNode())\n\t\t\treturn dispatch(actions.recieveNode((data)))\n\t\t})\n\t\t.catch(err => console.error('fetchNode failed!', err))\n}\n\n/**\n * search youtube videos by string\n * @param {String} query\n */\nexport const youtubeSearch = query => (dispatch, getState) => {\n\treturn fetch(\n\t\t\texternalsUrl + '?' + stringify({query}),\n\t\t\t{credentials: 'same-origin'},\n\t\t)\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then(data => {\n\t\t\treturn dispatch(actions.recieveSearchedVideos(data))\n\t\t})\n\t\t.catch(err => console.error('youtubeSearch failed!', err))\n}\n\n/**\n * vote for node\n * @param {Boolean} boolean value to set in Decision.vote\n */\nexport const vote = boolean => (dispatch, getState) => {\n\tconst { node } = getState()\n\tlet payload = {}\n\tpayload.NodeId = node.get('id')\n\tpayload.id = node.getIn(['Decision', 'id'])\n\tpayload.vote = boolean\n\treturn fetch(decisionsUrl, headersAndBody(payload, payload.id ? 'PUT' : 'POST'))\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then(({vote, NodeId}) => {\n\t\t\tif (vote) dispatch(actions.updateNode({Decision: {vote}}))\n\t\t\telse {\n\t\t\t\tdispatch(actions.removeNode(NodeId))\n\t\t\t\tdispatch(nextVideo())\n\t\t\t}\n\t\t})\n\t\t// TODO\n\t\t.catch(error => {\n\t\t\tconsole.error(error);\n\t\t\t// dispatch(actions.voteFailure)\n\t\t})\n}",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/redux/actions/NodeActions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "name": "API_URL",
    "memberof": "src/browser/redux/actions/NodeActions.js",
    "static": true,
    "longname": "src/browser/redux/actions/NodeActions.js~API_URL",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/actions/NodeActions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "name": "nodesUrl",
    "memberof": "src/browser/redux/actions/NodeActions.js",
    "static": true,
    "longname": "src/browser/redux/actions/NodeActions.js~nodesUrl",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/actions/NodeActions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "decisionsUrl",
    "memberof": "src/browser/redux/actions/NodeActions.js",
    "static": true,
    "longname": "src/browser/redux/actions/NodeActions.js~decisionsUrl",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/actions/NodeActions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "name": "externalsUrl",
    "memberof": "src/browser/redux/actions/NodeActions.js",
    "static": true,
    "longname": "src/browser/redux/actions/NodeActions.js~externalsUrl",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/actions/NodeActions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 104,
    "kind": "variable",
    "name": "actions",
    "memberof": "src/browser/redux/actions/NodeActions.js",
    "static": true,
    "longname": "src/browser/redux/actions/NodeActions.js~actions",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/NodeActions.js",
    "importStyle": "{actions}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "nextVideo",
    "memberof": "src/browser/redux/actions/NodeActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/NodeActions.js~nextVideo",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/NodeActions.js",
    "importStyle": "{nextVideo}",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "insertNode",
    "memberof": "src/browser/redux/actions/NodeActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/NodeActions.js~insertNode",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/NodeActions.js",
    "importStyle": "{insertNode}",
    "description": "create a node",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": "content url"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "fetchNodes",
    "memberof": "src/browser/redux/actions/NodeActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/NodeActions.js~fetchNodes",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/NodeActions.js",
    "importStyle": "{fetchNodes}",
    "description": "fetch nodes using mood slug",
    "lineNumber": 55,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "slug",
        "description": "mood slug (optional)"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "fetchNode",
    "memberof": "src/browser/redux/actions/NodeActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/NodeActions.js~fetchNode",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/NodeActions.js",
    "importStyle": "{fetchNode}",
    "description": "fetch node using mood slug",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "slug",
        "description": "mood slug (optional)"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "youtubeSearch",
    "memberof": "src/browser/redux/actions/NodeActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/NodeActions.js~youtubeSearch",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/NodeActions.js",
    "importStyle": "{youtubeSearch}",
    "description": "search youtube videos by string",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "query",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "vote",
    "memberof": "src/browser/redux/actions/NodeActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/NodeActions.js~vote",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/NodeActions.js",
    "importStyle": "{vote}",
    "description": "vote for node",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "boolean",
        "description": "value to set in Decision.vote"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 111,
    "kind": "file",
    "name": "src/browser/redux/actions/UserActions.js",
    "content": "import selectn from 'selectn'\nimport { SubmissionError } from 'redux-form'\nimport { translate } from 'browser/containers/Translator'\nimport { createAction, createActions } from 'redux-actions'\nimport { togglePageLoading } from 'browser/redux/ui/UiActions'\nimport { checkStatus, parseJSON, headersAndBody } from'./actionHelpers'\n\nconst authUrl = process.env.API_URL + 'auth/'\nconst usersUrl = process.env.API_URL + 'users/'\n\nexport const actions = createActions({\n\t/**\n\t * dispatch succesfully fetched user object\n\t * @param {Object} user object\n\t */\n\tRECIEVE_CURRENT_USER: user => user,\n\tREMOVE_CURRENT_USER: () => {},\n\tRECIEVE_FETCHED_USER: user => user,\n\tREMOVE_FETCHED_USER: () => {},\n\tFETCHING_USER: () => {},\n\tTOGGLE_LOGIN_DIALOG: boolean => boolean,\n})\nconst { fetchingUser, recieveFetchedUser, removeCurrentUser, recieveCurrentUser } = actions\n\nexport const loginUser = (payload, callback) => dispatch => {\n\treturn fetch(authUrl + 'login', headersAndBody(payload))\n\t\t\t.then(res => {\n\t\t\t\tconsole.log('res', res);\n\t\t\t\tif (res.status != 200) {\n\t\t\t\t\treturn res\n\t\t\t\t\t\t.text()\n\t\t\t\t\t\t.then(text => {\n\t\t\t\t\t\t\tlet password,\n\t\t\t\t\t\t\t\tusername\n\t\t\t\t\t\t\tif (text == 'Incorrect password') password = translate('incorrent_password')\n\t\t\t\t\t\t\tif (text == 'User not exists') password = translate('user_does_not_exists')\n\t\t\t\t\t\t\tthrow new SubmissionError({username, password})\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse return res\n\t\t\t\t\t\t\t.json()\n\t\t\t\t\t\t\t.then(user => {\n\t\t\t\t\t\t\t\t// reset form\n\t\t\t\t\t\t\t\tcallback && callback()\n\t\t\t\t\t\t\t\tdispatch(recieveCurrentUser((user)))\n\t\t\t\t\t\t\t})\n\t\t\t})\n}\n\nexport const createUser = (payload, callback) => dispatch => {\n\treturn fetch(authUrl + 'signup', headersAndBody(payload))\n\t\t\t.then(res => {\n\t\t\t\tif (res.status != 200) {\n\t\t\t\t\treturn res\n\t\t\t\t\t\t.text()\n\t\t\t\t\t\t.then(text => {\n\t\t\t\t\t\t\tlet email,\n\t\t\t\t\t\t\t\tusername\n\t\t\t\t\t\t\tif (text == 'user already exists') {\n\t\t\t\t\t\t\t\temail = translate('user_already_exists')\n\t\t\t\t\t\t\t\tusername = translate('user_already_exists')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthrow new SubmissionError({username: text, email: text})\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse return res\n\t\t\t\t\t\t\t.json()\n\t\t\t\t\t\t\t.then(user => {\n\t\t\t\t\t\t\t\t// reset form\n\t\t\t\t\t\t\t\tcallback && callback()\n\t\t\t\t\t\t\t\tdispatch(recieveCurrentUser((user)))\n\t\t\t\t\t\t\t})\n\t\t\t})\n}\n\n//\nexport const fetchCurrentUser = () => dispatch => {\n\tdispatch(fetchingUser())\n\treturn fetch(authUrl + 'current_user', {credentials: 'same-origin'})\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then(user => {\n\t\t\treturn dispatch(recieveCurrentUser((user)))\n\t\t\t// return dispatch(togglePageLoading())\n\t\t})\n\t\t.catch(err => console.error('fetchCurrentUser failed!', err)) // TODO add client side error handling\n}\n\n// TODO rename this to 'logoutUser'\nexport const logoutCurrentUser = () => dispatch => {\n\treturn fetch(authUrl + 'logout', {credentials: 'same-origin'})\n\t\t\t.then(() => dispatch(removeCurrentUser())) // TODO refactor without arrow function?\n\t\t\t.catch(err => console.error('logoutCurrentUser failed!', err))\n}\n/**\n * @param {Boolean} value value to set for loginIsOpen\n */\nexport const toggleLoginDialog = value => (dispatch, getState) => {\n\tdispatch(\n\t\tactions.toggleLoginDialog(\n\t\t\tvalue || !getState().user.get('loginIsOpen')\n\t\t)\n\t)\n}\n\nexport const fetchUser = username => dispatch => {\n\tdispatch(togglePageLoading())\n\treturn fetch(`${usersUrl}user/${username}`)\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then(user => {\n\t\t\tdispatch(recieveFetchedUser((user)))\n\t\t\treturn dispatch(togglePageLoading())\n\t\t})\n\t\t.catch(err => console.error('fetchUser failed!', err)) // TODO add client side error handling\n}\n/**\n * update user profile\n * @param {UserId} UserId user identifier\n * @param {object} body profile attributes to update\n */\nexport const updateUser = (UserId, body) => dispatch => {\n\t// dispatch(fetchingUser())\n\treturn fetch(\n\t\t`${usersUrl}user/${UserId}`,\n\t\theadersAndBody({...body}, 'PUT')\n\t)\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then(user => dispatch(recieveCurrentUser((user))))\n\t\t.catch(err => console.error('updateUser failed!', err))\n}",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/redux/actions/UserActions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 112,
    "kind": "variable",
    "name": "authUrl",
    "memberof": "src/browser/redux/actions/UserActions.js",
    "static": true,
    "longname": "src/browser/redux/actions/UserActions.js~authUrl",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/actions/UserActions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 113,
    "kind": "variable",
    "name": "usersUrl",
    "memberof": "src/browser/redux/actions/UserActions.js",
    "static": true,
    "longname": "src/browser/redux/actions/UserActions.js~usersUrl",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/actions/UserActions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 114,
    "kind": "variable",
    "name": "actions",
    "memberof": "src/browser/redux/actions/UserActions.js",
    "static": true,
    "longname": "src/browser/redux/actions/UserActions.js~actions",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/UserActions.js",
    "importStyle": "{actions}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "variable",
    "name": "fetchingUser",
    "memberof": "src/browser/redux/actions/UserActions.js",
    "static": true,
    "longname": "src/browser/redux/actions/UserActions.js~fetchingUser",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/actions/UserActions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 116,
    "kind": "function",
    "name": "loginUser",
    "memberof": "src/browser/redux/actions/UserActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/UserActions.js~loginUser",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/UserActions.js",
    "importStyle": "{loginUser}",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "function",
    "name": "createUser",
    "memberof": "src/browser/redux/actions/UserActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/UserActions.js~createUser",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/UserActions.js",
    "importStyle": "{createUser}",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "payload",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "function",
    "name": "fetchCurrentUser",
    "memberof": "src/browser/redux/actions/UserActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/UserActions.js~fetchCurrentUser",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/UserActions.js",
    "importStyle": "{fetchCurrentUser}",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "logoutCurrentUser",
    "memberof": "src/browser/redux/actions/UserActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/UserActions.js~logoutCurrentUser",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/UserActions.js",
    "importStyle": "{logoutCurrentUser}",
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "toggleLoginDialog",
    "memberof": "src/browser/redux/actions/UserActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/UserActions.js~toggleLoginDialog",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/UserActions.js",
    "importStyle": "{toggleLoginDialog}",
    "description": "",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "value to set for loginIsOpen"
      }
    ],
    "return": null
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "fetchUser",
    "memberof": "src/browser/redux/actions/UserActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/UserActions.js~fetchUser",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/UserActions.js",
    "importStyle": "{fetchUser}",
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "params": [
      {
        "name": "username",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 122,
    "kind": "function",
    "name": "updateUser",
    "memberof": "src/browser/redux/actions/UserActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/actions/UserActions.js~updateUser",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/actions/UserActions.js",
    "importStyle": "{updateUser}",
    "description": "update user profile",
    "lineNumber": 122,
    "params": [
      {
        "nullable": null,
        "types": [
          "UserId"
        ],
        "spread": false,
        "optional": false,
        "name": "UserId",
        "description": "user identifier"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "body",
        "description": "profile attributes to update"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "file",
    "name": "src/browser/redux/forum/ForumActions.js",
    "content": "import selectn from 'selectn'\nimport { stringify } from 'query-string'\nimport { createAction, createActions } from 'redux-actions'\nimport { checkStatus, parseJSON, headersAndBody } from'browser/redux/actions/actionHelpers'\n\nconst forumsUrl = process.env.API_URL + 'forums/'\nconst threadsUrl = process.env.API_URL + 'threads/'\n\nexport const actions = createActions({\n  UNLOAD_FORUM: () => null,\n  REMOVE_FORUM: id => id,\n  TOGGLE_DIALOG: () => null,\n  ADD_FORUM: forum => forum,\n  RECIEVE_FORUM: forum => forum,\n  RECIEVE_FORUMS: forums => forums,\n  ADD_THREAD: thread => thread,\n  RECIEVE_THREAD: thread => thread,\n  UPDATE_FORUM: object => object,\n  TOGGLE_FORUM_FETCHING: boolean => boolean,\n  FETCHING_ERROR: reason => reason,\n  RECIEVE_SEARCHED_VIDEOS: videos => videos,\n})\n\n/**\n * create a forum\n * @param {object} payload data to pass\n * @param {function} callback callback function\n */\nexport const insertForum = (payload, callback) => (dispatch, getState) => {\n\treturn fetch(forumsUrl, headersAndBody(payload))\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then((response) => {\n\t\t\tdispatch(actions.addForum(response))\n\t\t\treturn callback && callback(response)\n\t\t})\n}\n\n/**\n * create a thread\n * @param {object} payload data to pass\n * @param {function} callback callback function\n */\nexport const insertThread = (payload, callback) => (dispatch, getState) => {\n\treturn fetch(threadsUrl, headersAndBody(payload))\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then((response) => {\n\t\t\tdispatch(actions.addThread(response))\n\t\t\treturn callback && callback(response)\n\t\t})\n}\n\n/**\n * fetch forum using forum slug\n * @param {string} slug forum slug (optional)\n */\nexport const fetchForum = slug => (dispatch, getState) => {\n\tconst state = getState()\n\tconst forumSlug = slug || state.forum.get('slug')\n\treturn fetch(\n\t\tforumsUrl + 'forum/' + forumSlug,\n\t\t{ credentials: 'same-origin' }\n\t)\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then(data => {\n\t\t\treturn dispatch(actions.recieveForum((data)))\n\t\t})\n\t\t.catch(err => console.error('fetchforum failed!', err))\n}\n\n/**\n * fetch forums\n * @param {number} [page=1] forums page (optional)\n */\nexport const fetchForums = (page = 1) => (dispatch, getState) => {\n\treturn fetch(forumsUrl + page)\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then(data => dispatch(actions.recieveForums((data))))\n\t\t.catch(err => console.error('fetchForums failed!', err))\n}\n\n/**\n * fetch thread using thread slug\n * @param {string} slug thread slug\n */\nexport const fetchThread = slug => (dispatch, getState) => {\n\treturn fetch(threadsUrl + 'thread/' + slug)\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then(data => {\n\t\t\treturn dispatch(actions.recieveThread((data)))\n\t\t})\n\t\t.catch(err => console.error('fetchthread failed!', err))\n}\n\n/**\n * fetch threads\n * @param {number} parentId parent identificator\n * @param {number} [page=1] threads page (optional)\n */\nexport const fetchThreads = (parentId, page=1) => (dispatch, getState) => {\n\treturn fetch(threadsUrl + parentId + '/' + page)\n\t\t.then(checkStatus)\n\t\t.then(parseJSON)\n\t\t.then(data => dispatch(actions.recieveThreads((data))))\n\t\t.catch(err => console.error('fetchthread failed!', err))\n}",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/redux/forum/ForumActions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 124,
    "kind": "variable",
    "name": "forumsUrl",
    "memberof": "src/browser/redux/forum/ForumActions.js",
    "static": true,
    "longname": "src/browser/redux/forum/ForumActions.js~forumsUrl",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/forum/ForumActions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 125,
    "kind": "variable",
    "name": "threadsUrl",
    "memberof": "src/browser/redux/forum/ForumActions.js",
    "static": true,
    "longname": "src/browser/redux/forum/ForumActions.js~threadsUrl",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/forum/ForumActions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 126,
    "kind": "variable",
    "name": "actions",
    "memberof": "src/browser/redux/forum/ForumActions.js",
    "static": true,
    "longname": "src/browser/redux/forum/ForumActions.js~actions",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/forum/ForumActions.js",
    "importStyle": "{actions}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "insertForum",
    "memberof": "src/browser/redux/forum/ForumActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/forum/ForumActions.js~insertForum",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/forum/ForumActions.js",
    "importStyle": "{insertForum}",
    "description": "create a forum",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": "data to pass"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "callback function"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "function",
    "name": "insertThread",
    "memberof": "src/browser/redux/forum/ForumActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/forum/ForumActions.js~insertThread",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/forum/ForumActions.js",
    "importStyle": "{insertThread}",
    "description": "create a thread",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": "data to pass"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "callback function"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "function",
    "name": "fetchForum",
    "memberof": "src/browser/redux/forum/ForumActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/forum/ForumActions.js~fetchForum",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/forum/ForumActions.js",
    "importStyle": "{fetchForum}",
    "description": "fetch forum using forum slug",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "slug",
        "description": "forum slug (optional)"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "function",
    "name": "fetchForums",
    "memberof": "src/browser/redux/forum/ForumActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/forum/ForumActions.js~fetchForums",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/forum/ForumActions.js",
    "importStyle": "{fetchForums}",
    "description": "fetch forums",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "page",
        "description": "forums page (optional)"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "function",
    "name": "fetchThread",
    "memberof": "src/browser/redux/forum/ForumActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/forum/ForumActions.js~fetchThread",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/forum/ForumActions.js",
    "importStyle": "{fetchThread}",
    "description": "fetch thread using thread slug",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "slug",
        "description": "thread slug"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "function",
    "name": "fetchThreads",
    "memberof": "src/browser/redux/forum/ForumActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/forum/ForumActions.js~fetchThreads",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/forum/ForumActions.js",
    "importStyle": "{fetchThreads}",
    "description": "fetch threads",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "parentId",
        "description": "parent identificator"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "page",
        "description": "threads page (optional)"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "file",
    "name": "src/browser/redux/forum/ForumReducer.js",
    "content": "import isEmpty from 'lodash/isEmpty'\nimport { Map, List, fromJS } from 'immutable'\n\nconst threadStructure = {\n\t\t\t\t\t\t\tid: '',\n\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\tslug: '',\n\t\t\t\t\t\t\ttext: '',\n\t\t\t\t\t\t\tUserId: '',\n\t\t\t\t\t\t\tparentId: '',\n\t\t\t\t\t\t\tisClosed: null,\n\t\t\t\t\t\t\tUser: {},\n\t\t\t\t\t\t}\n\nconst forumStructure = \t{\n\t\t\t\t\t\t\tid: '',\n\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\tslug: '',\n\t\t\t\t\t\t\tUserId: '',\n\t\t\t\t\t\t}\n\nexport const initialState = fromJS({\n\t\t\t\t\t\t\terror: '',\n\t\t\t\t\t\t\tforums: {\n\t\t\t\t\t\t\t\ttotalPages: 0,\n\t\t\t\t\t\t\t\tcurrentPage: 0,\n\t\t\t\t\t\t\t\tvalues: [],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tthreads: {\n\t\t\t\t\t\t\t\ttotalPages: 0,\n\t\t\t\t\t\t\t\tcurrentPage: 0,\n\t\t\t\t\t\t\t\tvalues: [],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\t\tfinishedLoading: true,\n\t\t\t\t\t\t\tdialogIsOpen: false,\n\t\t\t\t\t\t\tcontentNotFound: false,\n\t\t\t\t\t\t\t// TODO: do i need this?\n\t\t\t\t\t\t\tsearchIsActive: false,\n\t\t\t\t\t\t\tthread: threadStructure,\n\t\t\t\t\t\t\t...forumStructure\n\t\t\t\t\t\t})\n\nfunction checkAndPush(array, payload) {\n\treturn isEmpty(payload)\n\t\t\t? array\n\t\t\t: array.push(Map(payload))\n}\n\nexport default (state = initialState, {type, payload}) => {\n\tswitch(type) {\n\t\tcase 'ADD_FORUM':\n\t\t\treturn state\n\t\t\t\t.updateIn(\n\t\t\t\t\t['forums', 'values'],\n\t\t\t\t\tarr => checkAndPush(arr, payload)\n\t\t\t\t)\n\t\t// push thread into \"threads\" array\n\t\tcase 'ADD_THREAD':\n\t\t\treturn state\n\t\t\t\t.updateIn(\n\t\t\t\t\t['threads', 'values'],\n\t\t\t\t\tarr => checkAndPush(arr, payload)\n\t\t\t\t)\n\t\tcase 'RECIEVE_FORUM':\n\t\t\treturn state\n\t\t\t\t.merge(payload)\n\t\t\t\t// .updateIn(['forums', 'values'], arr => {\n\t\t\t\t// \treturn isEmpty(payload)\n\t\t\t\t// \t\t? arr\n\t\t\t\t// \t\t: arr.push(Map(payload))\n\t\t\t\t// })\n\t\t\t\t.merge({\n\t\t\t\t\tloading: false,\n\t\t\t\t\t// finishedLoading: true,\n\t\t\t\t\tcontentNotFound: isEmpty(payload),\n\t\t\t\t})\n\t\tcase 'RECIEVE_FORUMS':\n\t\t\treturn state\n\t\t\t\t.mergeDeep({\n\t\t\t\t\tloading: false,\n\t\t\t\t\tforums: payload,\n\t\t\t\t})\n\t\tcase 'RECIEVE_THREAD':\n\t\t\treturn state.merge({thread: payload})\n\t\tcase 'UPDATE_FORUM':\n\t\t\treturn state.mergeDeep(payload)\n\t\tcase 'TOGGLE_DIALOG':\n\t\t\treturn state.set('dialogIsOpen', !state.get('dialogIsOpen'))\n\t\tcase 'UNLOAD_FORUM':\n\t\t\treturn state\n\t\t\t\t.merge(forumStructure)\n\t\t\t\t.merge({forums: List()})\n\t\t\t\t.mergeDeep({\n\t\t\t\t\tloading: false,\n\t\t\t\t\t// finishedLoading: false,\n\t\t\t\t\tcontentNotFound: false,\n\t\t\t\t})\n\t\t// remove forum from forums list\n\t\tcase 'REMOVE_FORUM':\n\t\t\treturn state\n\t\t\t\t.merge({\n\t\t\t\t\tforums: state\n\t\t\t\t\t\t\t.get('forums')\n\t\t\t\t\t\t\t.filter(forum => forum.get('id') !== payload)\n\t\t\t\t})\n\t\tdefault:\n\t\t\treturn state\n\t}\n}",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/redux/forum/ForumReducer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 134,
    "kind": "variable",
    "name": "threadStructure",
    "memberof": "src/browser/redux/forum/ForumReducer.js",
    "static": true,
    "longname": "src/browser/redux/forum/ForumReducer.js~threadStructure",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/forum/ForumReducer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": *, \"name\": *, \"slug\": *, \"text\": *, \"UserId\": *, \"parentId\": *, \"isClosed\": *, \"User\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "name": "forumStructure",
    "memberof": "src/browser/redux/forum/ForumReducer.js",
    "static": true,
    "longname": "src/browser/redux/forum/ForumReducer.js~forumStructure",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/forum/ForumReducer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": *, \"name\": *, \"slug\": *, \"UserId\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 136,
    "kind": "variable",
    "name": "initialState",
    "memberof": "src/browser/redux/forum/ForumReducer.js",
    "static": true,
    "longname": "src/browser/redux/forum/ForumReducer.js~initialState",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/forum/ForumReducer.js",
    "importStyle": "{initialState}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "function",
    "name": "checkAndPush",
    "memberof": "src/browser/redux/forum/ForumReducer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/forum/ForumReducer.js~checkAndPush",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/forum/ForumReducer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      },
      {
        "name": "payload",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 138,
    "kind": "function",
    "name": "ForumReducer",
    "memberof": "src/browser/redux/forum/ForumReducer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/forum/ForumReducer.js~ForumReducer",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/forum/ForumReducer.js",
    "importStyle": "ForumReducer",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "initialState",
        "defaultValue": "initialState"
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"type\": *, \"payload\": *}"
        ],
        "defaultRaw": {
          "type": null,
          "payload": null
        },
        "defaultValue": "{\"type\":null,\"payload\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "file",
    "name": "src/browser/redux/reducers/GlobalReducer.js",
    "content": "import { Map } from 'immutable'\nimport isBoolean from 'lodash/isBoolean'\n\n// TODO this is a mess, reworking needed\n// TODO rename to UiReducer\nexport const initialState =\tMap({\n\t\t\t\t\t\t\t\theaderIsShown: true,\n\t\t\t\t\t\t\t\tsidebarIsOpen: false,\n\t\t\t\t\t\t\t\tplayerIsReady: false,\n\t\t\t\t\t\t\t\tcontrolsAreShown: false,\n\t\t\t\t\t\t\t})\n\nexport default (state = initialState, { type, payload }) => {\n\t/**\n\t * toggle value in state\n\t * @param {any} selector value to update\n\t * @returns new state with updated field\n\t */\n\tfunction toggleElement(selector) {\n\t\t// event could passed to this function\n\t\tconst value = \tisBoolean(payload)\n\t\t\t\t\t\t? payload\n\t\t\t\t\t\t: !state.get(selector)\n\t\treturn state.set(selector, value)\n\t}\n\tswitch(type) {\n\t\tcase 'TOGGLE_HEADER':\n\t\t\treturn toggleElement('headerIsShown')\n\t\tcase 'TOGGLE_SIDEBAR':\n\t\t\treturn toggleElement('sidebarIsOpen')\n\t\tcase 'TOGGLE_CONTROLS':\n\t\t\treturn toggleElement('controlsAreShown')\n\t\tcase 'TOGGLE_PLAYER_IS_READY':\n\t\t\treturn toggleElement('playerIsReady')\n\t\tdefault:\n\t\t\treturn state\n\t}\n}",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/redux/reducers/GlobalReducer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 140,
    "kind": "variable",
    "name": "initialState",
    "memberof": "src/browser/redux/reducers/GlobalReducer.js",
    "static": true,
    "longname": "src/browser/redux/reducers/GlobalReducer.js~initialState",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/reducers/GlobalReducer.js",
    "importStyle": "{initialState}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 141,
    "kind": "function",
    "name": "GlobalReducer",
    "memberof": "src/browser/redux/reducers/GlobalReducer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/reducers/GlobalReducer.js~GlobalReducer",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/reducers/GlobalReducer.js",
    "importStyle": "GlobalReducer",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "initialState",
        "defaultValue": "initialState"
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"type\": *, \"payload\": *}"
        ],
        "defaultRaw": {
          "type": null,
          "payload": null
        },
        "defaultValue": "{\"type\":null,\"payload\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "file",
    "name": "src/browser/redux/reducers/MoodReducer.js",
    "content": "import { handleActions } from 'redux-actions'\nimport { toastr } from 'react-redux-toastr'\nimport { recieveMood, recieveMoods, fetchingInProgress, fetchingError } from '../actions/MoodActions'\nimport { Map, List } from 'immutable'\n\nconst emptyMoodStructure = {\n\tid: '',\n\tname: '',\n\tslug: '',\n\tNodes: List(),\n}\n\nexport const emptyMoodsObject = Map({\n\tmoods: List(),\n\ttotalPages: 0,\n\tcurrentPage: 0,\n})\n\nconst initialState = \tMap({\n\t\t\t\t\t\t\t...emptyMoodStructure,\n\t\t\t\t\t\t\tdialogIsOpen: false,\n\t\t\t\t\t\t\tnew: emptyMoodsObject,\n\t\t\t\t\t\t\trandom: emptyMoodsObject,\n\t\t\t\t\t\t\tpopular: emptyMoodsObject,\n\t\t\t\t\t\t\tsearchedMoods: emptyMoodsObject,\n\t\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\t})\n\nexport default (state = initialState, {type, payload}) => {\n\tswitch(type) {\n\t\tcase 'RECIEVE_MOODS':\n\t\t\treturn state\n\t\t\t\t\t.merge({loading: false})\n\t\t\t\t\t.mergeIn([payload.selector], payload)\n\t\tcase 'RECIEVE_MOOD':\n\t\t\treturn state.merge({\n\t\t\t\t\t\t...payload,\n\t\t\t\t\t\tloading: false\n\t\t\t\t\t})\n\n\t\tcase 'TOGGLE_MOODS_INSERT_DIALOG':\n\t\t\treturn state.set('dialogIsOpen', !state.get('dialogIsOpen'))\n\t\tcase 'INSERT_MOOD_SUCCES':\n\t\t\treturn state.merge({\n\t\t\t\t\t\tmoods: [...state.get('moods'), payload.mood], // TODO rework this with immutable array method\n\t\t\t\t\t\tloading: false\n\t\t\t\t\t})\n\t\tcase 'FETCHING_MOOD':\n\t\t\treturn state.set('loading', true)\n\t\tcase 'RECIEVE_SEARCH_RESULT':\n\t\t\treturn state.merge({\n\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\tsearchedMoods: payload,\n\t\t\t\t\t})\n\t\tcase 'UNLOAD_MOOD':\n\t\t\treturn state.merge(emptyMoodStructure)\n\t\tdefault:\n\t\t\treturn state\n\t}\n}",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/redux/reducers/MoodReducer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 143,
    "kind": "variable",
    "name": "emptyMoodStructure",
    "memberof": "src/browser/redux/reducers/MoodReducer.js",
    "static": true,
    "longname": "src/browser/redux/reducers/MoodReducer.js~emptyMoodStructure",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/reducers/MoodReducer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": *, \"name\": *, \"slug\": *, \"Nodes\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 144,
    "kind": "variable",
    "name": "emptyMoodsObject",
    "memberof": "src/browser/redux/reducers/MoodReducer.js",
    "static": true,
    "longname": "src/browser/redux/reducers/MoodReducer.js~emptyMoodsObject",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/reducers/MoodReducer.js",
    "importStyle": "{emptyMoodsObject}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 145,
    "kind": "variable",
    "name": "initialState",
    "memberof": "src/browser/redux/reducers/MoodReducer.js",
    "static": true,
    "longname": "src/browser/redux/reducers/MoodReducer.js~initialState",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/reducers/MoodReducer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 146,
    "kind": "function",
    "name": "MoodReducer",
    "memberof": "src/browser/redux/reducers/MoodReducer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/reducers/MoodReducer.js~MoodReducer",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/reducers/MoodReducer.js",
    "importStyle": "MoodReducer",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "initialState",
        "defaultValue": "initialState"
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"type\": *, \"payload\": *}"
        ],
        "defaultRaw": {
          "type": null,
          "payload": null
        },
        "defaultValue": "{\"type\":null,\"payload\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "file",
    "name": "src/browser/redux/reducers/NodeReducer.js",
    "content": "import isEmpty from 'lodash/isEmpty'\nimport { Map, List } from 'immutable'\n\nconst decisionStructure = Map({\n\t\t\t\t\t\t\t\trating: '',\n\t\t\t\t\t\t\t\tUserId: '',\n\t\t\t\t\t\t\t\tNodeId: '',\n\t\t\t\t\t\t\t\tMoodId: '',\n\t\t\t\t\t\t\t\tvote: null,\n\t\t\t\t\t\t\t\tNodeRating: '',\n\t\t\t\t\t\t\t\tnextViewAt: '',\n\t\t\t\t\t\t\t})\n\nconst nodeStructure = \tMap({\n\t\t\t\t\t\t\tid: '',\n\t\t\t\t\t\t\turl: '',\n\t\t\t\t\t\t\ttype: '',\n\t\t\t\t\t\t\tUserId: '',\n\t\t\t\t\t\t\tMoodId: '',\n\t\t\t\t\t\t\trating: '',\n\t\t\t\t\t\t\tprovider: '',\n\t\t\t\t\t\t\tcontentId: '',\n\t\t\t\t\t\t\tDecision: decisionStructure.toJS()\n\t\t\t\t\t\t})\n\nexport const initialState = Map({\n\t\t\t\t\t\t\terror: '',\n\t\t\t\t\t\t\tnodes: List(),\n\t\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\t\tfinishedLoading: true,\n\t\t\t\t\t\t\tdialogIsOpen: false,\n\t\t\t\t\t\t\tcontentNotFound: false,\n\t\t\t\t\t\t\tsearchIsActive: false, // TODO do i need this?\n\t\t\t\t\t\t\tsearchedVideos: List(),\n\t\t\t\t\t\t\t...nodeStructure.toJS()\n\t\t\t\t\t\t})\n\nexport default (state = initialState, {type, payload}) => {\n\tswitch(type) {\n\t\t// case 'FETCHING_NODE':\n\t\t// \treturn state.merge({\n\t\t// \t\tloading: true,\n\t\t// \t\tfinishedLoading: false,\n\t\t// \t\tcontentNotFound: false,\n\t\t// \t})\n\t\tcase 'RECIEVE_NODE':\n\t\t\treturn state\n\t\t\t\t.merge(payload)\n\t\t\t\t.updateIn(['nodes'], arr => {\n\t\t\t\t\treturn isEmpty(payload)\n\t\t\t\t\t\t? arr\n\t\t\t\t\t\t: arr.push(Map(payload))\n\t\t\t\t})\n\t\t\t\t.merge({\n\t\t\t\t\tloading: false,\n\t\t\t\t\t// finishedLoading: true,\n\t\t\t\t\tcontentNotFound: isEmpty(payload),\n\t\t\t\t})\n\t\tcase 'RECIEVE_NODES':\n\t\t\treturn state\n\t\t\t\t.mergeDeep({\n\t\t\t\t\t...payload[0],\n\t\t\t\t\tnodes: payload,\n\t\t\t\t\tloading: false,\n\t\t\t\t\t// finishedLoading: true,\n\t\t\t\t\tcontentNotFound: isEmpty(payload),\n\t\t\t\t})\n\t\tcase 'UPDATE_NODE':\n\t\t\treturn state.mergeDeep(payload)\n\t\tcase 'TOGGLE_DIALOG':\n\t\t\treturn state.set('dialogIsOpen', !state.get('dialogIsOpen'))\n\t\tcase 'UNLOAD_NODE':\n\t\t\treturn state\n\t\t\t\t.merge(nodeStructure)\n\t\t\t\t.merge({nodes: List()})\n\t\t\t\t.mergeDeep({\n\t\t\t\t\tloading: false,\n\t\t\t\t\t// finishedLoading: false,\n\t\t\t\t\tcontentNotFound: false,\n\t\t\t\t})\n\t\t// remove node from nodes list\n\t\tcase 'REMOVE_NODE':\n\t\t\treturn state\n\t\t\t\t.merge({\n\t\t\t\t\tnodes: state\n\t\t\t\t\t\t\t.get('nodes')\n\t\t\t\t\t\t\t.filter(node => node.get('id') !== payload)\n\t\t\t\t})\n\t\tcase 'RECIEVE_SEARCHED_VIDEOS':\n\t\t\treturn state.merge({\n\t\t\t\tsearchIsActive: false,\n\t\t\t\tsearchedVideos: payload\n\t\t\t})\n\t\tdefault:\n\t\t\treturn state\n\t}\n}",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/redux/reducers/NodeReducer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 148,
    "kind": "variable",
    "name": "decisionStructure",
    "memberof": "src/browser/redux/reducers/NodeReducer.js",
    "static": true,
    "longname": "src/browser/redux/reducers/NodeReducer.js~decisionStructure",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/reducers/NodeReducer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 149,
    "kind": "variable",
    "name": "nodeStructure",
    "memberof": "src/browser/redux/reducers/NodeReducer.js",
    "static": true,
    "longname": "src/browser/redux/reducers/NodeReducer.js~nodeStructure",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/reducers/NodeReducer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "name": "initialState",
    "memberof": "src/browser/redux/reducers/NodeReducer.js",
    "static": true,
    "longname": "src/browser/redux/reducers/NodeReducer.js~initialState",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/reducers/NodeReducer.js",
    "importStyle": "{initialState}",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "function",
    "name": "NodeReducer",
    "memberof": "src/browser/redux/reducers/NodeReducer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/reducers/NodeReducer.js~NodeReducer",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/reducers/NodeReducer.js",
    "importStyle": "NodeReducer",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "initialState",
        "defaultValue": "initialState"
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"type\": *, \"payload\": *}"
        ],
        "defaultRaw": {
          "type": null,
          "payload": null
        },
        "defaultValue": "{\"type\":null,\"payload\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "file",
    "name": "src/browser/redux/reducers/RootReducer.js",
    "content": "import { combineReducers } from 'redux'\nimport { reducer as form } from 'redux-form'\nimport { reducer as toastr } from 'react-redux-toastr'\nimport { routerReducer as routing } from 'react-router-redux'\n\nimport global, { initialState as globalState } from './GlobalReducer'\nimport user, { initialState as userState } from './UserReducer'\nimport mood, { initialState as moodState } from './MoodReducer'\nimport node, { initialState as nodeState } from './NodeReducer'\nimport forum, { initialState as forumState } from 'browser/redux/forum/ForumReducer'\nimport ui, { initialState as uiState } from 'browser/redux/ui/UiReducer' \n// ⚠️ First hook for cli! Do not remove 💀 \n\nexport const initialState = {\n    global: globalState,\n    user: userState,\n    mood: moodState,\n    node: nodeState,\nforum: forumState,\nui: uiState, \n// ⚠️ Second hook for cli! Do not remove 💀 \n}\n\nexport default combineReducers({\n    global,\n    user,\n    mood,\n    node,\n    form,\n    toastr,\n    routing,\nforum,\nui, \n// ⚠️ Third hook for cli! Do not remove 💀 \n})",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/redux/reducers/RootReducer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 153,
    "kind": "variable",
    "name": "initialState",
    "memberof": "src/browser/redux/reducers/RootReducer.js",
    "static": true,
    "longname": "src/browser/redux/reducers/RootReducer.js~initialState",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/reducers/RootReducer.js",
    "importStyle": "{initialState}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{\"global\": *, \"user\": *, \"mood\": *, \"node\": *, \"forum\": *, \"ui\": *}"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "file",
    "name": "src/browser/redux/reducers/UserReducer.js",
    "content": "import isEmpty from 'lodash/isEmpty'\nimport { Map, fromJS } from 'immutable'\nimport { emptyMoodsObject } from 'browser/redux/reducers/MoodReducer'\n\nconst emptyProfileObject = {\n\tid: '',\n\tlanguage: '',\n\tUserId: '',\n\t// to display <MoodsList /> in <UserPage />\n\t...emptyMoodsObject,\n}\n\nconst emptyLocalObject = {\n\tid: '',\n\tusername: '',\n\temail: '',\n\tUserId: '',\n}\n\nconst emptyVkObject = {\n\tid: '',\n\timage: '',\n\tUserId: '',\n\tusername: '',\n\tdisplayName: '',\n}\n\nconst emptyTwitterObject = {\n\tid: '',\n\timage: '',\n\tUserId: '',\n\tusername: '',\n\tdisplayName: '',\n}\n\nconst emptyUserObject = {\n\t// use \"undfined\" to avoid proptypes errors\n\tid: undefined,\n\trole: '',\n\timage: '',\n\tdisplayName: '',\n\tVk: emptyVkObject,\n\tTwitter: emptyTwitterObject,\n\tProfile: emptyProfileObject,\n\tLocal: emptyLocalObject,\n}\n\nexport const initialState = fromJS({\n\t...emptyUserObject,\n\tloading: false,\n\tloginIsOpen: false,\n\tfetchedUser: emptyUserObject,\n})\n\nexport default (state = initialState, { type, payload }) => {\n\tswitch(type) {\n\t\tcase 'FETCHING_USER':\n\t\t\treturn state.set('loading', true)\n\t\tcase 'RECIEVE_CURRENT_USER':\n\t\t\treturn state.mergeDeep({\n\t\t\t\t...payload,\n\t\t\t\tloading: false,\n\t\t\t\tloginIsOpen: isEmpty(payload) && state.get('loading') && state.get('loginIsOpen')\n\t\t\t})\n\t\tcase 'RECIEVE_FETCHED_USER':\n\t\t\treturn state.mergeDeep({\n\t\t\t\tloading: false,\n\t\t\t\tfetchedUser: payload\n\t\t\t})\n\t\tcase 'REMOVE_FETCHED_USER':\n\t\t\treturn state.mergeDeep({\n\t\t\t\tfetchedUser: emptyUserObject\n\t\t\t})\n\t\tcase 'REMOVE_CURRENT_USER':\n\t\t\treturn state.merge(emptyUserObject)\n\t\tcase 'TOGGLE_LOGIN_DIALOG':\n\t\t\treturn state.set('loginIsOpen', payload)\n\t\tdefault:\n\t\t\treturn state\n\t}\n}",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/redux/reducers/UserReducer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 155,
    "kind": "variable",
    "name": "emptyProfileObject",
    "memberof": "src/browser/redux/reducers/UserReducer.js",
    "static": true,
    "longname": "src/browser/redux/reducers/UserReducer.js~emptyProfileObject",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/reducers/UserReducer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": *, \"language\": *, \"UserId\": *, ...emptyMoodsObject: Object}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 156,
    "kind": "variable",
    "name": "emptyLocalObject",
    "memberof": "src/browser/redux/reducers/UserReducer.js",
    "static": true,
    "longname": "src/browser/redux/reducers/UserReducer.js~emptyLocalObject",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/reducers/UserReducer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": *, \"username\": *, \"email\": *, \"UserId\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "emptyVkObject",
    "memberof": "src/browser/redux/reducers/UserReducer.js",
    "static": true,
    "longname": "src/browser/redux/reducers/UserReducer.js~emptyVkObject",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/reducers/UserReducer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": *, \"image\": *, \"UserId\": *, \"username\": *, \"displayName\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 158,
    "kind": "variable",
    "name": "emptyTwitterObject",
    "memberof": "src/browser/redux/reducers/UserReducer.js",
    "static": true,
    "longname": "src/browser/redux/reducers/UserReducer.js~emptyTwitterObject",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/reducers/UserReducer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": *, \"image\": *, \"UserId\": *, \"username\": *, \"displayName\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 159,
    "kind": "variable",
    "name": "emptyUserObject",
    "memberof": "src/browser/redux/reducers/UserReducer.js",
    "static": true,
    "longname": "src/browser/redux/reducers/UserReducer.js~emptyUserObject",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/reducers/UserReducer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "{\"id\": *, \"role\": *, \"image\": *, \"displayName\": *, \"Vk\": *, \"Twitter\": *, \"Profile\": *, \"Local\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 160,
    "kind": "variable",
    "name": "initialState",
    "memberof": "src/browser/redux/reducers/UserReducer.js",
    "static": true,
    "longname": "src/browser/redux/reducers/UserReducer.js~initialState",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/reducers/UserReducer.js",
    "importStyle": "{initialState}",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "UserReducer",
    "memberof": "src/browser/redux/reducers/UserReducer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/reducers/UserReducer.js~UserReducer",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/reducers/UserReducer.js",
    "importStyle": "UserReducer",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "initialState",
        "defaultValue": "initialState"
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"type\": *, \"payload\": *}"
        ],
        "defaultRaw": {
          "type": null,
          "payload": null
        },
        "defaultValue": "{\"type\":null,\"payload\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "file",
    "name": "src/browser/redux/store.js",
    "content": "import thunk from 'redux-thunk'\nimport { fromJS } from 'immutable'\nimport promiseMiddleware from 'redux-promise'\nimport rootReducer, { initialState as stateWithoutPlugins } from 'browser/redux/reducers/RootReducer'\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction'\nimport reduxReset from 'redux-reset'\n\n/**\n * create initial state\n * Server side it's undefined and is calculated while rendering\n * then it is stored in 'window.__data'\n * On client side it's picked up from that object\n * @returns initial state\n */\nfunction getInitialState() {\n    if (process.env.SERVER) return undefined\n    else {\n        // Data cannot be saved in template while being immutale.\n        // Pick it up, and form immutable state again\n        let state = {}\n        const immutableKeys = Object.keys(stateWithoutPlugins)\n        Object\n         // in testing window.__data is undefined\n        .keys(window.__data || {})\n        .map(key => {\n            // TODO: very important!! Recursive immutable thingy\n            // immutable and non-immutable modules differently\n            state[key] = immutableKeys.includes(key) ? fromJS(window.__data[key]) : window.__data[key]\n        })\n        return state\n    }\n}\n\n// create enhancer for redux-devtools\n// TODO check if it's not actuallly available in production\nconst composeEnhancers = composeWithDevTools({})\n\nconst store =   createStore(\n                    rootReducer,\n                    getInitialState(),\n                    composeEnhancers(\n                        applyMiddleware(thunk, promiseMiddleware),\n                        reduxReset(), // Will use 'RESET' as default action.type to trigger reset\n                    ),\n                )\n\nexport default store",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/redux/store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "getInitialState",
    "memberof": "src/browser/redux/store.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/store.js~getInitialState",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/store.js",
    "importStyle": null,
    "description": "create initial state\nServer side it's undefined and is calculated while rendering\nthen it is stored in 'window.__data'\nOn client side it's picked up from that object",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "initial state"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "initial state"
    },
    "params": [],
    "ignore": true
  },
  {
    "__docId__": 164,
    "kind": "variable",
    "name": "composeEnhancers",
    "memberof": "src/browser/redux/store.js",
    "static": true,
    "longname": "src/browser/redux/store.js~composeEnhancers",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/redux/store.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 165,
    "kind": "variable",
    "name": "store",
    "memberof": "src/browser/redux/store.js",
    "static": true,
    "longname": "src/browser/redux/store.js~store",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/store.js",
    "importStyle": "store",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "src/browser/redux/ui/UiActions.js",
    "content": "import selectn from 'selectn'\nimport { stringify } from 'query-string'\nimport { createAction, createActions } from 'redux-actions'\nimport { checkStatus, parseJSON, headersAndBody } from'browser/redux/actions/actionHelpers'\n\nexport const actions = createActions({\n\tTOGGLE_LOADING: value => value,\n})\n\n/**\n * toggle global page loading icon\n * @param {boolean} [boolean] value to set on renderer\n */\nexport const togglePageLoading = boolean => (dispatch, getState) => {\n\treturn dispatch(actions.toggleLoading(boolean))\n}",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/redux/ui/UiActions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "variable",
    "name": "actions",
    "memberof": "src/browser/redux/ui/UiActions.js",
    "static": true,
    "longname": "src/browser/redux/ui/UiActions.js~actions",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/ui/UiActions.js",
    "importStyle": "{actions}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "function",
    "name": "togglePageLoading",
    "memberof": "src/browser/redux/ui/UiActions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/ui/UiActions.js~togglePageLoading",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/ui/UiActions.js",
    "importStyle": "{togglePageLoading}",
    "description": "toggle global page loading icon",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "boolean",
        "description": "value to set on renderer"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 169,
    "kind": "file",
    "name": "src/browser/redux/ui/UiReducer.js",
    "content": "import { Map, List } from 'immutable'\n\nexport const initialState = Map({\n\t\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\t})\n\nexport default (state = initialState, {type, payload}) => {\n\tswitch(type) {\n\t\tcase 'TOGGLE_LOADING':\n\t\t\tconst isLoading = state.get('loading')\n\t\t\treturn state.set('loading', payload || !isLoading)\n\t\tdefault:\n\t\t\treturn state\n\t}\n}",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/redux/ui/UiReducer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 170,
    "kind": "variable",
    "name": "initialState",
    "memberof": "src/browser/redux/ui/UiReducer.js",
    "static": true,
    "longname": "src/browser/redux/ui/UiReducer.js~initialState",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/ui/UiReducer.js",
    "importStyle": "{initialState}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 171,
    "kind": "function",
    "name": "UiReducer",
    "memberof": "src/browser/redux/ui/UiReducer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/browser/redux/ui/UiReducer.js~UiReducer",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/redux/ui/UiReducer.js",
    "importStyle": "UiReducer",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "initialState",
        "defaultValue": "initialState"
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"type\": *, \"payload\": *}"
        ],
        "defaultRaw": {
          "type": null,
          "payload": null
        },
        "defaultValue": "{\"type\":null,\"payload\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "file",
    "name": "src/browser/routes.js",
    "content": "import Layout from './pages/Layout';\nimport IndexPage from './pages/IndexPage';\nimport UserPage from './pages/UserPage';\nimport SearchPage from './pages/SearchPage';\nimport AboutPage from './pages/AboutPage';\nimport NotFound from './pages/NotFound';\nimport store from 'browser/redux/store'\nimport { fetchMoods, fetchMood } from 'browser/redux/actions/MoodActions'\nimport { fetchUser, fetchCurrentUser  } from 'browser/redux/actions/UserActions'\nimport { fetchNodes, actions as nodeActions } from 'browser/redux/actions/NodeActions'\nimport {\n  fetchForum,\n  fetchForums,\n  fetchThread,\n  fetchThreads,\n} from 'browser/redux/forum/ForumActions'\n\n/**\n * fetching is done in router config in order to properly prefetch data in SSR\n */\n\nconst routesConfig = {\n  path: '/',\n  component: Layout,\n  onEnter({params}, replace, done) {\n    // check if fetching is needed\n    const userId = store.getState().user.get('id')\n    if (userId) return done()\n    else {\n      store\n      .dispatch(fetchCurrentUser())\n      .then(() => done())\n    }\n  },\n  indexRoute: {\n    component: IndexPage,\n    // fetch data\n    onEnter({params}, replace, done) {\n      // check if fetching is needed\n      const fetchedForums = store.getState().forum.getIn(['forums', 'values'])\n      if (fetchedForums.size) return done()\n      else {\n        store\n        .dispatch(fetchForums())\n        .then(() => done())\n        // Promise\n        // .all([\n        //   store.dispatch(fetchMoods('new')),\n        //   store.dispatch(fetchMoods('random')),\n        //   store.dispatch(fetchMoods('popular')),\n        // ])\n        // .then(() => done())\n      }\n    }\n  },\n  childRoutes: [\n    {\n      path: 'users/(:username)',\n      component: UserPage,\n      onEnter({params}, replace, done) {\n        const fetchedUserId = store.getState().user.getIn(['fetchedUser', 'id'])\n        // check if fetching is needed\n        // TODO change username to userId\n        if (fetchedUserId == params.username) return done()\n        else {\n          store\n          .dispatch(fetchUser(params.username))\n          .then(() => done())\n        }\n      }\n    },\n    { path: 'search', component: SearchPage },\n    { path: 'about', component: AboutPage },\n    {\n      path: 'forums/(:forumSlug)',\n      component: require('browser/pages/ForumPage').default,\n      onEnter({params}, replace, done) {\n        const { forumSlug } = params\n        const fetchedForum = store.getState().forum\n        // check if fetching is needed\n        if (fetchedForum.get('slug') == forumSlug) return done()\n        else {\n          store\n          .dispatch(fetchForum(forumSlug))\n          .then(() => done())\n        }\n      }\n    },\n    {\n      path: 'threads/(:threadSlug)',\n      component: require('browser/pages/ThreadPage').default,\n      // fetch data\n      onEnter({params}, replace, done) {\n        const { threadSlug } = params\n        const fetchedSlug = store\n                              .getState()\n                              .forum\n                              .getIn(['thread', 'slug'])\n        // check if fetching is needed\n        if (fetchedSlug == threadSlug) return done()\n        else {\n          console.log('else is running')\n          store\n          .dispatch(fetchThread(threadSlug))\n          .then(() => done())\n        }\n      }\n    },\n{\n  path: 'forum',\n  component: require('browser/pages/ForumsPage').default,\n  onEnter({params}, replace, done) {\n    // check if fetching is needed\n    const fetchedForums = store.getState().forum.getIn(['forums', 'values'])\n    if (fetchedForums.size) return done()\n    else {\n      store\n      .dispatch(fetchForums())\n      .then(() => done())\n    }\n  }\n},\n// ⚠️ Hook for cli! Do not remove 💀\n    // 404 page must go after everything else\n    { path: '*', component: NotFound },\n  ]\n}\n\nmodule.exports = routesConfig;",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/routes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 173,
    "kind": "variable",
    "name": "routesConfig",
    "memberof": "src/browser/routes.js",
    "static": true,
    "longname": "src/browser/routes.js~routesConfig",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/routes.js",
    "importStyle": null,
    "description": "fetching is done in router config in order to properly prefetch data in SSR",
    "lineNumber": 22,
    "type": {
      "types": [
        "{\"path\": string, \"component\": *, \"onEnter\": function, \"indexRoute\": *, \"childRoutes\": *}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 174,
    "kind": "file",
    "name": "src/browser/theme.js",
    "content": "/**\n * 👀 see: http://www.material-ui.com/#/customization/themes 👀\n */\nimport {\n  cyan500, cyan700,\n  pinkA200,\n  grey100, grey300, grey400, grey500,\n  white, darkBlack, fullBlack,\n} from 'material-ui/styles/colors';\nimport {fade} from 'material-ui/utils/colorManipulator';\nimport spacing from 'material-ui/styles/spacing';\n\nconst styles = {\n  spacing: spacing,\n  fontFamily: 'Roboto, sans-serif',\n  borderRadius: 2,\n  palette: {\n    primary1Color: cyan500,\n    primary2Color: cyan700,\n    primary3Color: grey400,\n    accent1Color: pinkA200,\n    accent2Color: grey100,\n    accent3Color: grey500,\n    textColor: darkBlack,\n    secondaryTextColor: fade(darkBlack, 0.54),\n    alternateTextColor: white,\n    canvasColor: white,\n    borderColor: grey300,\n    disabledColor: fade(darkBlack, 0.3),\n    pickerHeaderColor: cyan500,\n    clockCircleColor: fade(darkBlack, 0.07),\n    shadowColor: fullBlack,\n  },\n};\n\nconst { textColor, alternateTextColor } = styles.palette\n\nexport { textColor, alternateTextColor }\n\nexport default styles",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/browser/theme.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 175,
    "kind": "variable",
    "name": "textColor",
    "memberof": "src/browser/theme.js",
    "static": true,
    "longname": "src/browser/theme.js~textColor",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/browser/theme.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 176,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/browser/theme.js",
    "static": true,
    "longname": "src/browser/theme.js~styles",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/browser/theme.js",
    "importStyle": "styles",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "{\"spacing\": *, \"fontFamily\": string, \"borderRadius\": number, \"palette\": *}"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "file",
    "name": "src/mobile/index.android.js",
    "content": "/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n * @flow\n */\n\nimport React, { Component } from 'react';\nimport {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View\n} from 'react-native';\n\nexport default class mobile extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.welcome}>\n          Welcome to React Native!\n        </Text>\n        <Text style={styles.instructions}>\n          To get started, edit index.android.js\n        </Text>\n        <Text style={styles.instructions}>\n          Double tap R on your keyboard to reload,{'\\n'}\n          Shake or press menu button for dev menu\n        </Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5,\n  },\n});\n\nAppRegistry.registerComponent('mobile', () => mobile);\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/mobile/index.android.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 178,
    "kind": "class",
    "name": "mobile",
    "memberof": "src/mobile/index.android.js",
    "static": true,
    "longname": "src/mobile/index.android.js~mobile",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/mobile/index.android.js",
    "importStyle": "mobile",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 179,
    "kind": "method",
    "name": "render",
    "memberof": "src/mobile/index.android.js~mobile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mobile/index.android.js~mobile#render",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/mobile/index.android.js",
    "static": true,
    "longname": "src/mobile/index.android.js~styles",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/mobile/index.android.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 181,
    "kind": "file",
    "name": "src/mobile/index.ios.js",
    "content": "/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n * @flow\n */\n\nimport React, { Component } from 'react';\nimport {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View\n} from 'react-native';\n\nexport default class mobile extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.welcome}>\n          Привет, Сабзиро!\n        </Text>\n        <Text style={styles.welcome}>\n          Лю тя, няша!\n        </Text>\n        <Text style={styles.instructions}>\n          To get started, edit index.ios.js\n        </Text>\n        <Text style={styles.instructions}>\n          Press Cmd+R to reload,{'\\n'}\n          Cmd+D or shake for dev menu\n        </Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5,\n  },\n});\n\nAppRegistry.registerComponent('mobile', () => mobile);\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/mobile/index.ios.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 182,
    "kind": "class",
    "name": "mobile",
    "memberof": "src/mobile/index.ios.js",
    "static": true,
    "longname": "src/mobile/index.ios.js~mobile",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/mobile/index.ios.js",
    "importStyle": "mobile",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "interface": false,
    "extends": [
      "react~Component"
    ]
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "render",
    "memberof": "src/mobile/index.ios.js~mobile",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/mobile/index.ios.js~mobile#render",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "variable",
    "name": "styles",
    "memberof": "src/mobile/index.ios.js",
    "static": true,
    "longname": "src/mobile/index.ios.js~styles",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/mobile/index.ios.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 185,
    "kind": "file",
    "name": "src/mobile/__tests__/index.android.js",
    "content": "import 'react-native';\nimport React from 'react';\nimport Index from '../index.android.js';\n\n// Note: test renderer must be required after react-native.\nimport renderer from 'react-test-renderer';\n\nit('renders correctly', () => {\n  const tree = renderer.create(\n    <Index />\n  );\n});\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/mobile/__tests__/index.android.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 186,
    "kind": "file",
    "name": "src/mobile/__tests__/index.ios.js",
    "content": "import 'react-native';\nimport React from 'react';\nimport Index from '../index.ios.js';\n\n// Note: test renderer must be required after react-native.\nimport renderer from 'react-test-renderer';\n\nit('renders correctly', () => {\n  const tree = renderer.create(\n    <Index />\n  );\n});\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/mobile/__tests__/index.ios.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 187,
    "kind": "file",
    "name": "src/server/data/config.js",
    "content": "var config = process.env\n\n/*\n  Sometimes application uses this config outside of webpack\n    (migrations as an example).\n  Other times webpack compiles this file in code but we try to avoid requiring json files\n    manually because currently it causes endless recompiling\n  To avoid this, we need to require file manually only if it's neccesery\n*/\nif (process.env.NODE_ENV == 'production' && config.dialect == undefined) config = require('../../../production.json')\n\nmodule.exports = {\n  \"development\": {\n    \"username\": \"root\",\n    \"password\": null,\n    \"database\": \"boilerplat_dev\",\n    \"host\": \"127.0.0.1\",\n    \"dialect\": \"mysql\",\n    \"logging\": false\n  },\n  \"test\": {\n    \"username\": \"root\",\n    \"password\": null,\n    \"database\": \"boilerplat_test\",\n    \"host\": \"127.0.0.1\",\n    \"dialect\": \"mysql\",\n    \"logging\": false\n  },\n  \"production\": {\n    \"username\": config.DB_USER,\n    \"password\": config.DB_PASS,\n    \"database\": config.DB_NAME,\n    \"host\": config.DB_HOST,\n    \"port\": config.DB_PORT,\n    \"dialect\": config.DB_DIALECT,\n    \"logging\": false\n  }\n}\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 188,
    "kind": "variable",
    "name": "config",
    "memberof": "src/server/data/config.js",
    "static": true,
    "longname": "src/server/data/config.js~config",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 189,
    "kind": "file",
    "name": "src/server/data/controllers/DecisionsController.js",
    "content": "import { Decision } from \"../models/index\"\nimport sequelize from \"sequelize\"\n\n// TODO clean up and write tests!\n\n/**\n * TODO\n *\n * @param {any} position\n * @param {any} viewedAmount\n * @returns\n */\nfunction calculateNewPosition(position, viewedAmount) {\n    const previousPosition = Number((position < 0 ? 0 : position)) + 1\n    const modifier = Number(viewedAmount == 0 ? 1 : viewedAmount)\n    return previousPosition * modifier\n}\n\n// TODO rework the copy + paste\n/**\n * @export\n * @param {Object} decision\n */\n// TODO dont messup previousDecision and previousDecision\nexport async function updatePositionAndViews(decision) {\n    const { position, viewedAmount } = decision\n    const newPosition = calculateNewPosition(position, viewedAmount)\n\n    /** TODO POSITION UPDATING HAS BEEN DISABLED TILL FIXED */\n    // set lastViewAt, increment viewedAmount and set position\n    const updatedDecision = await Decision.update({\n                                // position: newPosition,\n                                // lastViewAt: new Date(),\n                                viewedAmount: sequelize.literal('viewedAmount +1'),\n                            }, {where: {id: decision.id}})\n\n    // decrement previous decision.position / increment next ones\n    // const where = selector => ({\n    //     position: selector,\n    //     UserId: decision.UserId,\n    //     MoodId: decision.MoodId,\n    //     id: { $not: decision.id },\n    // })\n    // await Decision.update(\n    //     { position: sequelize.literal('position +1') },\n    //     { where: where({ $gte: newPosition }) }\n    // )\n    // await Decision.update(\n    //     { position: sequelize.literal('position -1') },\n    //     { where: where({ $lte: newPosition }) }\n    // )\n    return updatedDecision\n}\n\n// export default class {\n// }",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/controllers/DecisionsController.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 190,
    "kind": "function",
    "name": "calculateNewPosition",
    "memberof": "src/server/data/controllers/DecisionsController.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/data/controllers/DecisionsController.js~calculateNewPosition",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/controllers/DecisionsController.js",
    "importStyle": null,
    "description": "TODO",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "viewedAmount",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 191,
    "kind": "function",
    "name": "updatePositionAndViews",
    "memberof": "src/server/data/controllers/DecisionsController.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/server/data/controllers/DecisionsController.js~updatePositionAndViews",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/data/controllers/DecisionsController.js",
    "importStyle": "{updatePositionAndViews}",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "decision",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "file",
    "name": "src/server/data/controllers/MoodsController.js",
    "content": "import { Mood, Node } from \"../models/index\"\n\n// TODO write tests!\n/**\n * get moods by user id (paginated)\n * @export\n * @param {string} UserId\n * @param {number} page after which page to return results?\n * @returns {object}\n */\nexport async function getUsersMoods(UserId, page) {\n    // TODO create special config file for 'limit' and over variables\n    const limit = 12\n    const offset = page ? limit * (page -1) : 0\n    const totalMoods = await Mood.count()\n    const totalPages = Math.ceil(totalMoods / limit)\n    const moods = await Mood.findAll({\n        where: { UserId },\n        limit,\n        offset,\n        order: [['rating', 'DESC']],\n        // add preview image\n        include: [{\n          limit: 1,\n          model: Node,\n          order: 'rand()',\n          required: false,\n        }]\n    })\n    return { moods, totalPages }\n}",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/controllers/MoodsController.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 193,
    "kind": "function",
    "name": "getUsersMoods",
    "memberof": "src/server/data/controllers/MoodsController.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/server/data/controllers/MoodsController.js~getUsersMoods",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/data/controllers/MoodsController.js",
    "importStyle": "{getUsersMoods}",
    "description": "get moods by user id (paginated)",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "UserId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "page",
        "description": "after which page to return results?"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 194,
    "kind": "file",
    "name": "src/server/data/controllers/NodesController.js",
    "content": "import extend from 'lodash/assignIn'\nimport { Node, Decision } from \"../models/index\"\n// TODO add tests! ⚠️ ✏️️\n/**\n * after migrating ratings to decimal point (in order to make them unique),\n * not all of them changed properly.\n * This function checks ratings and modifies them to decimal point with Date.now()\n * @export\n * @param {object} node\n */\nexport async function normalizeRating(node) {\n    if (node.rating.includes('.00000000000000000') && (node.rating % 1) == 0) {\n        console.log('node.rating', node.rating)\n        console.log('after point', node.rating % 1)\n        console.log('point test', (Number(node.rating + '.' + Date.now())) % 1)\n        console.warn('rating is not normal!')\n        console.info('Normalizing...')\n        const id = node.id\n        const newRating = node.rating.includes('.00000000000000000')\n                        ? Number(0 + '.' + Date.now())\n                        : Number(node.rating + '.' + Date.now())\n        await Node.update({rating: newRating}, {where: {id}})\n        await Decision.update({NodeRating: newRating}, {where: {NodeId: id}})\n    }\n}\n/**\n * find node with highest node.Decision.rating\n * @export\n * @param {string} MoodId\n * @param {string} [UserId]\n * @param {number} [afterRating] threshold too look after\n * @returns\n */\nexport async function findHighestRatingNode(MoodId, UserId, afterRating) {\n    // using extend function to have clean object and\n    // avoid things like {UserId: undefined}, which gets unexpected results from DB\n    const where = extend(\n        {MoodId},\n        // UserId && {UserId},\n        afterRating && {\n            rating: {\n                $lt: afterRating\n            }\n        },\n    )\n\n    return await Node.findOne({\n        where,\n        limit: 1,\n        raw: true,\n        nest: true,\n        order: [['rating', 'DESC']],\n        // include: [{\n        //     where,\n        //     model: Decision,\n        //     order: [['rating', 'DESC']],\n        // }],\n    })\n}\n/**\n * find node with lowest node.Decision.position\n * @export\n * @param {string} UserId\n * @param {string} MoodId\n * @param {number} [beforePosition] threshold too look before\n * @returns\n */\nexport async function findHighestPositionNode(UserId, MoodId, beforePosition) {\n  return await Node.findOne({\n    where: {}, // comment out?\n    include: [{\n        model: Decision,\n        order: [['position', 'DESC']],\n        where:  extend(\n            {UserId, MoodId},\n            beforePosition\n            ?   {\n                    position: {\n                        $gt: beforePosition\n                    }\n                }\n            : undefined\n        ),\n    }],\n  })\n}\n\nexport async function findRandomNode(MoodId) {\n  return await Node.findOne({\n    where: {MoodId},\n    order: 'rand()',\n  })\n}\n\nexport async function findRandomNodes(MoodId) {\n  const nodes = await Node.findAll({\n    raw: true,\n    nest: true,\n    where: {MoodId},\n    order: 'rand()',\n    limit: 100,\n    include: [Decision],\n  })\n  /*\n    remove downvoted by user nodes\n    (i could not make sequelize to filter data by children values,\n    so had to filter manually)\n  */\n  return nodes.filter(node => {\n      const { vote } = node.Decision\n      return !(vote == 0 || vote === false)\n  })\n}",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/controllers/NodesController.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 195,
    "kind": "function",
    "name": "normalizeRating",
    "memberof": "src/server/data/controllers/NodesController.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/server/data/controllers/NodesController.js~normalizeRating",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/data/controllers/NodesController.js",
    "importStyle": "{normalizeRating}",
    "description": "after migrating ratings to decimal point (in order to make them unique),\nnot all of them changed properly.\nThis function checks ratings and modifies them to decimal point with Date.now()",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 196,
    "kind": "function",
    "name": "findHighestRatingNode",
    "memberof": "src/server/data/controllers/NodesController.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/server/data/controllers/NodesController.js~findHighestRatingNode",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/data/controllers/NodesController.js",
    "importStyle": "{findHighestRatingNode}",
    "description": "find node with highest node.Decision.rating",
    "lineNumber": 34,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "MoodId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "UserId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "afterRating",
        "description": "threshold too look after"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "function",
    "name": "findHighestPositionNode",
    "memberof": "src/server/data/controllers/NodesController.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/server/data/controllers/NodesController.js~findHighestPositionNode",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/data/controllers/NodesController.js",
    "importStyle": "{findHighestPositionNode}",
    "description": "find node with lowest node.Decision.position",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "UserId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "MoodId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "beforePosition",
        "description": "threshold too look before"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 198,
    "kind": "function",
    "name": "findRandomNode",
    "memberof": "src/server/data/controllers/NodesController.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/server/data/controllers/NodesController.js~findRandomNode",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/data/controllers/NodesController.js",
    "importStyle": "{findRandomNode}",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "params": [
      {
        "name": "MoodId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "function",
    "name": "findRandomNodes",
    "memberof": "src/server/data/controllers/NodesController.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/server/data/controllers/NodesController.js~findRandomNodes",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/data/controllers/NodesController.js",
    "importStyle": "{findRandomNodes}",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "params": [
      {
        "name": "MoodId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "file",
    "name": "src/server/data/controllers/UserController/index.js",
    "content": "export {\n    default,\n    createUser,\n    normalizePublicInfo,\n    updateSocialInfo,\n} from './UserController'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/controllers/UserController/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 201,
    "kind": "file",
    "name": "src/server/data/controllers/UserController/UserController.js",
    "content": "import extend from 'lodash/assignIn'\nimport * as models from \"server/data/models/index\"\nimport select from 'selectn'\n\nconst { User, Profile, Local, Twitter, Vk } = models\n\n// TODO add tests! ⚠️ ✏️️\n/**\n * TODO comments\n * @export\n * @param {string} authType\n * @param {object} payload\n */\nexport async function createUser(authType, payload) {\n    // TODO comment\n\n    const user = await User.create({\n        image: payload.image,\n        displayName: payload.username || payload.displayName,\n    })\n\n    if (authType == 'Local') payload.password = Local.generateHash(payload.password)\n    await models[authType].create(extend(payload, {UserId: user.id}))\n\n    return await User.findById(user.id, {include: [Profile]})\n}\n\n// TODO add tests! ⚠️ ✏️️\n\n/**\n * TODO think if any of these even needed. Maybe i should normalize data client side?s\n */\n\n/**\n * TODO\n * @export\n * @param {string} UserId\n * @returns {object} updated user\n */\nexport async function normalizePublicInfo(UserId) {\n    const user = await User.findById(\n        UserId,\n        {include: [Profile, Local, Twitter, Vk]}\n    )\n\n    const displayName = select('Local.username', user)\n        || select('Twitter.username', user)\n        || select('Twitter.displayName', user)\n        || select('Vk.username', user)\n        || select('Vk.displayName', user)\n    console.log('displayName: ', displayName);\n\n    if (!user.displayName) user.set('displayName', displayName)\n\n    if (!user.image) user.set('image',\n        select('Twitter.image', user)\n        || select('Vk.image', user)\n    )\n\n    await user.save()\n\n    return await User.findById(user.id, {raw: true, nest: true})\n}\n/**\n * TODO\n * @export\n * @param {string} authType model name\n * @param {object} payload properties to update\n */\nexport async function updateSocialInfo(authType, payload) {\n    await models[authType]\n            .update(\n                payload,\n                {where: {id: payload.id}\n            })\n}\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/controllers/UserController/UserController.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 202,
    "kind": "variable",
    "name": "User",
    "memberof": "src/server/data/controllers/UserController/UserController.js",
    "static": true,
    "longname": "src/server/data/controllers/UserController/UserController.js~User",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/controllers/UserController/UserController.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 203,
    "kind": "function",
    "name": "createUser",
    "memberof": "src/server/data/controllers/UserController/UserController.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/server/data/controllers/UserController/UserController.js~createUser",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/data/controllers/UserController/UserController.js",
    "importStyle": "{createUser}",
    "description": "TODO comments",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "authType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "function",
    "name": "normalizePublicInfo",
    "memberof": "src/server/data/controllers/UserController/UserController.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/server/data/controllers/UserController/UserController.js~normalizePublicInfo",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/data/controllers/UserController/UserController.js",
    "importStyle": "{normalizePublicInfo}",
    "description": "TODO",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{object} updated user"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "UserId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "updated user"
    }
  },
  {
    "__docId__": 205,
    "kind": "function",
    "name": "updateSocialInfo",
    "memberof": "src/server/data/controllers/UserController/UserController.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/server/data/controllers/UserController/UserController.js~updateSocialInfo",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/data/controllers/UserController/UserController.js",
    "importStyle": "{updateSocialInfo}",
    "description": "TODO",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "authType",
        "description": "model name"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": "properties to update"
      }
    ],
    "return": null
  },
  {
    "__docId__": 206,
    "kind": "file",
    "name": "src/server/data/fixtures/users.js",
    "content": "const faker = require('faker')\nconst uniqid = require('uniqid')\nconst { User } = require('../models/index.js')\n\n// const users = []\n\n// for(x=0; x<10; x++) {\n//     users.push({\n//         username: uniqid(),\n//         image   : faker.image.imageUrl(),\n//         password: faker.internet.email(),\n//     })\n// }\n\nconst users = [\n    {\n        username: 'sabinochka',\n        password: \"kakashechka\",\n        email   : \"sabinochka@gmail.com\",\n    },\n    {\n        username: 'sabzero',\n        password: \"pisulechka\",\n        email   : \"sabzero@gmail.com\",\n    },\n    {\n        username: 'pupsik',\n        password: \"volosatiy\",\n        email   : \"pupsik@gmail.com\",\n    },\n    {\n        username: 'pechenusha',\n        password: \"sladenykaya\",\n        email   : \"pechenusha@gmail.com\",\n    },\n    {\n        username: 'karamelka',\n        password: \"sladenykaya\",\n        email   : \"karamelka@gmail.com\",\n    },\n    {\n        username: 'dominikana',\n        password: \"sladenykaya\",\n        email   : \"dominikana@gmail.com\",\n    },\n    {\n        username: 'slezki',\n        password: \"sladenykaya\",\n        email   : \"slezki@gmail.com\",\n    },\n    {\n        username: 'penisy',\n        password: \"sladenykaya\",\n        email   : \"penisy@gmail.com\",\n    },\n    {\n        username: 'kavabanga',\n        password: \"sladenykaya\",\n        email   : \"kavabanga@gmail.com\",\n    },\n    {\n        username: 'kadzima',\n        password: \"sladenykaya\",\n        email   : \"kadzima@gmail.com\",\n    },\n]\n\nmodule.exports = users",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/fixtures/users.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 207,
    "kind": "variable",
    "name": "faker",
    "memberof": "src/server/data/fixtures/users.js",
    "static": true,
    "longname": "src/server/data/fixtures/users.js~faker",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/fixtures/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 208,
    "kind": "variable",
    "name": "uniqid",
    "memberof": "src/server/data/fixtures/users.js",
    "static": true,
    "longname": "src/server/data/fixtures/users.js~uniqid",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/fixtures/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 209,
    "kind": "variable",
    "name": "User",
    "memberof": "src/server/data/fixtures/users.js",
    "static": true,
    "longname": "src/server/data/fixtures/users.js~User",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/fixtures/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 210,
    "kind": "variable",
    "name": "users",
    "memberof": "src/server/data/fixtures/users.js",
    "static": true,
    "longname": "src/server/data/fixtures/users.js~users",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/fixtures/users.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "undefined[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 211,
    "kind": "file",
    "name": "src/server/data/migrations/20170309005943-create-users.js",
    "content": "'use strict';\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    /*\n      Add altering commands here.\n      Return a promise to correctly handle asynchronicity.\n\n      Example:\n      return queryInterface.createTable('users', { id: Sequelize.INTEGER });\n    */\n    return queryInterface.createTable('users', {\n      id: {\n        allowNull: false,\n        autoIncrement: true,\n        primaryKey: true,\n        type: Sequelize.INTEGER\n      },\n      username: {\n        type: Sequelize.STRING,\n        allowNull: false\n      },\n      image: {\n        type: Sequelize.STRING,\n        allowNull: false\n      },\n      facebook_id: Sequelize.STRING,\n      twitter_id: Sequelize.STRING,\n      vk_id: Sequelize.STRING,\n      createdAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      updatedAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      }\n    })\n  },\n\n  down: function (queryInterface, Sequelize) {\n    /*\n      Add reverting commands here.\n      Return a promise to correctly handle asynchronicity.\n\n      Example:\n      return queryInterface.dropTable('users');\n    */\n    return queryInterface.dropTable('users');\n\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170309005943-create-users.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 212,
    "kind": "file",
    "name": "src/server/data/migrations/20170310205957-create-mood.js",
    "content": "'use strict';\nmodule.exports = {\n  up: function(queryInterface, Sequelize) {\n    return queryInterface.createTable('moods', {\n      id: {\n        allowNull: false,\n        primaryKey: true,\n        autoIncrement: true,\n        type: Sequelize.INTEGER\n      },\n      name: {\n        type: Sequelize.STRING,\n        allowNull: false,\n        unique: true\n      },\n      slug: {\n        type: Sequelize.STRING,\n        allowNull: false,\n        unique: true\n      },\n      createdAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      updatedAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      UserId: {\n        type: Sequelize.INTEGER,\n        allowNull: false,\n        // references: {\n        //   model: 'users',\n        //   key: 'id'\n        // }\n      }\n    });\n  },\n  down: function(queryInterface, Sequelize) {\n    return queryInterface.dropTable('moods');\n  }\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170310205957-create-mood.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 213,
    "kind": "file",
    "name": "src/server/data/migrations/20170311103816-create-node.js",
    "content": "'use strict';\nmodule.exports = {\n  up: function(queryInterface, Sequelize) {\n    return queryInterface.createTable('nodes', {\n      id: {\n        allowNull: false,\n        autoIncrement: true,\n        primaryKey: true,\n        type: Sequelize.INTEGER\n      },\n      url: {\n        allowNull: false,\n        type: Sequelize.STRING\n      },\n      contentId: {\n        type: Sequelize.STRING,\n        unique: 'compositeIndex'\n      },\n      provider: {\n        type: Sequelize.STRING,\n        unique: 'compositeIndex'        \n      },\n      type: Sequelize.STRING,\n      rating: {\n        type: Sequelize.INTEGER,\n        allowNull: false,\n        defaultValue: 0\n      },\n      UserId: {\n        type: Sequelize.STRING,\n        allowNull: false,\n        // references: {\n        //   model: 'users',\n        //   key: 'id'\n        // }\n      },\n      MoodId: {\n        type: Sequelize.STRING,\n        allowNull: false,\n        // references: {\n        //   model: 'moods',\n        //   key: 'id'\n        // }\n      },\n      createdAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      updatedAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      }\n    });\n  },\n  down: function(queryInterface, Sequelize) {\n    return queryInterface.dropTable('nodes');\n  }\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170311103816-create-node.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 214,
    "kind": "file",
    "name": "src/server/data/migrations/20170316204028-create-decision.js",
    "content": "'use strict';\nmodule.exports = {\n  up: function(queryInterface, Sequelize) {\n    return queryInterface.createTable('decisions', {\n      id: {\n        allowNull: false,\n        autoIncrement: true,\n        primaryKey: true,\n        type: Sequelize.INTEGER\n      },\n      rating: {\n        defaultValue: 0,\n        allowNull: false,\n        type: Sequelize.INTEGER,\n      },\n      NodeId: {\n        allowNull: false,\n        type: Sequelize.INTEGER,\n      },\n      NodeRating: {\n        defaultValue: 0,\n        allowNull: false,\n        type: Sequelize.INTEGER,\n      },\n      UserId: {\n        allowNull: false,      \n        type: Sequelize.INTEGER,\n        // references: {\n        //   model: 'users',\n        //   key: 'id'\n        // }\n      },\n      MoodId: {\n        allowNull: false,      \n        type: Sequelize.INTEGER,\n      },\n      nextViewAt: Sequelize.DATE,\n      createdAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      updatedAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      }\n    });\n  },\n  down: function(queryInterface, Sequelize) {\n    return queryInterface.dropTable('decisions');\n  }\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170316204028-create-decision.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 215,
    "kind": "file",
    "name": "src/server/data/migrations/20170503212754-make-username-unique.js",
    "content": "'use strict';\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    return queryInterface.changeColumn(\n      'users',\n      'username',\n      {\n        type: Sequelize.STRING,\n        allowNull: false,\n        unique: true\n      }\n    )\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return queryInterface.changeColumn(\n      'users',\n      'username',\n      {\n        type: Sequelize.STRING,\n        allowNull: false,\n        unique: false\n      }\n    )\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170503212754-make-username-unique.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 216,
    "kind": "file",
    "name": "src/server/data/migrations/20170504102713-allow-userimage-to-be-null.js",
    "content": "'use strict';\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    return queryInterface.changeColumn(\n      'users',\n      'image',\n      {\n        type: Sequelize.STRING,\n        allowNull: false,\n      }\n    )\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return queryInterface.changeColumn(\n      'users',\n      'image',\n      {\n        type: Sequelize.STRING,\n        allowNull: true,\n      }\n    )\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170504102713-allow-userimage-to-be-null.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 217,
    "kind": "file",
    "name": "src/server/data/migrations/20170504104535-add-password-to-users.js",
    "content": "'use strict';\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    return queryInterface.addColumn(\n      'users',\n      'password',\n      Sequelize.STRING\n    )\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return queryInterface.removeColumn('users', 'password')\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170504104535-add-password-to-users.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 218,
    "kind": "file",
    "name": "src/server/data/migrations/20170506100943-add-viewedAmount-and-position-to-decisions.js",
    "content": "'use strict';\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    return queryInterface.addColumn(\n      'decisions',\n      'position',\n      {\n        defaultValue: 0,\n        allowNull: false,\n        type: Sequelize.STRING,\n      }\n    ).then(function() {\n      return queryInterface.addColumn(\n        'decisions',\n        'viewedAmount',\n        {\n          defaultValue: 0,\n          allowNull: false,\n          type: Sequelize.STRING,\n        }\n      )\n    })\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return queryInterface.removeColumn('decisions', 'position')\n            .then(function() {\n              return queryInterface.removeColumn('decisions', 'viewedAmount')\n            })\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170506100943-add-viewedAmount-and-position-to-decisions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 219,
    "kind": "file",
    "name": "src/server/data/migrations/20170508110909-changeDigitToDeciamlRatingInNodes.js",
    "content": "'use strict';\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    return queryInterface.changeColumn(\n      'nodes',\n      'rating',\n      {\n        type: Sequelize.DECIMAL(38, 17),\n        allowNull: false,\n        defaultValue: 0\n      }\n    )\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return queryInterface.changeColumn(\n      'nodes',\n      'rating',\n      {\n        type: Sequelize.INTEGER,\n        allowNull: true,\n        defaultValue: 0\n      }\n    )\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170508110909-changeDigitToDeciamlRatingInNodes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 220,
    "kind": "file",
    "name": "src/server/data/migrations/20170510064148-add-lastViewAt-to-decisions.js",
    "content": "'use strict';\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    return queryInterface.addColumn(\n      'decisions',\n      'lastViewAt',\n      {\n        allowNull: false,\n        type: Sequelize.DATE,\n        defaultValue: Sequelize.NOW,\n      }\n    )\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return queryInterface.removeColumn('decisions', 'lastViewAt')\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170510064148-add-lastViewAt-to-decisions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 221,
    "kind": "file",
    "name": "src/server/data/migrations/20170518131135-change-NodeRating-to-decimal.js",
    "content": "'use strict';\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    return queryInterface.changeColumn(\n      'decisions',\n      'NodeRating',\n      {\n        type: Sequelize.DECIMAL(38, 17),\n        allowNull: false,\n        defaultValue: 0\n      }\n    )\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return queryInterface.changeColumn(\n      'decisions',\n      'NodeRating',\n      {\n        type: Sequelize.INTEGER,\n        allowNull: true,\n        defaultValue: 0\n      }\n    )\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170518131135-change-NodeRating-to-decimal.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 222,
    "kind": "file",
    "name": "src/server/data/migrations/20170518132506-change-NodeRating-to-string.js",
    "content": "'use strict';\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    return queryInterface.changeColumn(\n      'nodes',\n      'rating',\n      {\n        type: Sequelize.STRING,\n        allowNull: false,\n        defaultValue: Sequelize.NOW\n      }\n    ).then(function() {\n      return queryInterface.changeColumn(\n        'decisions',\n        'NodeRating',\n        {\n          type: Sequelize.STRING,\n          allowNull: false,\n          defaultValue: Sequelize.NOW\n        }\n      )\n    })\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return queryInterface.changeColumn(\n      'nodes',\n      'rating',\n      {\n        type: Sequelize.DECIMAL(38, 17),\n        allowNull: false,\n        defaultValue: 0\n      }\n    ).then(function() {\n      return queryInterface.changeColumn(\n        'decisions',\n        'NodeRating',\n        {\n          type: Sequelize.DECIMAL(38, 17),\n          allowNull: false,\n          defaultValue: 0\n        }\n      )\n    })\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170518132506-change-NodeRating-to-string.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 223,
    "kind": "file",
    "name": "src/server/data/migrations/20170522160940-create-profile.js",
    "content": "'use strict';\nmodule.exports = {\n  up: function(queryInterface, Sequelize) {\n    return queryInterface.createTable('profiles', {\n      language: Sequelize.STRING,\n      id: {\n        allowNull: false,\n        autoIncrement: true,\n        primaryKey: true,\n        type: Sequelize.INTEGER\n      },\n      UserId: {\n        type: Sequelize.INTEGER,\n        allowNull: false,\n      },\n      createdAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      updatedAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      }\n    });\n  },\n  down: function(queryInterface, Sequelize) {\n    return queryInterface.dropTable('profiles');\n  }\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170522160940-create-profile.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 224,
    "kind": "file",
    "name": "src/server/data/migrations/20170610154146-create-rating.js",
    "content": "'use strict';\nmodule.exports = {\n  up: function(queryInterface, Sequelize) {\n    return queryInterface.createTable('ratings', {\n      id: {\n        allowNull: false,\n        autoIncrement: true,\n        primaryKey: true,\n        type: Sequelize.INTEGER\n      },\n      rating: {\n        type: Sequelize.STRING,\n        allowNull: false,\n        defaultValue: Sequelize.NOW\n      },\n      parentId: {\n        allowNull: false,\n        type: Sequelize.INTEGER,\n      },\n      createdAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      updatedAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      }\n    });\n  },\n  down: function(queryInterface, Sequelize) {\n    return queryInterface.dropTable('ratings');\n  }\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170610154146-create-rating.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 225,
    "kind": "file",
    "name": "src/server/data/migrations/20170610185409-add-vote-to-decisions.js",
    "content": "'use strict';\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    return queryInterface.addColumn(\n      'decisions',\n      'vote',\n      {\n        allowNull: true,\n        type: Sequelize.BOOLEAN,\n      }\n    )\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return queryInterface.removeColumn('decisions', 'vote')\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170610185409-add-vote-to-decisions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 226,
    "kind": "file",
    "name": "src/server/data/migrations/20170614064456-remove-lastViewAt-from-decisions.js",
    "content": "'use strict';\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    return queryInterface.removeColumn('decisions', 'lastViewAt')\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return queryInterface.addColumn(\n      'decisions',\n      'lastViewAt',\n      {\n        allowNull: false,\n        type: Sequelize.DATE,\n        defaultValue: Sequelize.NOW,\n      }\n    )\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170614064456-remove-lastViewAt-from-decisions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 227,
    "kind": "file",
    "name": "src/server/data/migrations/20170620000017-add-displayName-to-users.js",
    "content": "'use strict';\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    return  queryInterface.addColumn('users', 'displayName', Sequelize.STRING)\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return  queryInterface.removeColumn('users', 'displayName')\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170620000017-add-displayName-to-users.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 228,
    "kind": "file",
    "name": "src/server/data/migrations/20170620082007-create-local.js",
    "content": "'use strict';\nmodule.exports = {\n  up: function(queryInterface, Sequelize) {\n    return queryInterface.createTable('locals', {\n      id: {\n        allowNull: false,\n        autoIncrement: true,\n        primaryKey: true,\n        type: Sequelize.INTEGER\n      },\n      UserId: {\n        allowNull: false,\n        type: Sequelize.INTEGER,\n      },\n      email: {\n        allowNull: false,\n        type: Sequelize.STRING,\n      },\n      username: {\n        allowNull: false,\n        type: Sequelize.STRING,\n      },\n      password: {\n        allowNull: false,\n        type: Sequelize.STRING,\n      },\n      createdAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      updatedAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      }\n    });\n  },\n  down: function(queryInterface, Sequelize) {\n    return queryInterface.dropTable('locals');\n  }\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170620082007-create-local.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 229,
    "kind": "file",
    "name": "src/server/data/migrations/20170620110949-allow-null-image-in-users.js",
    "content": "'use strict';\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    return queryInterface.changeColumn(\n            'users',\n            'image',\n            {\n              type: Sequelize.STRING,\n              allowNull: true,\n            }\n          )\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return queryInterface.changeColumn(\n            'users',\n            'image',\n            {\n              type: Sequelize.STRING,\n              allowNull: true,\n            }\n          )\n\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170620110949-allow-null-image-in-users.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 230,
    "kind": "file",
    "name": "src/server/data/migrations/20170622112536-create-twitter.js",
    "content": "'use strict';\nvar { User, Local, Profile } = require('../models')\nmodule.exports = {\n  up: function(queryInterface, Sequelize) {\n    // create table\n    return queryInterface.createTable('twitters', {\n      id: {\n        allowNull: false,\n        primaryKey: true,\n        type: Sequelize.STRING\n      },\n      UserId: {\n        type: Sequelize.INTEGER,\n        allowNull: false,\n      },\n      username: Sequelize.STRING,\n      image: Sequelize.STRING,\n      displayName: Sequelize.STRING,\n      createdAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      updatedAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      }\n    })\n  },\n  down: function(queryInterface, Sequelize) {\n    return queryInterface.dropTable('twitters');\n  }\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170622112536-create-twitter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 231,
    "kind": "variable",
    "name": "User",
    "memberof": "src/server/data/migrations/20170622112536-create-twitter.js",
    "static": true,
    "longname": "src/server/data/migrations/20170622112536-create-twitter.js~User",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/migrations/20170622112536-create-twitter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 232,
    "kind": "file",
    "name": "src/server/data/migrations/20170622145454-migrate-user-data-to-twitter.js",
    "content": "'use strict';\nvar { User, Twitter } = require('../models')\nmodule.exports = {\n  up: function(queryInterface, Sequelize) {\n    // create table\n    return User.findAll({\n      where: {\n        twitter_id: {$not: null}\n      }\n    })\n    .each(user => {\n      return  Twitter.create({\n                UserId: user.id,\n                id: user.twitter_id,\n              })\n    })\n    .catch(error => {\n      console.error(error);\n      throw new Error(error)\n    })\n  },\n  down: function(queryInterface, Sequelize) {\n    return\n  }\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170622145454-migrate-user-data-to-twitter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 233,
    "kind": "variable",
    "name": "User",
    "memberof": "src/server/data/migrations/20170622145454-migrate-user-data-to-twitter.js",
    "static": true,
    "longname": "src/server/data/migrations/20170622145454-migrate-user-data-to-twitter.js~User",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/migrations/20170622145454-migrate-user-data-to-twitter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 234,
    "kind": "file",
    "name": "src/server/data/migrations/20170622163929-create-vk.js",
    "content": "'use strict';\nmodule.exports = {\n  up: function(queryInterface, Sequelize) {\n    // create table\n    return queryInterface.createTable('vks', {\n      id: {\n        allowNull: false,\n        primaryKey: true,\n        type: Sequelize.STRING\n      },\n      UserId: {\n        type: Sequelize.INTEGER,\n        allowNull: false,\n      },\n      username: Sequelize.STRING,\n      image: Sequelize.STRING,\n      displayName: Sequelize.STRING,\n      createdAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      updatedAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      }\n    })\n  },\n  down: function(queryInterface, Sequelize) {\n    return queryInterface.dropTable('vks');\n  }\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170622163929-create-vk.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 235,
    "kind": "file",
    "name": "src/server/data/migrations/20170622164350-migrate-user-data-to-vk.js",
    "content": "'use strict';\nvar { User, Vk } = require('../models')\nmodule.exports = {\n  up: function(queryInterface, Sequelize) {\n    // create table\n    return User.findAll({\n      where: {\n        vk_id: {$not: null}\n      }\n    })\n    .each(user => {\n      return  Vk.create({\n                UserId: user.id,\n                id: user.vk_id,\n              })\n    })\n    .catch(error => {\n      console.error(error);\n      throw new Error(error)\n    })\n  },\n  down: function(queryInterface, Sequelize) {\n    return\n  }\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170622164350-migrate-user-data-to-vk.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 236,
    "kind": "variable",
    "name": "User",
    "memberof": "src/server/data/migrations/20170622164350-migrate-user-data-to-vk.js",
    "static": true,
    "longname": "src/server/data/migrations/20170622164350-migrate-user-data-to-vk.js~User",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/migrations/20170622164350-migrate-user-data-to-vk.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 237,
    "kind": "file",
    "name": "src/server/data/migrations/20170624090543-remove-password-from-users.js",
    "content": "'use strict';\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    return queryInterface.removeColumn('users', 'password')\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return queryInterface.addColumn('users', 'password', Sequelize.STRING)\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170624090543-remove-password-from-users.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 238,
    "kind": "file",
    "name": "src/server/data/migrations/20170624091449-remove-social_ids-from-users.js",
    "content": "'use strict';\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    return  queryInterface.removeColumn('users', 'facebook_id')\n            .then(() => queryInterface.removeColumn('users', 'vk_id'))\n            .then(() => queryInterface.removeColumn('users', 'twitter_id'))\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return  queryInterface.addColumn('users', 'facebook_id', Sequelize.STRING)\n            .then(() => queryInterface.addColumn('users', 'vk_id', Sequelize.STRING))\n            .then(() => queryInterface.addColumn('users', 'twitter_id', Sequelize.STRING))\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170624091449-remove-social_ids-from-users.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 239,
    "kind": "file",
    "name": "src/server/data/migrations/20170720222313-delete-decisions.js",
    "content": "'use strict';\nvar { Decision } = require('../models')\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    return Decision.destroy({where: {}})\n  },\n\n  down: function (queryInterface, Sequelize) {\n    /*\n      Add reverting commands here.\n      Return a promise to correctly handle asynchronicity.\n\n      Example:\n      return queryInterface.dropTable('users');\n    */\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170720222313-delete-decisions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 240,
    "kind": "variable",
    "name": "Decision",
    "memberof": "src/server/data/migrations/20170720222313-delete-decisions.js",
    "static": true,
    "longname": "src/server/data/migrations/20170720222313-delete-decisions.js~Decision",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/migrations/20170720222313-delete-decisions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 241,
    "kind": "file",
    "name": "src/server/data/migrations/20170723200422-add-rating-to-mood.js",
    "content": "'use strict';\n\nvar { Node, Mood } = require('../models')\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    /**\n     * 1) create column\n     * 2) grab each mood\n     * 3) grad each node for mood and count total rating\n     * 4) add this rating to mood\n     */\n    try {\n        return queryInterface.addColumn(\n          'moods',\n          'rating',\n          {\n            allowNull: null,\n            defaultValue: 0,\n            type: Sequelize.STRING,\n          }\n        ).then(() => {\n          return Mood\n            .findAll({where: {}})\n            .each(mood => {\n              return Node.sum(\n                'rating',\n                {\n                  where: {MoodId: mood.id}\n                }\n              ).then(rating => {\n                return Mood.update(\n                  { rating },\n                  {\n                    where: {\n                      id: mood.id\n                    }\n                  }\n                )\n              })\n            })\n        })\n    } catch (error) {\n      console.error(error);\n    }\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return queryInterface.removeColumn('moods', 'rating')\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170723200422-add-rating-to-mood.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 242,
    "kind": "variable",
    "name": "Node",
    "memberof": "src/server/data/migrations/20170723200422-add-rating-to-mood.js",
    "static": true,
    "longname": "src/server/data/migrations/20170723200422-add-rating-to-mood.js~Node",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/migrations/20170723200422-add-rating-to-mood.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 243,
    "kind": "file",
    "name": "src/server/data/migrations/20170802150411-remove-username-from-users.js",
    "content": "'use strict';\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    return queryInterface\n    /**\n     * ⚠️ somehow it was impossible to delete \"username\" column due to:\n     * \"Error: ER_CANT_DROP_FIELD_OR_KEY: Can't DROP 'username'; check that column/key exists\"\n     * so, making it nullable is a solution\n     */\n      .changeColumn('users', 'username', {\n        unique: false,\n        allowNull: true,\n        type: Sequelize.STRING,\n      })\n      .catch(error => {\n        console.log(error)\n        throw error\n      })\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return\n    // return queryInterface.addColumn('users', 'username', {type: Sequelize.STRING})\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170802150411-remove-username-from-users.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 244,
    "kind": "file",
    "name": "src/server/data/migrations/20170810195230-make-contentId-required-in-nodes.js",
    "content": "'use strict';\n\nvar { Node } = require('../models')\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    // destroy nodes with contentId == null, to avoid errors\n    return Node.destroy({\n      where: {contentId: null},\n    })\n    // make actual migration\n    .then(function() {\n      return queryInterface.changeColumn(\n        'nodes',\n        'contentId',\n        {\n          allowNull: false,\n          type: Sequelize.STRING,\n          unique: 'compositeIndex',\n        }\n      )\n    })\n    .catch(error => {\n      throw error\n    })\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return queryInterface.changeColumn(\n      'nodes',\n      'contentId',\n      {\n        allowNull: true,\n        type: Sequelize.STRING,\n        unique: 'compositeIndex',\n      }\n    )\n    .catch(function(error) {\n      console.error(error);\n      throw error\n    })\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20170810195230-make-contentId-required-in-nodes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 245,
    "kind": "variable",
    "name": "Node",
    "memberof": "src/server/data/migrations/20170810195230-make-contentId-required-in-nodes.js",
    "static": true,
    "longname": "src/server/data/migrations/20170810195230-make-contentId-required-in-nodes.js~Node",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/migrations/20170810195230-make-contentId-required-in-nodes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 246,
    "kind": "file",
    "name": "src/server/data/migrations/20171122123102-create-forums.js",
    "content": "'use strict';\nmodule.exports = {\n  up: function(queryInterface, Sequelize) {\n    return queryInterface.createTable('forums', {\n      id: {\n        unique: true,\n        primaryKey: true,\n        type: Sequelize.UUID,\n        validate: { isUUID: 4 },\n        defaultValue: Sequelize.UUIDV4,\n      },\n      name: {\n          unique: true,\n          allowNull: false,\n          type: Sequelize.STRING,\n      },\n      slug: {\n          unique: true,\n          allowNull: false,\n          type: Sequelize.STRING,\n      },\n      UserId: {\n        allowNull: false,\n        type: Sequelize.INTEGER\n      },\n      createdAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      updatedAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      }\n    });\n  },\n  down: function(queryInterface, Sequelize) {\n    return queryInterface.dropTable('forums');\n  }\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20171122123102-create-forums.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 247,
    "kind": "file",
    "name": "src/server/data/migrations/20171122124126-create-threads.js",
    "content": "'use strict';\nmodule.exports = {\n  up: function(queryInterface, Sequelize) {\n    return queryInterface.createTable('threads', {\n      id: {\n        unique: true,\n        primaryKey: true,\n        type: Sequelize.UUID,\n        validate: { isUUID: 4 },\n        defaultValue: Sequelize.UUIDV4,\n      },\n      name: {\n          unique: true,\n          allowNull: false,\n          type: Sequelize.STRING,\n      },\n      slug: {\n          unique: true,\n          allowNull: false,\n          type: Sequelize.STRING,\n      },\n      text: {\n        allowNull: false,\n        type: Sequelize.TEXT,\n      },\n      isClosed: {\n        defaultValue: false,\n        type: Sequelize.BOOLEAN,\n      },\n      parentId: {\n        allowNull: false,\n        type: Sequelize.UUID,\n      },\n      UserId: {\n        allowNull: false,\n        type: Sequelize.INTEGER\n      },\n      createdAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      updatedAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      }\n    });\n  },\n  down: function(queryInterface, Sequelize) {\n    return queryInterface.dropTable('threads');\n  }\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20171122124126-create-threads.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 248,
    "kind": "file",
    "name": "src/server/data/migrations/20171122124838-create-comments.js",
    "content": "'use strict';\nmodule.exports = {\n  up: function(queryInterface, Sequelize) {\n    return queryInterface.createTable('comments', {\n      id: {\n        unique: true,\n        primaryKey: true,\n        type: Sequelize.UUID,\n        validate: { isUUID: 4 },\n        defaultValue: Sequelize.UUIDV4,\n      },\n      text: {\n        allowNull: false,\n        type: Sequelize.TEXT,\n      },\n      parentId: {\n        allowNull: false,\n        type: Sequelize.UUID,\n      },\n      UserId: {\n        allowNull: false,\n        type: Sequelize.INTEGER\n      },\n      createdAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      updatedAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      }\n    });\n  },\n  down: function(queryInterface, Sequelize) {\n    return queryInterface.dropTable('comments');\n  }\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20171122124838-create-comments.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 249,
    "kind": "file",
    "name": "src/server/data/migrations/20171207184625-add-role-to-users.js",
    "content": "'use strict';\n\nmodule.exports = {\n  up: function (queryInterface, Sequelize) {\n    return  queryInterface.addColumn(\n      'users',\n      'role',\n      {\n        allowNull: false,\n        defaultValue: 'user',\n        type: Sequelize.STRING,\n      }\n  )\n  },\n\n  down: function (queryInterface, Sequelize) {\n    return  queryInterface.removeColumn('users', 'role')\n  }\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20171207184625-add-role-to-users.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 250,
    "kind": "file",
    "name": "src/server/data/migrations/20180201224948-create-subscriptions.js",
    "content": "'use strict';\nmodule.exports = {\n  up: function(queryInterface, Sequelize) {\n    return queryInterface.createTable('subscriptions', {\n      id: {\n        unique: true,\n        primaryKey: true,\n        type: Sequelize.UUID,\n        validate: { isUUID: 4 },\n        defaultValue: Sequelize.UUIDV4,\n      },\n      type: {\n        type: Sequelize.STRING,\n      },\n      parentId: {\n        allowNull: false,\n        type: Sequelize.STRING\n      },\n      UserId: {\n        allowNull: false,\n        type: Sequelize.INTEGER\n      },\n      createdAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      },\n      updatedAt: {\n        allowNull: false,\n        type: Sequelize.DATE\n      }\n    });\n  },\n  down: function(queryInterface, Sequelize) {\n    return queryInterface.dropTable('subscriptions');\n  }\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/migrations/20180201224948-create-subscriptions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 251,
    "kind": "file",
    "name": "src/server/data/models/comments.js",
    "content": "'use strict';\nmodule.exports = function(sequelize, DataTypes) {\n  var Comments = sequelize.define('Comments', {\n    id: {\n      unique: true,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      validate: { isUUID: 4 },\n      defaultValue: DataTypes.UUIDV4,\n    },\n    text: {\n      allowNull: false,\n      type: DataTypes.TEXT,\n    },\n    parentId: {\n      allowNull: false,\n      type: DataTypes.UUID,\n    },\n    UserId: {\n      allowNull: false,\n      type: DataTypes.INTEGER\n    },\n  }, {\n    classMethods: {\n      tableName: 'comments',\n      freezeTableName: true,\n      associate: function(models) {\n        Comments.belongsTo(models.User, {\n          foreignKey: { allowNull: false }\n        });\n        // TODO\n        // Comments.hasMany(models.Revisions)\n      },\n      // TODO do we need this?\n      findIdBySlug: function(slug) {\n        return Comments\n                .findOne({ where: { slug } })\n                .then(skill => skill && skill.get('id'))\n      }\n    }\n  });\n  return Comments;\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/models/comments.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 252,
    "kind": "function",
    "name": "exports",
    "memberof": "src/server/data/models/comments.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/data/models/comments.js~exports",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/comments.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "sequelize",
        "types": [
          "*"
        ]
      },
      {
        "name": "DataTypes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 253,
    "kind": "file",
    "name": "src/server/data/models/decision.js",
    "content": "'use strict';\n// THIS IS MESSED UP\n// TODO fix ASAP\nfunction colums(DataTypes) {\n  var types = {\n    rating: {\n      defaultValue: 0,\n      allowNull: false,\n      type: DataTypes.INTEGER\n    },\n    position: {\n      defaultValue: 0, // TODO what about this?\n      allowNull: false,// TODO and this?\n      type: DataTypes.INTEGER,\n    },\n    viewedAmount: {\n      defaultValue: 0,\n      allowNull: false,\n      type: DataTypes.INTEGER,\n    },\n    nextViewAt: DataTypes.DATE,\n    NodeId: {\n      allowNull: false,\n      type: DataTypes.INTEGER,\n      // unique: 'compositeIndex'\n    },\n    NodeRating: {\n      defaultValue: 0,\n      allowNull: false,\n      type: DataTypes.INTEGER,\n    },\n    UserId: {\n      allowNull: false,\n      type: DataTypes.INTEGER,\n      // unique: 'compositeIndex'\n    },\n    MoodId: {\n      allowNull: false,\n      type: DataTypes.INTEGER,\n      // unique: 'compositeIndex'\n    },\n    vote: {\n      allowNull: true,\n      type: DataTypes.BOOLEAN\n    }\n  }\n  if (process.env.NODE_ENV == 'production' || process.env.NODE_ENV == undefined) {\n    /* somehow even after dropping 'lastViewAt' in migration,\n      Sequelize does not remove the column.\n      This code is kept to avoid 'does not have default value' error\n    */\n    // types.lastViewAt = {\n    //   allowNull: false,\n    //   type: DataTypes.DATE,\n    //   defaultValue: DataTypes.NOW,\n    // }\n  }\n  return types\n}\n\nmodule.exports = function(sequelize, DataTypes) {\n  var Decision = sequelize.define('Decision', colums(DataTypes), {\n    tableName: 'decisions',\n    freezeTableName: true,\n    classMethods: {\n      associate: function(models) {\n        // associations can be defined here\n        Decision.belongsTo(models.Node, {foreignKey: 'NodeId', targetKey: 'id'});\n        Decision.belongsTo(models.User, {foreignKey: 'UserId', targetKey: 'id'});\n        // Decision.hasOne(models.Node)\n      }\n    }\n  });\n  return Decision;\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/models/decision.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 254,
    "kind": "function",
    "name": "colums",
    "memberof": "src/server/data/models/decision.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/data/models/decision.js~colums",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/decision.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "DataTypes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 255,
    "kind": "function",
    "name": "exports",
    "memberof": "src/server/data/models/decision.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/data/models/decision.js~exports",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/decision.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [
      {
        "name": "sequelize",
        "types": [
          "*"
        ]
      },
      {
        "name": "DataTypes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 256,
    "kind": "file",
    "name": "src/server/data/models/forums.js",
    "content": "'use strict';\nmodule.exports = function(sequelize, DataTypes) {\n  var Forums = sequelize.define('Forums', {\n    id: {\n      unique: true,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      validate: { isUUID: 4 },\n      defaultValue: DataTypes.UUIDV4,\n    },\n    name: {\n        unique: true,\n        allowNull: false,\n        type: DataTypes.STRING,\n    },\n    slug: {\n        unique: true,\n        allowNull: false,\n        type: DataTypes.STRING,\n    },\n    UserId: {\n      allowNull: false,\n      type: DataTypes.INTEGER\n    },\n  }, {\n    classMethods: {\n      tableName: 'forums',\n      freezeTableName: true,\n      // defaultScope: {\n      //   include: [{\n      //     model: require('./revisions'),\n      //     where: {active: true},\n      //   }],\n      // },\n      associate: function(models) {\n        Forums.belongsTo(models.User, {\n          // onDelete: \"CASCADE\", // TODO implement this?\n          foreignKey: {\n            allowNull: false\n          }\n        });\n        // TODO\n        // Forums.hasMany(models.Revisions)\n      },\n      // TODO do we need this?\n      findIdBySlug: function(slug) {\n        return Forums\n                .findOne({ where: { slug } })\n                .then(skill => skill && skill.get('id'))\n      }\n    }\n  });\n  return Forums;\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/models/forums.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 257,
    "kind": "function",
    "name": "exports",
    "memberof": "src/server/data/models/forums.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/data/models/forums.js~exports",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/forums.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "sequelize",
        "types": [
          "*"
        ]
      },
      {
        "name": "DataTypes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 258,
    "kind": "file",
    "name": "src/server/data/models/index.js",
    "content": "'use strict';\n\nvar fs        = require('fs');\nvar path      = require('path');\nvar Sequelize = require('sequelize');\nvar basename  = path.basename(module.filename || 'index.js');\nvar env       = process.env.NODE_ENV || 'development';\nvar config    = require(__dirname + '/../config.js')[env];\nvar db        = {};\n\nif (config.use_env_variable) {\n  var sequelize = new Sequelize(process.env[config.use_env_variable]);\n} else {\n  var sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\n// TODO rework to this in future (seems like a better decision)\n// var context = require.context('.', true, /.js?$/);\n// context.keys().forEach(key => {\n//   // console.log('context key', key)\n// })\n\nfs\n  .readdirSync(__dirname)\n  .filter(function(file) {\n    // console.log(file)\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n  })\n  .forEach(function(file) {\n    var model = sequelize['import'](path.resolve(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(function(modelName) {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/models/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 259,
    "kind": "variable",
    "name": "fs",
    "memberof": "src/server/data/models/index.js",
    "static": true,
    "longname": "src/server/data/models/index.js~fs",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 260,
    "kind": "variable",
    "name": "path",
    "memberof": "src/server/data/models/index.js",
    "static": true,
    "longname": "src/server/data/models/index.js~path",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 261,
    "kind": "variable",
    "name": "Sequelize",
    "memberof": "src/server/data/models/index.js",
    "static": true,
    "longname": "src/server/data/models/index.js~Sequelize",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 262,
    "kind": "variable",
    "name": "basename",
    "memberof": "src/server/data/models/index.js",
    "static": true,
    "longname": "src/server/data/models/index.js~basename",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 263,
    "kind": "variable",
    "name": "env",
    "memberof": "src/server/data/models/index.js",
    "static": true,
    "longname": "src/server/data/models/index.js~env",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 264,
    "kind": "variable",
    "name": "config",
    "memberof": "src/server/data/models/index.js",
    "static": true,
    "longname": "src/server/data/models/index.js~config",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 265,
    "kind": "variable",
    "name": "db",
    "memberof": "src/server/data/models/index.js",
    "static": true,
    "longname": "src/server/data/models/index.js~db",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 266,
    "kind": "file",
    "name": "src/server/data/models/local.js",
    "content": "'use strict';\nvar bcrypt   = require('bcrypt-nodejs');\n\nmodule.exports = function(sequelize, DataTypes) {\n  var Local = sequelize.define('Local', {\n    // TODO add checks: must not have spaces\n    UserId: {\n      allowNull: false,\n      type: DataTypes.INTEGER,\n    },\n    email: {\n      allowNull: false,\n      type: DataTypes.STRING,\n      unique: 'compositeIndex',\n      validate: {\n        isEmail: true,\n        notContains: [' '],\n      }\n    },\n    username: {\n      allowNull: false,\n      type: DataTypes.STRING,\n      unique: 'compositeIndex',\n      validate: {\n        notContains: [' '],\n      }\n    },\n    password: {\n      allowNull: false,\n      type: DataTypes.STRING,\n      validate: {\n        notContains: [' '],\n      }\n    }\n  }, {\n    tableName: 'locals',\n    freezeTableName: true,\n    classMethods: {\n      generateHash: function(password) {\n        return bcrypt.hashSync(password, bcrypt.genSaltSync(8), null);\n      },\n      // associations can be defined here\n      associate: function(models) {\n        Local.belongsTo(models.User, {foreignKey: 'UserId', targetKey: 'id'})\n      }\n    },\n    instanceMethods: {\n      validPassword: function(password) {\n        return bcrypt.compareSync(password, this.password)\n      }\n    },\n    // defaultScope: {\n    //   // where: {},\n    //   // attributes: { exclude: ['password'] },\n    // },\n    // scopes: {\n    //   protected: {\n    //     where: {},\n    //   }\n    // }\n  });\n  return Local;\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/models/local.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 267,
    "kind": "variable",
    "name": "bcrypt",
    "memberof": "src/server/data/models/local.js",
    "static": true,
    "longname": "src/server/data/models/local.js~bcrypt",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/local.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 268,
    "kind": "function",
    "name": "exports",
    "memberof": "src/server/data/models/local.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/data/models/local.js~exports",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/local.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "sequelize",
        "types": [
          "*"
        ]
      },
      {
        "name": "DataTypes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 269,
    "kind": "file",
    "name": "src/server/data/models/mood.js",
    "content": "'use strict';\nmodule.exports = function(sequelize, DataTypes) {\n  var Mood = sequelize.define('Mood', {\n    name: {\n        type: DataTypes.STRING,\n        allowNull: false,\n        unique: true\n    },\n    slug: {\n        type: DataTypes.STRING,\n        allowNull: false,\n        unique: true\n    },\n    UserId: {\n      allowNull: false,\n      type: DataTypes.INTEGER\n    },\n    rating: {\n      allowNull: null,\n      defaultValue: 0,\n      type: DataTypes.STRING,\n    },\n  }, {\n    classMethods: {\n      tableName: 'moods',\n      freezeTableName: true,\n      associate: function(models) {\n        Mood.belongsTo(models.User, {\n          // onDelete: \"CASCADE\", // TODO implement this?\n          foreignKey: {\n            allowNull: false\n          }\n        });\n        Mood.hasMany(models.Node)\n      },\n      findIdBySlug: function(slug) {\n        return Mood\n                .findOne({ where: { slug } })\n                .then(mood => mood && mood.get('id'))\n      }\n    }\n  });\n  return Mood;\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/models/mood.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 270,
    "kind": "function",
    "name": "exports",
    "memberof": "src/server/data/models/mood.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/data/models/mood.js~exports",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/mood.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "sequelize",
        "types": [
          "*"
        ]
      },
      {
        "name": "DataTypes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 271,
    "kind": "file",
    "name": "src/server/data/models/node.js",
    "content": "'use strict';\nmodule.exports = function(sequelize, DataTypes) {\n  var Node = sequelize.define('Node', {\n      url: {\n        allowNull: false,\n        type: DataTypes.STRING\n      },\n      provider: {\n        type: DataTypes.STRING,\n        unique: 'compositeIndex'\n      },\n      contentId: {\n        allowNull: false,\n        type: DataTypes.STRING,\n        unique: 'compositeIndex',\n      },\n      UserId: {\n        type: DataTypes.STRING,\n        allowNull: false\n      },\n      MoodId: {\n        type: DataTypes.STRING,\n        allowNull: false\n      },\n      rating: {\n        // Deciaml points allow making of rating to be unique\n        // example: rating = actualNumber + \".\" + Date.now()\n        type: DataTypes.STRING,\n        allowNull: false,\n        // TODO change this (and similar ones to Sequelize.NOW?)\n        defaultValue: () => {\n          return String(0 + '.' + Date.now() + (50 * Math.floor((Math.random() * 100) + 1)))\n        }, // TODO remove multiplier in future\n      },\n      type: DataTypes.STRING,\n  }, {\n    tableName: 'nodes',\n    freezeTableName: true,\n    classMethods: {\n      associate: function(models) {\n        // associations can be defined here\n        // Node.belongsTo(models.User, { // remember the bad copypaste? 'Mood.'\n        //   // onDelete: \"CASCADE\",\n        //   foreignKey: {\n        //     allowNull: false\n        //   }\n        // });\n        // Node.belongsTo(models.Mood, { // remember the bad copypaste? 'Mood.'\n        //   // onDelete: \"CASCADE\",\n        //   foreignKey: {\n        //     allowNull: false\n        //   }\n        // });\n        Node.belongsTo(models.Mood, {foreignKey: 'MoodId', targetKey: 'id'});\n        Node.hasOne(models.Decision)\n        Node.hasOne(models.Rating)\n      }\n    }\n  });\n  return Node;\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/models/node.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 272,
    "kind": "function",
    "name": "exports",
    "memberof": "src/server/data/models/node.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/data/models/node.js~exports",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/node.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "sequelize",
        "types": [
          "*"
        ]
      },
      {
        "name": "DataTypes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 273,
    "kind": "file",
    "name": "src/server/data/models/profile.js",
    "content": "'use strict';\nmodule.exports = function(sequelize, DataTypes) {\n  var Profile = sequelize.define('Profile', {\n      language: DataTypes.STRING,\n      UserId: {\n        allowNull: false,\n        type: DataTypes.INTEGER\n      }\n  }, {\n    tableName: 'profiles',\n    freezeTableName: true,    \n    classMethods: {\n      associate: function(models) {\n        Profile.belongsTo(models.User, {foreignKey: 'UserId', targetKey: 'id'});\n      }\n    }\n  });\n  return Profile;\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/models/profile.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 274,
    "kind": "function",
    "name": "exports",
    "memberof": "src/server/data/models/profile.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/data/models/profile.js~exports",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/profile.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "sequelize",
        "types": [
          "*"
        ]
      },
      {
        "name": "DataTypes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 275,
    "kind": "file",
    "name": "src/server/data/models/rating.js",
    "content": "'use strict';\nmodule.exports = function(sequelize, DataTypes) {\n  // add vote (allow null: true)\n  // add ratings model\n  var Rating = sequelize.define('Rating', {\n    value: {\n      // TODO move this into single function (or use sequelize.now?)\n      defaultValue: () => {\n        return String(0 + '.' + Date.now() + (50 * Math.floor((Math.random() * 100) + 1)))\n      }, // TODO remove multiplier in future\n      allowNull: false,\n      type: DataTypes.STRING\n    },\n    parentId: {\n      allowNull: false,\n      type: DataTypes.INTEGER,\n    }\n  }, {\n    tableName: 'ratings',\n    freezeTableName: true,\n    classMethods: {\n      // associations can be defined here\n      associate: function(models) {\n        Rating.belongsTo(models.Mood, {foreignKey: 'parentId', targetKey: 'id'});\n        Rating.belongsTo(models.Node, {foreignKey: 'parentId', targetKey: 'id'});\n        // TODO think about this. Do i even need rating inside Decision?\n        Rating.belongsTo(models.Decision, {foreignKey: 'parentId', targetKey: 'NodeId'});\n      }\n    }\n  });\n  return Rating;\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/models/rating.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 276,
    "kind": "function",
    "name": "exports",
    "memberof": "src/server/data/models/rating.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/data/models/rating.js~exports",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/rating.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "sequelize",
        "types": [
          "*"
        ]
      },
      {
        "name": "DataTypes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 277,
    "kind": "file",
    "name": "src/server/data/models/subscriptions.js",
    "content": "'use strict';\nmodule.exports = function(sequelize, DataTypes) {\n  var Subscriptions = sequelize.define('Subscriptions', {\n    id: {\n      unique: true,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      validate: { isUUID: 4 },\n      defaultValue: DataTypes.UUIDV4,\n    },\n    // you can subscribe to something in diffrente ways\n    // (exmp: subscribe to classroom as teacher, student or a parent)\n    type: {\n        type: DataTypes.STRING,\n    },\n    parentId: {\n      allowNull: false,\n      // move to UUID in future\n      type: DataTypes.STRING\n    },\n    UserId: {\n      allowNull: false,\n      type: DataTypes.INTEGER\n    },\n  }, {\n    classMethods: {\n      tableName: 'subscriptions',\n      freezeTableName: true,\n      associate: function(models) {\n        // subs belong to usr\n        Subscriptions.belongsTo(models.User, {\n          foreignKey: {allowNull: false}\n        })\n      },\n    }\n  });\n  return Subscriptions;\n};\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/models/subscriptions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 278,
    "kind": "function",
    "name": "exports",
    "memberof": "src/server/data/models/subscriptions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/data/models/subscriptions.js~exports",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/subscriptions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "sequelize",
        "types": [
          "*"
        ]
      },
      {
        "name": "DataTypes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 279,
    "kind": "file",
    "name": "src/server/data/models/threads.js",
    "content": "'use strict';\nmodule.exports = function(sequelize, DataTypes) {\n  var Threads = sequelize.define('Threads', {\n    id: {\n      unique: true,\n      primaryKey: true,\n      type: DataTypes.UUID,\n      validate: { isUUID: 4 },\n      defaultValue: DataTypes.UUIDV4,\n    },\n    name: {\n        unique: true,\n        allowNull: false,\n        type: DataTypes.STRING,\n    },\n    slug: {\n        unique: true,\n        allowNull: false,\n        type: DataTypes.STRING,\n    },\n    text: {\n      allowNull: false,\n      type: DataTypes.TEXT,\n    },\n    isClosed: {\n      defaultValue: false,\n      type: DataTypes.BOOLEAN,\n    },\n    parentId: {\n      allowNull: false,\n      type: DataTypes.UUID,\n    },\n    UserId: {\n      allowNull: false,\n      type: DataTypes.INTEGER\n    },\n  }, {\n    classMethods: {\n      tableName: 'threads',\n      freezeTableName: true,\n      // defaultScope: {\n      //   include: [{\n      //     model: require('./revisions'),\n      //     where: {active: true},\n      //   }],\n      // },\n      associate: function(models) {\n        Threads.belongsTo(models.User, {\n          // onDelete: \"CASCADE\", // TODO implement this?\n          foreignKey: {\n            allowNull: false\n          }\n        });\n        // TODO\n        // Threads.hasMany(models.Revisions)\n      },\n      // TODO do we need this?\n      findIdBySlug: function(slug) {\n        return Threads\n                .findOne({ where: { slug } })\n                .then(skill => skill && skill.get('id'))\n      }\n    }\n  });\n  return Threads;\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/models/threads.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 280,
    "kind": "function",
    "name": "exports",
    "memberof": "src/server/data/models/threads.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/data/models/threads.js~exports",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/threads.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "sequelize",
        "types": [
          "*"
        ]
      },
      {
        "name": "DataTypes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 281,
    "kind": "file",
    "name": "src/server/data/models/twitter.js",
    "content": "'use strict';\nmodule.exports = function(sequelize, DataTypes) {\n  var Twitter = sequelize.define('Twitter', {\n    // twitter id\n    id: {\n      primaryKey: true,\n      allowNull: false,\n      type: DataTypes.STRING,\n    },\n    // TODO add checks: must not have spaces\n    UserId: {\n      allowNull: false,\n      type: DataTypes.INTEGER,\n    },\n    username: {\n      // TODO uncheck this after migration\n      // TODO add UpdateOrCreate in TwitterAuth\n      // allowNull: false,\n      type: DataTypes.STRING,\n    },\n    displayName: DataTypes.STRING,\n    image: {\n      type: DataTypes.STRING,\n      allowNull: true,\n      validate: {\n        isUrl: true,\n        // TODO test\n        notContains: [' '],\n      }\n    },\n  }, {\n    tableName: 'twitters',\n    freezeTableName: true,\n    classMethods: {\n      associate: function(models) {\n        // associations can be defined here\n        Twitter.belongsTo(models.User, {foreignKey: 'UserId', targetKey: 'id'})\n      }\n    }\n  });\n  return Twitter;\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/models/twitter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 282,
    "kind": "function",
    "name": "exports",
    "memberof": "src/server/data/models/twitter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/data/models/twitter.js~exports",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/twitter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "sequelize",
        "types": [
          "*"
        ]
      },
      {
        "name": "DataTypes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 283,
    "kind": "file",
    "name": "src/server/data/models/user.js",
    "content": "'use strict';\nmodule.exports = function(sequelize, DataTypes) {\n  var User = sequelize.define('User', {\n    role: {\n      allowNull: false,\n      defaultValue: 'user',\n      type: DataTypes.STRING,\n    },\n    // TODO comment\n    image: DataTypes.STRING,\n    /*\n      NOTE: with non-latin characters the only way to avoid \"charset\" erros using sequelize\n      was to change mysql config to accept utf-8 and changing table charsets manually via\n      ALTER TABLE db_name.table_name CONVERT TO CHARACTER SET utf8;\n    */\n    displayName: DataTypes.STRING,\n  }, {\n    tableName: 'users',\n    freezeTableName: true,\n    classMethods: {\n      // associations can be defined here\n      associate: function(models) {\n        User.hasOne(models.Profile)\n        User.hasOne(models.Local)\n        User.hasOne(models.Twitter)\n        User.hasOne(models.Vk)\n      }\n    }\n  });\n  return User;\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/models/user.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 284,
    "kind": "function",
    "name": "exports",
    "memberof": "src/server/data/models/user.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/data/models/user.js~exports",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/user.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "sequelize",
        "types": [
          "*"
        ]
      },
      {
        "name": "DataTypes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 285,
    "kind": "file",
    "name": "src/server/data/models/vk.js",
    "content": "'use strict';\nmodule.exports = function(sequelize, DataTypes) {\n  var Vk = sequelize.define('Vk', {\n    // Vk id\n    id: {\n      primaryKey: true,\n      allowNull: false,\n      type: DataTypes.STRING,\n    },\n    // TODO add checks: must not have spaces\n    UserId: {\n      allowNull: false,\n      type: DataTypes.INTEGER,\n    },\n    username: {\n      // TODO uncheck this after migration\n      // TODO add UpdateOrCreate in VkAuth\n      // allowNull: false,\n      type: DataTypes.STRING,\n    },\n    displayName: {\n      type: DataTypes.STRING,\n      charset: 'utf8',\n      collate: 'utf8_unicode_ci',\n    },\n    image: {\n      type: DataTypes.STRING,\n      allowNull: true,\n      validate: {\n        isUrl: true,\n        // TODO test\n        notContains: [' '],\n      }\n    },\n  }, {\n    tableName: 'vks',\n    freezeTableName: true,\n    classMethods: {\n      associate: function(models) {\n        // associations can be defined here\n        Vk.belongsTo(models.User, {foreignKey: 'UserId', targetKey: 'id'})\n      }\n    }\n  });\n  return Vk;\n};",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/data/models/vk.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 286,
    "kind": "function",
    "name": "exports",
    "memberof": "src/server/data/models/vk.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/data/models/vk.js~exports",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/data/models/vk.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [
      {
        "name": "sequelize",
        "types": [
          "*"
        ]
      },
      {
        "name": "DataTypes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 287,
    "kind": "file",
    "name": "src/server/middlewares/authApi/authApi.js",
    "content": "import { User, Profile, Local, Twitter } from 'server/data/models'\nimport passport from \"passport\"\nimport express from \"express\"\nimport selectn from 'selectn'\nimport local from './localAuth'\nimport twitter from './twitterAuth'\nimport vk from './vkAuth'\n\n// User session support for our hypothetical `user` objects.\npassport.serializeUser(function(user, done) {\n  done(null, user.id);\n});\n\npassport.deserializeUser(function(id, done) {\n    User\n    .findById(id, {\n      raw: true,\n      nest: true,\n      include: [Profile, Local, Twitter]\n    })\n    .then(user => done(null, user))\n    .catch(error => {\n      console.error(error)\n      done(error)\n    });\n});\n\n// routes\nconst router = express.Router(); // TODO refactor without \"const\"?\nrouter\n  .use(local)\n  .use(twitter)\n  .use(vk)\n  .get('/logout', (req, res) => {\n    if (req.user) {\n      req.logout()\n      req.session = null\n      // req.session.destroy()\n      res.end()\n    }\n    else res.status(401).end()\n  })\n  .get('/current_user', (req, res) => {\n      res.json(req.user ? req.user : {})\n  })\n\nexport {passport}\nexport default router",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/authApi/authApi.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 288,
    "kind": "variable",
    "name": "router",
    "memberof": "src/server/middlewares/authApi/authApi.js",
    "static": true,
    "longname": "src/server/middlewares/authApi/authApi.js~router",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/middlewares/authApi/authApi.js",
    "importStyle": "router",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 289,
    "kind": "file",
    "name": "src/server/middlewares/authApi/index.js",
    "content": "export { default, passport } from './authApi'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/authApi/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 290,
    "kind": "file",
    "name": "src/server/middlewares/authApi/localAuth.js",
    "content": "import passport from \"passport\"\nimport { Router } from \"express\"\nimport { User, Local, Profile } from 'server/data/models'\nimport { Strategy as LocalStrategy } from \"passport-local\"\nimport { createUser } from 'server/data/controllers/UserController'\nimport { normalizeUserInfo } from 'server/data/controllers/UserController'\n\nconst { URL } = process.env\nconst router = Router()\n\nrouter\n  .post('/signup',   async function(req, res) {\n    const { username, email, password } = req.body\n    // TODO test for params\n    if(!username || !email || !password) res.status(400).end('params are required')\n    // find a user whose email is the same as the forms email\n    // we are checking to see if the user trying to login already exists\n\n    // TODO add validation tests\n    try {\n        const existingUser =  await Local.findOne({\n                                where: {\n                                  $or: [{email}, {username}]\n                              }})\n\n        if (existingUser) res.status(401).end('user already exists')\n        else {\n          const user = await createUser('Local', req.body)\n          req.login(user, error => {\n            if (error) throw new Error(error)\n            else return res.json(user)\n          })\n        }\n    } catch (error) {\n        console.error(error)\n        res.status(500).end(error)\n    }\n  })\n\n  .post('/login', async function(req, res) {\n      try {\n        const {username, password} = req.body\n        if(!username || !password) return res.status(400).end('Invalid query')\n        // TODO this\n        const email = username\n        const user =  await User.findOne({\n                        where: {},\n                        include: [Profile, {\n                          model: Local,\n                          where: { $or: [{email}, {username}] },\n                        }],\n                      })\n        if (!user) {\n          return res.status(401).end('User not exists')\n        }\n        if (!user.Local.validPassword(password)) {\n          const newLocal = await Local.findById(user.Local.id)\n          return res.status(401).end('Incorrect password')\n        }\n        req.login(user, error => {\n          if (error) throw new Error(error)\n          else return res.json(user)\n        })\n      } catch (error) {\n          console.error(error)\n          res.status(500).end(error)\n      }\n  })\n  // TODO tests\n  .get('/validate/:username', async (req, res) => {\n    const {username} = req.params\n    Local\n    .findOne({\n      where: {\n        $or: [{username}, {email: username}]\n      }\n    })\n    .then(user => res.json(user || {}))\n  })\n\nexport default router",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/authApi/localAuth.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 291,
    "kind": "variable",
    "name": "URL",
    "memberof": "src/server/middlewares/authApi/localAuth.js",
    "static": true,
    "longname": "src/server/middlewares/authApi/localAuth.js~URL",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/middlewares/authApi/localAuth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 292,
    "kind": "variable",
    "name": "router",
    "memberof": "src/server/middlewares/authApi/localAuth.js",
    "static": true,
    "longname": "src/server/middlewares/authApi/localAuth.js~router",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/middlewares/authApi/localAuth.js",
    "importStyle": "router",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 293,
    "kind": "file",
    "name": "src/server/middlewares/authApi/twitterAuth.js",
    "content": "import { createUser, normalizePublicInfo, updateSocialInfo } from 'server/data/controllers/UserController'\nimport { Strategy as TwitterStrategy } from \"passport-twitter\"\nimport { User, Twitter, Profile } from 'server/data/models'\nimport passport from \"passport\"\nimport express from \"express\"\nimport selectn from 'selectn'\n\nconst { URL, TWITTTER_ID, TWITTER_SECRET } = process.env\n\n/* TWITTER AUTH */\npassport.use(new TwitterStrategy({\n    consumerKey: TWITTTER_ID,\n    consumerSecret: TWITTER_SECRET,\n    callbackURL: URL +  \"api/auth/twitter/callback\"\n  },\n  async function(token, tokenSecret, profile, done) {\n    const payload = {\n      id: profile.id,\n      username: profile.username,\n      displayName: profile.screen_name,\n      image: selectn('photos[0].value', profile),\n    }\n\n    try {\n      const existingUser = await User.findOne({\n        where: {},\n        include: [{\n          model: Twitter,\n          where: {id: profile.id},\n        }, Profile],\n        raw: true,\n        nest: true,\n      })\n\n      // TODO add findUser function in UsersController\n\n      if (existingUser) {\n        // update social info incase it has changed\n        await updateSocialInfo('Twitter', payload)\n        // update user info (image, displayName) if it's not up to date\n        const updatedUser = await normalizePublicInfo(existingUser.id)\n        return done(null, updatedUser)\n      }\n      else {\n        // TODO rework this\n        const user = await createUser('Twitter', payload)\n        done(null, user)\n      }\n    } catch (error) {\n      console.error(error);\n      done(error)\n    }\n  }\n));\n\n// routes\nconst router = express.Router(); // TODO refactor without \"const\"?\nrouter\n  .get('/twitter', passport.authenticate('twitter'))\n  // TODO try disabling redirects\n  // https://github.com/jaredhanson/passport-twitter#authenticate-requests\n  .get('/twitter/callback',\n     passport.authenticate('twitter', { successRedirect: '/',\n                                        failureRedirect: '/failed-login' })) // TODO implement failure login route\nexport default router",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/authApi/twitterAuth.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 294,
    "kind": "variable",
    "name": "URL",
    "memberof": "src/server/middlewares/authApi/twitterAuth.js",
    "static": true,
    "longname": "src/server/middlewares/authApi/twitterAuth.js~URL",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/middlewares/authApi/twitterAuth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 295,
    "kind": "variable",
    "name": "router",
    "memberof": "src/server/middlewares/authApi/twitterAuth.js",
    "static": true,
    "longname": "src/server/middlewares/authApi/twitterAuth.js~router",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/middlewares/authApi/twitterAuth.js",
    "importStyle": "router",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "file",
    "name": "src/server/middlewares/authApi/vkAuth.js",
    "content": "import { createUser, normalizePublicInfo, updateSocialInfo } from 'server/data/controllers/UserController'\nimport { Strategy as VKontakteStrategy } from \"passport-vkontakte\"\nimport { User, Vk, Profile } from 'server/data/models'\nimport passport from \"passport\"\nimport express from \"express\"\nimport selectn from 'selectn'\n\nconst { URL, VK_ID, VK_SECRET,} = process.env\n\n/* VK AUTH */\npassport.use(new VKontakteStrategy(\n  {\n    clientID:     VK_ID,\n    clientSecret: VK_SECRET,\n    callbackURL:  URL +  \"api/auth/vkontakte/callback\"\n  },\n  async function myVerifyCallbackFn(accessToken, refreshToken, params, profile, done) {\n    const payload = {\n      id: profile.id,\n      username: profile.username,\n      displayName: profile.displayName,\n      image: selectn('photos[0].value', profile),\n    }\n\n    try {\n      const existingUser = await User.findOne({\n        where: {},\n        include: [{\n          model: Vk,\n          where: {id: profile.id},\n        }, Profile],\n        raw: true,\n        nest: true,\n      })\n\n      // TODO add findUser function in UsersController\n\n      if (existingUser) {\n        // update social info incase it has changed\n        await updateSocialInfo('Vk', payload)\n        // update user info (image, displayName) if it's not up to date\n        const updatedUser = await normalizePublicInfo(existingUser.id)\n        return done(null, updatedUser)\n      }\n      else {\n        const user = await createUser('Vk', payload)\n        done(null, user)\n      }\n    } catch (error) {\n      console.error(error)\n      done(error)\n    }\n  }\n));\n\n// routes\nconst router = express.Router(); // TODO refactor without \"const\"?\nrouter\n  .get('/vkontakte', passport.authenticate('vkontakte')) // , {scope: ['email']}\n  .get('/vkontakte/callback',\n    passport.authenticate('vkontakte', { successRedirect: '/',\n                                          failureRedirect: '/failed-login' }))\n\nexport default router",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/authApi/vkAuth.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 297,
    "kind": "variable",
    "name": "URL",
    "memberof": "src/server/middlewares/authApi/vkAuth.js",
    "static": true,
    "longname": "src/server/middlewares/authApi/vkAuth.js~URL",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/middlewares/authApi/vkAuth.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 298,
    "kind": "variable",
    "name": "router",
    "memberof": "src/server/middlewares/authApi/vkAuth.js",
    "static": true,
    "longname": "src/server/middlewares/authApi/vkAuth.js~router",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/middlewares/authApi/vkAuth.js",
    "importStyle": "router",
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 299,
    "kind": "file",
    "name": "src/server/middlewares/commentsApi/commentsApi.js",
    "content": "import slugify from 'slug'\nimport { Router } from 'express'\nimport generateUuid from 'uuid/v4'\nimport { Comments } from 'server/data/models'\nimport { mustLogin } from 'server/services/permissions'\n\nconst limit = 12\n\nexport default Router()\n\n  // get all comments\n  .get('/:page?', async (req, res) => {\n    try {\n      const page = req.params.page,\n            totalCommentss = await Comments.count(),\n            offset = page ? limit * (page -1) : 0,\n            totalPages = Math.ceil(totalCommentss / limit),\n            comments = await Comments.findAll({limit, offset})\n      res.json({ comments, totalPages })\n    }\n    catch (error) {\n      console.log(error);\n      res.status(500).end(error)\n    }\n  })\n\n  // get single comment\n  .get('/comment/:commentsId', async ({params}, res) => {\n    try {\n      const comment = await Comments.findById(params.commentsId)\n      res.json(comment)\n    } catch (error) {\n      console.log(error)\n      res.status(500).end(error)\n    }\n  })\n\n  // update comment\n  .put('/:commentsId', mustLogin, async ({user, body, params}, res) => {\n    try {\n      const UserId = user.id\n      const comment = await Comments.findById(params.commentsId)\n\n      // check permissions\n      if (Comments.UserId != UserId) return res.status(401).end()\n      else res.json(await comment.update(body))\n\n    } catch (error) {\n      console.log(error)\n      res.status(500).end(error)\n    }\n  })\n\n  // create comment\n  .post('/', mustLogin, async ({user, body}, res) => {\n    try {\n      const UserId = user.id\n      const comment = await Comments.create({...body, UserId})\n      res.json(comment)\n    } catch (error) {\n      console.log(error)\n      res.status(500).end(error)\n    }\n  })",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/commentsApi/commentsApi.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 300,
    "kind": "variable",
    "name": "limit",
    "memberof": "src/server/middlewares/commentsApi/commentsApi.js",
    "static": true,
    "longname": "src/server/middlewares/commentsApi/commentsApi.js~limit",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/middlewares/commentsApi/commentsApi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 301,
    "kind": "file",
    "name": "src/server/middlewares/commentsApi/index.js",
    "content": "export { default } from './commentsApi'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/commentsApi/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 302,
    "kind": "file",
    "name": "src/server/middlewares/decisionsApi.js",
    "content": "import { Node, Mood, Decision, User } from 'server/data/models'\nimport { mustLogin } from 'server/services/permissions'\nimport { Router } from 'express'\n\nexport default Router()\n  .post('/', mustLogin, async function({user, body}, res) {\n    /*\n      When user makes a decision we need to:\n      1. Create a Decision\n      2. Update Node.rating\n    */\n    try {\n      const { id: UserId } = user,\n            { NodeId, vote } = body,\n            node = await Node.findById(NodeId),\n            newRating = Number(node.rating) + (vote ? 1 : -1)\n\n      // 1. Create a Decision\n      const decision = await Decision.create({\n        vote,\n        NodeId,\n        UserId,\n        MoodId: node.MoodId,\n        NodeRating: newRating,\n      })\n      // 2. Update Node.rating\n      await node.increment(\n        { rating: newRating },\n        { where: { id: NodeId } }\n      )\n      // send response\n      res.json(decision)\n    } catch (error) {\n      console.error(error)\n      res.boom.internal(error.message)\n    }\n  })\n\n  .put('/', mustLogin, async function({user, body, params}, res) {\n    /*\n      When user changes decision we need to:\n      1. Update a Decision\n      2. Update Node.rating\n    */\n    try {\n      const { id: UserId } = user,\n            decision = await Decision.findById(body.id),\n            node = await Node.findById(decision.NodeId),\n            newRating = Number(node.rating) + (body.vote ? 1 : -1)\n      // Update Node.rating\n      await node.increment(\n        { rating: newRating },\n        { where: { id: node.id } }\n      )\n      // update decision\n      res.json(\n        await decision.update({\n          vote: body.vote,\n          NodeRating: newRating,\n        })\n      )\n    } catch (error) {\n      console.error(error)\n      res.boom.internal(error.message)\n    }\n  })",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/decisionsApi.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 303,
    "kind": "file",
    "name": "src/server/middlewares/externalsApi.js",
    "content": "import { Node, Mood, Decision, User } from 'server/data/models'\nimport { mustLogin } from 'server/services/permissions'\nimport { parse as parseQuery } from 'query-string'\nimport { parseUrl } from 'shared/parsers'\nimport extend from 'lodash/assignIn'\nimport isEmpty from 'lodash/isEmpty'\n// import YouTube from 'youtube-node'\nimport sequelize from \"sequelize\"\nimport { Router } from \"express\"\n\n/**\n * NOTE: youtube-node is the reason behind \"uuid warning\"\n * which frequently pops up on build\n * upgrade it in the future and remove this note\n */\n\n\n/*\n  ⚠️ note about YouTube API ⚠️\n  currently youtube key works only on specific IP's\n  so, when multi server infrastructure is created either\n  add server IP addresses in YouTube dashboard,\n  or bound key to website URL and move YT search to client\n*/\n// const youTube = new YouTube(),\n//       maxResults = 4,\n//       options = {\n//                   maxResults,\n//                   type: 'video',\n//                   videoEmbeddable: true,\n//                 }\n// youTube.setKey(process.env.YOUTUBE_KEY);\n\n// // routes\nexport default Router()\n  .get('/search', async function(req, res) {\n    try {\n      res.end()\n      // const selector = req.query.query // TODO rework this ✏️\n      // if (!selector || isEmpty(selector)) return res.boom.badRequest('invalid query')\n      // youTube.search(selector, maxResults, options,\n      //   (error, result) => {\n      //     if (error) throw error\n      //     else res.json(result.items)\n      // });\n    } catch (error) {\n      console.error(error);\n      res.boom.internal(error)\n    }\n  })\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/externalsApi.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 304,
    "kind": "file",
    "name": "src/server/middlewares/forumsApi/forumsApi.js",
    "content": "import slugify from 'slug'\nimport { Router } from 'express'\nimport generateUuid from 'uuid/v4'\nimport { Forums } from 'server/data/models'\nimport { getThreads } from 'server/middlewares/threadsApi'\nimport { mustLogin, isAdmin } from 'server/services/permissions'\nconst limit = 12\n\nexport default Router()\n\n  // get all forums\n  .get('/:page?', async (req, res) => {\n    try {\n      const page = req.params.page,\n            totalForumss = await Forums.count(),\n            offset = page ? limit * (page -1) : 0,\n            totalPages = Math.ceil(totalForumss / limit),\n            values = await Forums.findAll({limit, offset})\n      res.json({ values, totalPages, currentPage: page || 1 })\n    }\n    catch (error) {\n      console.log(error);\n      res.status(500).end(error)\n    }\n  })\n\n  // get single forum\n  .get('/forum/:slug', async ({params}, res) => {\n    try {\n      const forum = await Forums.findOne({\n        where: { slug: params.slug }\n      })\n      forum.dataValues.threads = await getThreads(forum.id)\n      res.json(forum)\n    } catch (error) {\n      console.log(error)\n      res.status(500).end(error)\n    }\n  })\n\n  // update forum\n  .put('/:forumsId', isAdmin, async ({user, body, params}, res) => {\n    try {\n      const UserId = user.id\n      const forum = await Forums.findById(params.forumsId)\n\n      // check permissions\n      if (Forums.UserId != UserId) return res.status(401).end()\n      else res.json(await forum.update(body))\n\n    } catch (error) {\n      console.log(error)\n      res.status(500).end(error)\n    }\n  })\n\n  // create forum\n  .post('/', isAdmin, async ({user, body}, res) => {\n    try {\n      const UserId = user.id\n      const slug = slugify(body.name)\n      const forum = await Forums.create({...body, slug, UserId})\n      res.json(forum)\n    } catch (error) {\n      console.log(error)\n      res.status(500).end(error)\n    }\n  })",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/forumsApi/forumsApi.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 305,
    "kind": "variable",
    "name": "limit",
    "memberof": "src/server/middlewares/forumsApi/forumsApi.js",
    "static": true,
    "longname": "src/server/middlewares/forumsApi/forumsApi.js~limit",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/middlewares/forumsApi/forumsApi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 306,
    "kind": "file",
    "name": "src/server/middlewares/forumsApi/index.js",
    "content": "export { default } from './forumsApi'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/forumsApi/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 307,
    "kind": "file",
    "name": "src/server/middlewares/moodsApi/index.js",
    "content": "export { default } from './moodsApi'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/moodsApi/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 308,
    "kind": "file",
    "name": "src/server/middlewares/moodsApi/moodsApi.js",
    "content": "import { getUsersMoods } from 'server/data/controllers/MoodsController'\nimport { mustLogin } from 'server/services/permissions'\nimport { Mood, Node } from 'server/data/models'\nimport express from 'express'\nimport slugify from 'slug'\n\n// routes\nconst router = express.Router(); // TODO refactor without \"const\"?\nconst limit = 12\n\nrouter\n\n  .get('/search/:name/:page?', async (req, res) => { // TODO make sure pagination works right\n    try {\n      const { page, name } = req.params\n      if (!name) return res.boom.badRequest('invalid query')\n      const offset = page ? limit * (page -1) : 0\n      const where = {\n                      name: { $like: '%' + name + '%' }\n                    }\n      const totalMoods = await Mood.count({ where })\n      const totalPages = Math.round(totalMoods / limit)\n      const moods = await Mood.findAll({\n        limit,\n        offset,\n        where,\n        include: [{ model: Node, limit: 1 }] // for preview image\n      }) || []\n      res.json({ moods, totalPages })\n    }\n    catch (error) {\n      console.log(error);\n      res.boom.internal(error)\n    }\n  })\n\n  // create mood\n  .post('/', mustLogin, async ({user: { id: UserId }, body: { name }}, res) => {\n    try {\n      const slug = slugify(name)\n      const mood = await Mood.create({ UserId, name, slug }) // TODO move this in model definition?\n      res.json(mood)\n    } catch (error) {\n      console.log(error)\n      res.boom.internal(error)\n    }\n  })\n\n  // get single mood by slug or name\n  .get('/mood/:slug?', async ({params, query}, res) => {\n    try {\n      const slug = params.slug\n      const name = query.name\n      const mood = await Mood.findOne({\n        where: {\n          $or: [{slug}, {name}]\n        }\n      })\n      res.json(mood)\n    } catch (error) {\n      console.log(error)\n      res.boom.internal(error)\n    }\n  })\n\n  /**\n   * ⚠️ TODO rework next 3 into single route ✏️\n   */\n\n  // get random moods\n  .get('/random/:page?', async (req, res) => { // TODO make sure pagination works right\n    try {\n      const page = req.params.page\n      const offset = page ? limit * (page -1) : 0\n      const totalMoods = await Mood.count()\n      const totalPages = Math.ceil(totalMoods / limit)\n      const moods = await Mood.findAll({\n        limit,\n        offset,\n        order: 'rand()',\n        // add preview image\n        include: [{\n          limit: 1,\n          model: Node,\n          order: 'rand()',\n        }]\n      })\n      res.json({ moods, totalPages })\n    }\n    catch (error) {\n      console.error(error);\n      res.status(500).send(error)\n    }\n  })\n\n  // get popular moods\n  .get('/popular/:page?', async (req, res) => { // TODO make sure pagination works right\n    try {\n      const page = req.params.page\n      const offset = page ? limit * (page -1) : 0\n      const totalMoods = await Mood.count()\n      const totalPages = Math.ceil(totalMoods / limit)\n      const moods = await Mood.findAll({\n        limit,\n        offset,\n        order: [['rating', 'DESC']],\n        // add preview image\n        include: [{\n          limit: 1,\n          model: Node,\n          order: 'rand()',\n        }]\n      })\n      res.json({ moods, totalPages })\n    }\n    catch (error) {\n      console.error(error);\n      res.status(500).send(error)\n    }\n  })\n\n\n  // get new moods\n  .get('/new/:page?', async (req, res) => { // TODO make sure pagination works right\n    try {\n      const page = req.params.page\n      const offset = page ? limit * (page -1) : 0\n      const totalMoods = await Mood.count()\n      const totalPages = Math.ceil(totalMoods / limit)\n      const moods = await Mood.findAll({\n        limit,\n        offset,\n        order: [['createdAt', 'DESC']],\n        // add preview image\n        include: [{\n          limit: 1,\n          model: Node,\n          order: 'rand()',\n        }]\n      })\n      res.json({ moods, totalPages })\n    }\n    catch (error) {\n      console.error(error)\n      res.status(500).send(error)\n    }\n  })\n\n  // TODO delete this? 💀\n  // get moods by userId\n  // .get('/user/:UserId/:page?', async (req, res) => { // TODO make sure pagination works right\n  //   try {\n  //     const { UserId, page } = req.params\n  //     const data = await getUsersMoods(UserId, page)\n  //     res.json({ data })\n  //   }\n  //   catch (error) {\n  //     console.error(error);\n  //     res.status(500).send(error)\n  //   }\n  // })\n\nexport default router",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/moodsApi/moodsApi.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 309,
    "kind": "variable",
    "name": "limit",
    "memberof": "src/server/middlewares/moodsApi/moodsApi.js",
    "static": true,
    "longname": "src/server/middlewares/moodsApi/moodsApi.js~limit",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/middlewares/moodsApi/moodsApi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 310,
    "kind": "variable",
    "name": "router",
    "memberof": "src/server/middlewares/moodsApi/moodsApi.js",
    "static": true,
    "longname": "src/server/middlewares/moodsApi/moodsApi.js~router",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/middlewares/moodsApi/moodsApi.js",
    "importStyle": "router",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 311,
    "kind": "file",
    "name": "src/server/middlewares/nodesApi.js",
    "content": "import { Router } from \"express\"\nimport sequelize from \"sequelize\"\nimport extend from 'lodash/assignIn'\nimport { parseUrl } from 'shared/parsers'\nimport { mustLogin } from 'server/services/permissions'\nimport { Node, Mood, Decision, User } from 'server/data/models'\nimport { normalizeRating } from 'server/data/controllers/NodesController'\nimport { updatePositionAndViews } from 'server/data/controllers/DecisionsController'\nimport { findHighestRatingNode, findRandomNode, findRandomNodes } from 'server/data/controllers/NodesController'\n\n// routes\nexport default Router()\n\n  .get('/:moodSlug/', async function(req, res) {\n    const { moodSlug } = req.params\n    try {\n      // validate params\n      if (!moodSlug) return res.status(400).end('mood slug is required')\n      // const MoodId = await Mood.findIdBySlug(moodSlug)\n      Mood\n      .findIdBySlug(moodSlug)\n      // find nodes\n      .then(MoodId => findRandomNodes(MoodId))\n      // respond\n      .then(nodes => res.json(nodes || []))\n    } catch (error) {\n      console.error(error);\n      res.boom.internal(error)\n    }\n  })\n\n  // get node for async validation in node adding form\n  .get('/validate/:MoodId/:contentId', async function(req, res) {\n    const { params } = req\n    try {\n      // validate params\n      if (!params.MoodId) return res.status(400).end('mood id is required')\n      if (!params.contentId) return res.status(400).end('content id is required')\n      // find node\n      Node.findOne({where: params})\n      // respond\n      .then(node => res.json(node || {}))\n    } catch (error) {\n      console.error(error);\n      res.boom.internal(error)\n    }\n  })\n\n  .get('/deprecated/:moodSlug/:nodeId?', async function({ params, user }, res) {\n    /*\n      If user is NOT logged in:\n        1. Show highest rated Node\n        2. Afterwards show lower rated Node\n        3. If there is no Node just send the highest rated one\n      If user IS logged in:\n        1.\n    */\n\n    try {\n\n      let response\n\n      const UserId = await user && user.id\n      const MoodId = await Mood.findIdBySlug(params.moodSlug)\n      const previousNode = await params.nodeId\n                              ? await Node.findById(params.nodeId)\n                              : null\n      if (!MoodId) return res.status(404).send('mood not found')\n\n      // see function comment (hover over it)\n      if (previousNode) await normalizeRating(previousNode)\n\n      /* USER IS NOT LOGGED IN */\n      // if (!UserId) {\n      //   if(previousNode) {\n      //     response = await Node.findOne({\n      //                         where: {\n      //                           MoodId,\n      //                           id: { $not: previousNode.id }, // TODO i most likely don't need this\n      //                           rating: { $lt: previousNode.rating },\n      //                         },\n      //                         order: [['rating', 'DESC']] // TODO ineed this?\n      //                       })\n      //   }\n      // // }\n\n      /* USER IS LOGGED IN */\n      // TODO some of this things i do in decisionsApi\n      // else {// IMPLEMENT THIS // DO NOT FORGET TO IMPLEMENT DECISIONS ON USER CREATION\n      //     if (previousNode) {\n      //       /* set lastViewAt, increment viewedAmount and set position */\n      //       const where = { UserId, NodeId: previousNode.id }\n      //       // TODO test 'findOrCreate'\n      //       const previousDecision =  await Decision.findOrCreate({\n      //         where,\n      //         limit: 1,\n      //         defaults: {MoodId},\n      //       })\n      //       // TODO remove this in future (when availability of decision will be certain)\n      //       if (previousDecision) await updatePositionAndViews(previousDecision)\n      //       // find next node\n      //       response = await findHighestRatingNode(MoodId, UserId, previousDecision.NodeRating) // $qt //.position // TODO qt is not unique?\n      //       console.log('response: ', response);\n      //   }\n      // }\n\n      // // fallback to highest rated node if nothing was found\n      // if (!response) response = await findHighestRatingNode(MoodId, UserId)\n      if (!response) response = await findRandomNode(MoodId)\n      // close request\n      res.json(response)\n    } catch (error) {\n      console.error(error);\n      res.boom.internal(error)\n    }\n  })\n\n  .post('/', mustLogin, async function({user, body}, res) {\n    // TODO add validations\n    /*\n      When user creates a node do the following:\n      1. Create Node\n      2. Create a Decision for every User corresponding with this NodeId\n    */\n    try {\n      const MoodId = body.MoodId || await Mood.findIdBySlug(body.moodSlug)\n      const url = body.url || 'https://www.youtube.com/watch?v=' + body.contentId\n      extend(\n        body,\n        { url, MoodId, UserId: user.id },\n        // url is optional if 'provider' and 'contentId' is provided\n        body.url ? parseUrl(body.url) : undefined\n      )\n      const node   = await Node.create(body)\n      const users  = await User.findAll()\n\n      await users.forEach(async user => {\n            return await Decision.create({\n                      UserId: user.get('id'),\n                      NodeId: node.get('id'),\n                      MoodId: node.get('MoodId'),\n                      NodeRating: node.get('rating'),\n                    })\n      })\n\n      res.json(node)\n    } catch (error) {\n      console.error(error);\n      res.boom.internal(error)\n    }\n  })",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/nodesApi.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 312,
    "kind": "file",
    "name": "src/server/middlewares/SSR.js",
    "content": "import 'isomorphic-fetch' // fetch polyfill\nimport React from 'react'\nimport express from \"express\"\nimport routes from 'browser/routes'\nimport { Helmet } from 'react-helmet'\nimport session from 'express-session'\nimport { Provider } from 'react-redux'\nimport Cookies from 'universal-cookie'\nimport store from 'browser/redux/store'\nimport themeConfig from 'browser/theme'\nimport match from 'react-router/lib/match'\nimport serialize from 'serialize-javascript'\nimport { renderToString } from 'react-dom/server'\nimport { CookiesProvider } from 'react-cookie'\nimport { ServerStyleSheet, StyleSheetManager } from 'styled-components'\n// const cache = require('express-redis-cache')();\n\nexport default\n  express.Router()\n  // all routes are processed client side via react-router\n  .get('*',\n  /**\n   * ⚠️ caching is disabled on purpose ⚠️\n   * it caused problems with prerendered redux state not changing after code change,\n   * users seeing non-theirs avatars and so on.\n   */\n  // TODO setup caching for logged in and unlogged\n  // TODO setup caching for /mood/something\n  // middleware to define cache prefix\n  // function (req, res, next) {\n  //   // TODO user cache\n  //   // set cache name\n  //   res.express_redis_cache_name = 'url-' + req.url\n  //   next();\n  // },\n\n  // // middleware to decide if using cache\n  // function (req, res, next) {\n  //   // Use only cache if user not signed in\n  //   res.use_express_redis_cache = !req.user;\n  //   next();\n  // },\n\n  // // cache middleware\n  // cache.route(),\n  // markup renderer\n  function(req, res) {\n    match(\n        {routes, location: req.url},\n        (error, redirectLocation, renderProps) => {\n          if (error) res.status(500).send(error.message)\n\n          else if (redirectLocation) {\n            const location =  redirectLocation.pathname\n                              + redirectLocation.search\n            res.redirect(302, location)\n          }\n          // render website content\n          else if (renderProps) {\n            const sheet = new ServerStyleSheet()\n            const cookies = new Cookies(req.headers.cookie)\n            /*\n              sometimes request language and browser language are not the same\n              so we use browsers language (storred in cookie) as primary preference\n            */\n            // TODO:\n            // https://www.codeproject.com/Tips/1156391/How-To-Detect-Users-Locale-Right\n            const cookieLocale = req.cookies.locale\n            const requestLocale = req.locale.language\n            const language = cookieLocale || requestLocale\n            global.navigator = global.navigator || {language};\n            /*\n              supply userAgent for material ui prefixer in ssr\n              http://stackoverflow.com/a/38100609\n            */\n            global.navigator.userAgent = req.headers['user-agent'] || 'all';\n            // require App after userAgent is set\n            const App = require('browser/App').default\n            // render App to string\n            const markup = renderToString(\n              <StyleSheetManager sheet={sheet.instance}>\n                  {/* pass down cookies to use universally */}\n                  {/* and pass down user object to prepopulate redux with user data */}\n                  <App user={req.user} cookies={cookies} {...renderProps}/>\n              </StyleSheetManager>\n            )\n            // get prefetched data from redux\n            const initialData = JSON.stringify(store.getState())//.replace(/</g, '\\\\u003c')\n            // reset redux store to make sure next request will have to load fresh data\n            store.dispatch({type: 'RESET'})\n            // extract css from string\n            const css = sheet.getStyleTags()\n            // extract metaData for <header>\n            let headerTags = []\n            const metaData = Helmet.renderStatic()\n            for (var prop in metaData) {\n              const tag = metaData[prop].toString()\n              tag && headerTags.push(tag)\n            }\n            // send data to handlebars template\n            res.render('index', { markup, css, themeConfig, headerTags, initialData })\n          }\n\n          else res.status(404).send('Not found')\n    } );\n})\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/SSR.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 313,
    "kind": "file",
    "name": "src/server/middlewares/subscriptionsApi/index.js",
    "content": "export { default } from './subscriptionsApi'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/subscriptionsApi/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 314,
    "kind": "file",
    "name": "src/server/middlewares/subscriptionsApi/subscriptionsApi.js",
    "content": "import slugify from 'slug'\nimport { Router } from 'express'\nimport generateUuid from 'uuid/v4'\nimport { Subscriptions } from 'server/data/models'\nimport { mustLogin } from 'server/services/permissions'\n\nconst limit = 12\n\nexport default Router()\n\n  // get all subscriptions\n  .get('/:page?', async (req, res) => {\n    try {\n      const page = req.params.page,\n            totalSubscriptionss = await Subscriptions.count(),\n            offset = page ? limit * (page -1) : 0,\n            totalPages = Math.ceil(totalSubscriptionss / limit),\n            subscriptions = await Subscriptions.findAll({limit, offset})\n      res.json({ subscriptions, totalPages })\n    }\n    catch (error) {\n      console.log(error);\n      res.status(500).end(error)\n    }\n  })\n\n  // get single subscription\n  .get('/subscription/:id', async ({params}, res) => {\n    try {\n      const subscription =  await Subscriptions.findOne({\n                          where: {id: params.id}\n                        })\n      res.json(subscription)\n    } catch (error) {\n      console.log(error)\n      res.status(500).end(error)\n    }\n  })\n\n  // update subscription\n  .put('/:subscriptionsId', mustLogin, async ({user, body, params}, res) => {\n    try {\n      const UserId = user.id\n      const subscription = await Subscriptions.findById(params.subscriptionsId)\n\n      // check permissions\n      if (Subscriptions.UserId != UserId) return res.status(401).end()\n      else res.json(await subscription.update(body))\n\n    } catch (error) {\n      console.log(error)\n      res.status(500).end(error)\n    }\n  })\n\n  // create subscription\n  .post('/', mustLogin, async ({user, body}, res) => {\n    try {\n      const UserId = user.id\n      res.json(\n        await Subscriptions.create({...body, UserId})\n      )\n    } catch (error) {\n      console.log(error)\n      res.status(500).end(error)\n    }\n  })",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/subscriptionsApi/subscriptionsApi.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 315,
    "kind": "variable",
    "name": "limit",
    "memberof": "src/server/middlewares/subscriptionsApi/subscriptionsApi.js",
    "static": true,
    "longname": "src/server/middlewares/subscriptionsApi/subscriptionsApi.js~limit",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/middlewares/subscriptionsApi/subscriptionsApi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 316,
    "kind": "file",
    "name": "src/server/middlewares/threadsApi/index.js",
    "content": "export { default, getThreads } from './threadsApi'",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/threadsApi/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 317,
    "kind": "file",
    "name": "src/server/middlewares/threadsApi/threadsApi.js",
    "content": "import slugify from 'slug'\nimport { Router } from 'express'\nimport generateUuid from 'uuid/v4'\nimport { Threads, User } from 'server/data/models'\nimport { mustLogin } from 'server/services/permissions'\n\nconst limit = 12\n\n/**\n *\n * @param {String} parentId parent UUID\n * @param {Number} [currentPage=1] page number\n */\nexport async function getThreads(parentId, currentPage=1) {\n    const totalThreads = await Threads.count({where: {parentId}}),\n          offset = currentPage ? limit * (currentPage -1) : 0\n    return {\n      currentPage,\n      totalPages: Math.ceil(totalThreads / limit) || 1,\n      values: await Threads.findAll({limit, offset, where: {parentId}}),\n    }\n}\n\nexport default Router()\n\n  // get single thread\n  .get('/thread/:slug', async ({params}, res) => {\n    try {\n      const thread = await Threads.findOne({\n                        include: [User],\n                        where: { slug: params.slug },\n                      })\n      res.json(thread)\n    } catch (error) {\n      console.log(error)\n      res.status(500).end(error)\n    }\n  })\n\n\n  // get all threads\n  .get('/:parentId/:page?', async ({params}, res) => {\n    try {\n      // const page = req.params.page,\n      //       totalThreads = await Threads.count(),\n      //       offset = page ? limit * (page -1) : 0,\n      //       totalPages = Math.ceil(totalThreads / limit),\n      //       threads = await Threads.findAll({limit, offset})\n      const response = await getThreads(params.parentId, params.page)\n      res.json(response)\n    }\n    catch (error) {\n      console.log(error);\n      res.status(500).end(error)\n    }\n  })\n\n  // update thread\n  .put('/:threadsId', mustLogin, async ({user, body, params}, res) => {\n    try {\n      const UserId = user.id\n      const thread = await Threads.findById(params.threadsId)\n\n      // check permissions\n      if (Threads.UserId != UserId) return res.status(401).end()\n      else res.json(await thread.update(body))\n\n    } catch (error) {\n      console.log(error)\n      res.status(500).end(error)\n    }\n  })\n\n  // create thread\n  .post('/', mustLogin, async ({user, body}, res) => {\n    try {\n      const UserId = user.id\n      const slug = slugify(body.name)\n      const thread = await Threads.create({...body, slug, UserId})\n      res.json(thread)\n    } catch (error) {\n      console.log(error)\n      res.status(500).end(error)\n    }\n  })",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/threadsApi/threadsApi.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 318,
    "kind": "variable",
    "name": "limit",
    "memberof": "src/server/middlewares/threadsApi/threadsApi.js",
    "static": true,
    "longname": "src/server/middlewares/threadsApi/threadsApi.js~limit",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/middlewares/threadsApi/threadsApi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 319,
    "kind": "function",
    "name": "getThreads",
    "memberof": "src/server/middlewares/threadsApi/threadsApi.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/server/middlewares/threadsApi/threadsApi.js~getThreads",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/middlewares/threadsApi/threadsApi.js",
    "importStyle": "{getThreads}",
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "parentId",
        "description": "parent UUID"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "currentPage",
        "description": "page number"
      }
    ],
    "return": {
      "types": [
        "{\"currentPage\": *, \"totalPages\": *, \"values\": *}"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "file",
    "name": "src/server/middlewares/usersApi.js",
    "content": "import { User, Local,  Profile, Vk, Twitter } from '../data/models'\nimport { getUsersMoods } from '../data/controllers/MoodsController'\nimport { mustLogin } from '../services/permissions'\nimport { Router } from 'express'\nimport merge from 'lodash/assignIn'\n\n// routes\nconst limit = 12\n\nexport default Router()\n  .get('/user/:id', async function({ params }, res) {\n    try {\n      const id  = params.id\n      if (!id) return res.badRequest('invalid query')\n\n      const user =  await User.findById(id, {\n                      raw: true,\n                      nest: true,\n                      // TODO remove in future when all values will be stored in profile\n                      include: [Profile, Local, Vk, Twitter],\n                    })\n      const moodsData = await getUsersMoods(user.id)\n\n      if (!user) res.boom.notFound('user not found')\n      else res.json(merge(user, moodsData))\n\n    } catch (error) {\n      console.error(error)\n      res.boom.internal(error)\n    }\n  })\n\n  // currently used to update user.Profile.language\n  .put('/user/:id', mustLogin, async function({ params, body }, res) {\n    try {\n      // TODO add user validations/permissions\n      const id  = params.id\n\n      if (!id) return res.badRequest('invalid query')\n      // TODO add body validations\n\n      const user = await User.findOne({\n                          raw: true,\n                          nest: true,\n                          where: {id},\n                          include: [Profile],\n                        })\n      if (!user) return res.boom.notFound('user not found')\n\n      // check if profile exists, create it if not\n      if (!user.Profile.id) {\n        await Profile.create({\n          UserId: user.id,\n          language: body.language\n        })\n      }\n      else {\n        await Profile.update(\n          {language: body.language},\n          {where: {UserId: user.id}}\n        )\n      }\n\n      const userWithProfile = await User.findOne({\n        where: {id},\n        include: [Profile],\n        raw: true,\n        nest: true,\n      })\n\n      res.json(userWithProfile)\n\n    } catch (error) {\n      console.error(error)\n      res.boom.internal(error)\n    }\n  })",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/middlewares/usersApi.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 321,
    "kind": "variable",
    "name": "limit",
    "memberof": "src/server/middlewares/usersApi.js",
    "static": true,
    "longname": "src/server/middlewares/usersApi.js~limit",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/middlewares/usersApi.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 322,
    "kind": "file",
    "name": "src/server/server.js",
    "content": "// missing colors in terminal was spotted on windows machines\n// this line allows to packages like \"colors\" and \"chalk\" work as intendent\nprocess.stdout.isTTY = true\n// this prevents babel to parse css as javascript\nimport csshook from 'css-modules-require-hook/preset'\nimport path from 'path'\nimport express from 'express'\nimport boom from 'express-boom' // \"boom\" library for express responses\nimport compression from 'compression'\nimport bodyParser from 'body-parser'\nimport session from 'express-session'\nimport errorhandler from 'errorhandler'\nimport cookieParser from 'cookie-parser'\nimport cookieSession from 'cookie-session'\nimport SSR from './middlewares/SSR'\nimport moodsApi from './middlewares/moodsApi'\nimport nodesApi from './middlewares/nodesApi'\nimport usersApi from './middlewares/usersApi'\nimport decisionsApi from './middlewares/decisionsApi'\nimport externalsApi from './middlewares/externalsApi'\nimport { mustLogin } from './services/permissions'\nimport authApi, { passport } from './middlewares/authApi'\nimport 'source-map-support/register' // do we actually need this?\nimport morgan from 'morgan'\nimport helmet from 'helmet'\nimport createLocaleMiddleware from 'express-locale';\nimport RateLimiter from 'express-rate-limit'\nimport exphbs from 'express-handlebars'\n\n// const RedisStore = require('connect-redis')(session)\n// const cache = require('express-redis-cache')();\n\nconst port = process.env.PORT,\n      app = express(),\n      publicUrl = path.resolve('./dist', 'public'), // TODO: or use server/public?\n      cookieExpires = 100 * 60 * 24 * 100, // 100 days\n      { engine } = exphbs.create({})\n\n/*\n  some routes return 304 if\n  multiple calls to same route are made\n  (while validating user info in signup form, for example)\n*/\napp.disable('etag');\n\n// middlewares\n// detect accepted languages for i18n\napp.use(createLocaleMiddleware())\napp.use(compression())\napp.use(express.static(publicUrl))\napp.use(cookieParser())\napp.set('query parser', 'simple');\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({ extended: true }))\napp.use(cookieSession({\n  name: 'session',\n  // store: new RedisStore(),\n  keys: [process.env.SESSION_KEY || 'keyboard cat'],\n  maxAge: 24 * 60 * 60 * 1000 * 30 * 3 // 3 months\n}))\napp.use(passport.initialize())\napp.use(passport.session())\napp.use(boom()) // provides res.boom. erros dispatching\napp.use(helmet()) // security\n// set handlebars as templating engine for SSR\napp.engine('handlebars', engine);\napp.set('view engine', 'handlebars');\napp.set('views', path.resolve(__dirname, './public'));\n\n// development only middlewares\nif (process.env.NODE_ENV === 'development') {\n  app.use(errorhandler())\n  app.use(morgan('dev')) // logger\n  // enable 'access control' to avoid CORS errors in browsersync\n  app.use((req, res, next) => {\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    next();\n  })\n}\n\n// production only middlewares\nif (process.env.NODE_ENV === 'production') {\n  app.use(morgan('dev')) // logger\n  // rate limiter\n  // only if you're behind a reverse proxy (Heroku, Bluemix, AWS if you use an ELB, custom Nginx setup, etc)\n  // app.enable('trust proxy');\n  // app.use(\n  //   new RateLimiter({\n  //     windowMs: 15*60*1000, // 15 minutes\n  //     max: 100, // limit each IP to 100 requests per windowMs\n  //     delayMs: 200 // disable delaying - full speed until the max limit is reached\n  //   })\n  // )\n}\n\n// CORS PERMISSIONS\n// (almost everything is allowed)\napp.options(\"/*\", function(req, res, next){\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE,OPTIONS');\n  res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization, Content-Length, X-Requested-With');\n  res.send(200);\n});\n\n// REST API\napp.use('/api/auth', authApi)\napp.use('/api/users', usersApi)\napp.use('/api/moods', moodsApi)\napp.use('/api/nodes', nodesApi)\napp.use('/api/decisions', decisionsApi)\napp.use('/api/externals', externalsApi)\napp.use('/api/forums', require('./middlewares/forumsApi').default)\napp.use('/api/threads', require('./middlewares/threadsApi').default)\napp.use('/api/comments', require('./middlewares/commentsApi').default)\napp.use('/api/subscriptions', require('./middlewares/subscriptionsApi').default) \n// ⚠️ Hook for cli! Do not remove 💀\n\n// SPA\napp.use(SSR)\n\n// export app to use in test suits\nexport default app.listen(port, () => {\n    if (process.env.NODE_ENV != 'test') {\n      console.info(`Environment is: ${process.env.NODE_ENV}!`)\n      console.info(`Server listening on port ${port}!`)\n    }\n})",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/server.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 323,
    "kind": "variable",
    "name": "port",
    "memberof": "src/server/server.js",
    "static": true,
    "longname": "src/server/server.js~port",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 324,
    "kind": "file",
    "name": "src/server/server.tests.entry.js",
    "content": "require('babel-polyfill')\nrequire('babel-register')();\nrequire('source-map-support').install();\nconst chai = require('chai')\nconst slugify = require('slug')\nconst casual = require('casual')\nconst uniqid = require('uniqid')\nconst { expect } = require('chai')\nconst isEqual = require('lodash/isEqual')\nconst extend = require('lodash/assignIn')\nconst { parseUrl } = require('shared/parsers.js')\nconst userFixtures = require('server/data/fixtures/users.js')\nconst getRandomDate = require('random-date-generator').getRandomDate\nconst models = require('server/data/models/index.js')\nconst { User, Local, Forums, Threads, Mood, Node, Decision, Profile } = require('server/data/models/index.js')\nchai.should()\n\n// TODO move this to fixtures\nconst urls = [\n            \"https://www.youtube.com/watch?v=nBwHtgQH2EQ\",\n            \"https://www.youtube.com/watch?v=l5-gja10qkw\",\n            \"https://www.youtube.com/watch?v=M3B5U1S-I4Y\",\n            \"https://www.youtube.com/watch?v=P027oGJy2n4\",\n            \"https://www.youtube.com/watch?v=VoA9tLkrgHY\",\n            \"https://www.youtube.com/watch?v=7CPH5L7ip3A\",\n            \"https://www.youtube.com/watch?v=Jwglgn1mo3M\",\n            \"https://www.youtube.com/watch?v=3Pv7jAKIPa0\",\n            \"https://www.youtube.com/watch?v=KrCMWS_fB4o\",\n            \"https://www.youtube.com/watch?v=W7mNmiW9qts\",\n        ]\n\n// function createRandomNames(amount) {\n//     let names = []\n//     if (!amount) amount = 9\n//     for (let index = 0; index < amount; index++) {\n//         names.push(uniqid())\n\n//     }\n//     return names\n// }\n\nconst randomNames = casual.array_of_words(10)\n\n/*\n    this function creates random digit and\n    adds Date.now after decimal point\n    afterwards last digit after decimal is randomized,\n    since on .bulkCreate every Date.now() is the same\n    (this is needed to make every rating unique to\n    avoid duplicates and infinite cycles in node fetching api)\n*/\nfunction randomIntFromInterval(min, max) {\n    const randomNumber = Math.floor(Math.random()*(max-min+1)+min)\n    let now = ('0.' + Date.now().toString()).split('')\n    const dateLastDigit = now.pop()\n    now.push(Number(dateLastDigit) + Math.abs(Number(randomNumber))) // sometimes adds two digits instead of one\n    now = Number(now.join(''))\n    const randomWithDate = Number(randomNumber.toFixed(1)) + now\n    return randomWithDate\n}\n\n// insert fixtures into database\nbefore(function(done) {\n    // close server incase of supertest.agent server is in use\n    require('server/server.js').default.close()\n\n    const moods = [],\n          nodes = [],\n          locals = [],\n          profiles = [],\n          decisions = [],\n          createdUsers = [],\n          forums = [],\n          threads = []\n\n    const localsWithHashedPassword = userFixtures.map(user => {\n        // create new object to avoid object mutablity\n        // (user.password = \"some\" overrides fixture data)\n        const newLocal = Object.assign({}, user);\n        newLocal.password = Local.generateHash(newLocal.password)\n        return newLocal\n    })\n\n    // create users\n    User.bulkCreate(userFixtures)\n        // refetch users because .bulkCreate return objects with id == null\n        .then(() => User.findAll())\n        // create moods fixtures array\n        .each((user, index) => {\n            const   name = uniqid(),\n                    language = 'ru',\n                    slug = slugify(name),\n                    UserId = user.get('id'),\n                    // mood rating\n                    rating = randomIntFromInterval(1, 100000)\n            const local = localsWithHashedPassword[index]\n            local.UserId = user.id\n            locals.push(local)\n            createdUsers.push(user)\n            profiles.push({UserId, language})\n            moods.push({name, UserId, slug, rating, createdAt: getRandomDate()})\n            forums.push({id: name, name, slug, UserId})\n        })\n        // create locals\n        .then(() => Local.bulkCreate(locals))\n        // create profiles\n        .then(() => Profile.bulkCreate(profiles))\n        // .then(() => Profile.findAll({where: {}, raw: true}))\n        // .then(profiles => console.log('profiles', profiles))\n        // create forums\n        .then(() => Forums.bulkCreate(forums))\n        .then(() => Forums.findAll({where: {}}))\n        .each(forum => {\n            randomNames.forEach(() => {\n                const name = uniqid()\n                threads.push({\n                        name,\n                        slug: slugify(name),\n                        text: casual.description,\n                        parentId: forum.id,\n                        UserId: forum.UserId,\n                    }\n                )\n            })\n        })\n        // create threads\n        .then(() => Threads.bulkCreate(threads))\n        // create moods\n        .then(() => Mood.bulkCreate(moods))\n        .then(() => Mood.findAll({where: {}}))\n        .each(mood => {\n            urls.forEach(url => {\n                const rating = randomIntFromInterval(-3, 20)\n                nodes.push(\n                    extend(\n                        parseUrl(url), {\n                        rating,\n                        MoodId: mood.id,\n                        UserId: mood.UserId,\n                    })\n                )\n            })\n        })\n        // create nodes\n        .then(() => Node.bulkCreate(nodes))\n        .then(() => Node.findAll({raw: true}))\n        // .each((node, index) => {\n        //     return createdUsers.forEach((user, index2) => {\n        //         decisions.push({\n        //             position: index,\n        //             NodeId: node.id,\n        //             MoodId: node.MoodId,\n        //             UserId: user.id,\n        //             NodeRating: node.rating,\n        //             rating: Number(randomIntFromInterval(-3, 20)),\n        //         })\n        //     })\n        // })\n        // create decisions\n        .then(() => Decision.bulkCreate(decisions))\n        .then(() => done())\n        .catch(error => {\n            console.error(error)\n            throw error\n        })\n})\n\n// clean up db\nafter(cleanUpDB)\n\nasync function cleanUpDB() {\n    try {\n        const all = { where: {} }\n        await User.destroy(all)\n        await Local.destroy(all)\n        await Profile.destroy(all)\n        await Mood.destroy(all)\n        await Node.destroy(all)\n        await Decision.destroy(all)\n        await Forums.destroy(all)\n        await Threads.destroy(all)\n        await models.Subscriptions.destroy(all) \n// ⚠️ Hook for cli! Do not remove 💀\n    }\n    catch(error) {\n        console.log(error)\n        throw new Error(error)\n    }\n}\n\n// TODO make proper names\ndescribe('fixture data setup', function() {\n    it('added fixtures properly', async function(){\n        try {\n            const users = await User.findAll({raw: true})\n            const locals = await Local.findAll({raw: true})\n            const moods = await Mood.findAll({raw: true})\n            const nodes = await Node.findAll({raw: true})\n            const profiles = await Profile.findAll({raw: true})\n            const decisions = await Decision.findAll({raw: true})\n            const forums = await Forums.findAll({raw: true})\n            const threads = await Threads.findAll({raw: true})\n\n            expect(users).to.have.length(10, '10 users')\n            expect(locals).to.have.length(10, '10 local profiles')\n            expect(moods).to.have.length(10, '10 moods')\n            expect(nodes).to.have.length(100, '100 nodes') // 10 moods * 10 nodes\n            expect(profiles).to.have.length(10, '10 profiles')\n            expect(forums).to.have.length(10, '10 forums')\n            expect(threads).to.have.length(100, '100 threads') // 10 forums * 10 threads\n            // expect(decisions).to.have.length(1000) // 10 moods * 10 nodes * 10 decisions\n\n            moods.forEach(mood => {\n                const moodNodes = nodes.filter(\n                    node => node.MoodId == mood.id\n                )\n                expect(\n                    moodNodes.length,\n                    'each mood must have 10 nodes'\n                ).to.be.equal(10)\n            })\n\n            // nodes.forEach(async node => {\n            //     const nodeDecisions = decisions.filter(\n            //         decision => decision.NodeId == node.id\n            //     )\n            //     expect(\n            //         nodeDecisions.length,\n            //         'each node must have 10 decisions'\n            //     ).to.be.equal(10)\n            // })\n\n            // users.forEach(user => {\n            //     nodes.forEach(node => {\n            //         const userDecisions = decisions.filter(\n            //             decision => (decision.MoodId == node.MoodId\n            //                         && decision.UserId == user.id)\n            //         )\n            //         expect(\n            //             userDecisions.length,\n            //             'each user in mood must have 10 decisions'\n            //         ).to.be.equal(10)\n            //     })\n            // })\n        } catch (error) {\n            console.log(error)\n            throw new Error(error)\n        }\n    })\n})\n\n/* This will search for files ending in .test.js and\n   require them into webpack bundle */\nvar context = require.context('.', true, /.+\\.test\\.js?$/);\ncontext.keys().forEach(context);\nmodule.exports = context;",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/server.tests.entry.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 325,
    "kind": "variable",
    "name": "chai",
    "memberof": "src/server/server.tests.entry.js",
    "static": true,
    "longname": "src/server/server.tests.entry.js~chai",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 326,
    "kind": "variable",
    "name": "slugify",
    "memberof": "src/server/server.tests.entry.js",
    "static": true,
    "longname": "src/server/server.tests.entry.js~slugify",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 327,
    "kind": "variable",
    "name": "casual",
    "memberof": "src/server/server.tests.entry.js",
    "static": true,
    "longname": "src/server/server.tests.entry.js~casual",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 328,
    "kind": "variable",
    "name": "uniqid",
    "memberof": "src/server/server.tests.entry.js",
    "static": true,
    "longname": "src/server/server.tests.entry.js~uniqid",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 329,
    "kind": "variable",
    "name": "expect",
    "memberof": "src/server/server.tests.entry.js",
    "static": true,
    "longname": "src/server/server.tests.entry.js~expect",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 330,
    "kind": "variable",
    "name": "isEqual",
    "memberof": "src/server/server.tests.entry.js",
    "static": true,
    "longname": "src/server/server.tests.entry.js~isEqual",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 331,
    "kind": "variable",
    "name": "extend",
    "memberof": "src/server/server.tests.entry.js",
    "static": true,
    "longname": "src/server/server.tests.entry.js~extend",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 332,
    "kind": "variable",
    "name": "parseUrl",
    "memberof": "src/server/server.tests.entry.js",
    "static": true,
    "longname": "src/server/server.tests.entry.js~parseUrl",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 333,
    "kind": "variable",
    "name": "userFixtures",
    "memberof": "src/server/server.tests.entry.js",
    "static": true,
    "longname": "src/server/server.tests.entry.js~userFixtures",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 334,
    "kind": "variable",
    "name": "getRandomDate",
    "memberof": "src/server/server.tests.entry.js",
    "static": true,
    "longname": "src/server/server.tests.entry.js~getRandomDate",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 335,
    "kind": "variable",
    "name": "models",
    "memberof": "src/server/server.tests.entry.js",
    "static": true,
    "longname": "src/server/server.tests.entry.js~models",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 336,
    "kind": "variable",
    "name": "User",
    "memberof": "src/server/server.tests.entry.js",
    "static": true,
    "longname": "src/server/server.tests.entry.js~User",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 337,
    "kind": "variable",
    "name": "urls",
    "memberof": "src/server/server.tests.entry.js",
    "static": true,
    "longname": "src/server/server.tests.entry.js~urls",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 338,
    "kind": "variable",
    "name": "randomNames",
    "memberof": "src/server/server.tests.entry.js",
    "static": true,
    "longname": "src/server/server.tests.entry.js~randomNames",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 339,
    "kind": "function",
    "name": "randomIntFromInterval",
    "memberof": "src/server/server.tests.entry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/server.tests.entry.js~randomIntFromInterval",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [
      {
        "name": "min",
        "types": [
          "*"
        ]
      },
      {
        "name": "max",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 340,
    "kind": "function",
    "name": "cleanUpDB",
    "memberof": "src/server/server.tests.entry.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/server/server.tests.entry.js~cleanUpDB",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 171,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 341,
    "kind": "variable",
    "name": "context",
    "memberof": "src/server/server.tests.entry.js",
    "static": true,
    "longname": "src/server/server.tests.entry.js~context",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/server/server.tests.entry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 254,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 342,
    "kind": "file",
    "name": "src/server/services/permissions.js",
    "content": "import Boom from 'boom'\nimport selectn from 'selectn'\n\n/**\n * check if user logged in or not\n */\nexport function mustLogin(req, res, next) {\n    req.isAuthenticated() ? next() : res.boom.unauthorized('Please, log in to do this')\n}\n\n/**\n * check administrator permissions\n */\nexport function isAdmin(req, res, next) {\n    selectn('user.id', req) === process.env.ADMIN_ID\n    ? next()\n    : res.boom.unauthorized('You must be an administrator to do this')\n}",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/server/services/permissions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 343,
    "kind": "function",
    "name": "mustLogin",
    "memberof": "src/server/services/permissions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/services/permissions.js~mustLogin",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/services/permissions.js",
    "importStyle": "{mustLogin}",
    "description": "check if user logged in or not",
    "lineNumber": 7,
    "params": [
      {
        "name": "req",
        "types": [
          "*"
        ]
      },
      {
        "name": "res",
        "types": [
          "*"
        ]
      },
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 344,
    "kind": "function",
    "name": "isAdmin",
    "memberof": "src/server/services/permissions.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/server/services/permissions.js~isAdmin",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/server/services/permissions.js",
    "importStyle": "{isAdmin}",
    "description": "check administrator permissions",
    "lineNumber": 14,
    "params": [
      {
        "name": "req",
        "types": [
          "*"
        ]
      },
      {
        "name": "res",
        "types": [
          "*"
        ]
      },
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 345,
    "kind": "file",
    "name": "src/shared/parsers.js",
    "content": "// import { Meteor } from 'meteor/meteor';\n\nfunction parseYoutube(url) {\n\tlet video_id = url.split('v=')[1],\n\t\tampersandPosition = video_id.indexOf('&')\n\tif(ampersandPosition != -1) {\n\t\tvideo_id = video_id.substring(0, ampersandPosition)\n\t}\n\treturn video_id\n}\n\nfunction parseUrl(url) {\n\n\tfunction checkForImageUrl(url) {\n\t\treturn(url.match(/\\.(jpeg|jpg|gif|png)$/) != null);\n\t}\n\n\tif(checkForImageUrl(url)) return {\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\t// provider: null,\n\t\t\t\t\t\t\t\ttype: 'image',\n\t\t\t\t\t\t\t}\n\n\tif (url.includes('youtube' || 'youtu.be')) {\n\t\treturn {\n\t\t\turl,\n\t\t\ttype: 'video',\n\t\t\tprovider: 'youtube',\n\t\t\tcontentId: parseYoutube(url)\n\t\t}\n\t}\n\telse throw new Error(\"Unrecognised-url-provider\")\n}\n\nexport { parseUrl }\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/shared/parsers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 346,
    "kind": "function",
    "name": "parseYoutube",
    "memberof": "src/shared/parsers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shared/parsers.js~parseYoutube",
    "access": "public",
    "export": false,
    "importPath": "anylearn-server/src/shared/parsers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 347,
    "kind": "function",
    "name": "parseUrl",
    "memberof": "src/shared/parsers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shared/parsers.js~parseUrl",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/shared/parsers.js",
    "importStyle": "{parseUrl}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"url\": *, \"type\": string, \"provider\": string, \"contentId\": *}"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "file",
    "name": "src/shared/validators.js",
    "content": "/**\n * detect if string is a url\n * @param {string} str\n * @return {boolean}\n */\nexport function isUrl(str) {\n  var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\n  '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.?)+[a-z]{2,}|'+ // domain name\n  '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\n  '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\n  '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\n  '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\n  return pattern.test(str);\n}\n",
    "static": true,
    "longname": "C:/Users/undeadlol1/Documents/GitHub/boilerplate/src/shared/validators.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 349,
    "kind": "function",
    "name": "isUrl",
    "memberof": "src/shared/validators.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shared/validators.js~isUrl",
    "access": "public",
    "export": true,
    "importPath": "anylearn-server/src/shared/validators.js",
    "importStyle": "{isUrl}",
    "description": "detect if string is a url",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "kind": "index",
    "content": "",
    "longname": "C:\\Users\\undeadlol1\\Documents\\GitHub\\boilerplate\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"anylearn-server\",\n  \"version\": \"1.0.0\",\n  \"description\": \"server side code for anylearn\",\n  \"main\": \"index.js\",\n  \"author\": \"undeadlol1\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"cli\": \"node core/scripts/cli.js\",\n    \"doc\": \"./node_modules/.bin/esdoc\",\n    \"migrate\": \"cross-env NODE_ENV=test sequelize db:migrate && cross-env NODE_ENV=development sequelize db:migrate\",\n    \"undo\": \"cross-env NODE_ENV=test sequelize db:migrate:undo && cross-env NODE_ENV=development sequelize db:migrate:undo\",\n    \"test\": \"cross-env NODE_ENV=test webpack --config ./config/tests.config.js --watch\",\n    \"start\": \"rimraf dist && cross-env NODE_ENV=development concurrently \\\"parallel-webpack --config ./config/targets.config.js --progress --profile --watch --hide-modules\\\" \\\"nodemon dist/server.js --watch dist/server.js\\\"\",\n    \"production\": \"git pull && yarn && cross-env NODE_ENV=production sequelize db:migrate && rimraf dist && cross-env NODE_ENV=production parallel-webpack --config ./config/targets.config.js && npm rebuild node-sass && pm2 stop all && pm2 start dist/server.js --node-args='--expose-gc'\",\n    \"analyze\": \"cross-env NODE_ENV=production parallel-webpack --config ./config/targets.config.js --watch\",\n    \"check_production\": \"cross-env NODE_ENV=production parallel-webpack --config ./config/targets.config.js; node dist/server.js\"\n  },\n  \"engines\": {\n    \"node\": \">=6.9\"\n  },\n  \"dependencies\": {\n    \"babel-plugin-transform-object-rest-spread\": \"^6.23.0\",\n    \"babel-polyfill\": \"^6.23.0\",\n    \"babel-runtime\": \"^6.23.0\",\n    \"bcrypt-nodejs\": \"^0.0.3\",\n    \"body-parser\": \"^1.16.1\",\n    \"boom\": \"^4.2.0\",\n    \"classnames\": \"^2.2.5\",\n    \"compression\": \"^1.6.2\",\n    \"connect-redis\": \"^3.3.0\",\n    \"cookie-parser\": \"^1.4.3\",\n    \"cookie-session\": \"^2.0.0-beta.1\",\n    \"cookies-js\": \"^1.2.3\",\n    \"css-modules-require-hook\": \"^4.0.6\",\n    \"draft-js\": \"^0.10.1\",\n    \"errorhandler\": \"^1.5.0\",\n    \"es6-promise\": \"^4.1.0\",\n    \"express\": \"^4.14.1\",\n    \"express-boom\": \"^2.0.0\",\n    \"express-locale\": \"^1.0.1\",\n    \"express-rate-limit\": \"^2.8.0\",\n    \"express-redis-cache\": \"^0.5.1\",\n    \"express-session\": \"^1.15.1\",\n    \"font-awesome\": \"^4.7.0\",\n    \"helmet\": \"^3.6.0\",\n    \"immutable\": \"^3.8.1\",\n    \"intl-locales-supported\": \"^1.0.0\",\n    \"is-image-url\": \"^1.1.8\",\n    \"is-url\": \"^1.2.2\",\n    \"isomorphic-fetch\": \"^2.2.1\",\n    \"lodash\": \"^4.17.4\",\n    \"material-ui\": \"^0.18.1\",\n    \"mysql\": \"^2.13.0\",\n    \"nodemon\": \"1.11.0\",\n    \"normalize.css\": \"^5.0.0\",\n    \"passport\": \"^0.3.2\",\n    \"passport-local\": \"^1.0.0\",\n    \"passport-twitter\": \"^1.0.4\",\n    \"passport-vkontakte\": \"^0.3.2\",\n    \"prop-types\": \"^15.5.8\",\n    \"query-string\": \"^4.3.4\",\n    \"react\": \"^15.5.4\",\n    \"react-click-outside\": \"^2.2.0\",\n    \"react-cookie\": \"^2.1.2\",\n    \"react-dom\": \"^15.4.2\",\n    \"react-draft-wysiwyg\": \"^1.10.7\",\n    \"react-fontawesome\": \"^1.5.0\",\n    \"react-helmet\": \"^5.1.3\",\n    \"react-imageloader\": \"^2.1.0\",\n    \"react-input-range\": \"^1.1.0\",\n    \"react-intl\": \"^2.3.0\",\n    \"react-mui-speeddial\": \"^0.0.6\",\n    \"react-redux\": \"^5.0.3\",\n    \"react-redux-toastr\": \"^6.2.6\",\n    \"react-reveal\": \"^0.7.3\",\n    \"react-router\": \"^3.0.2\",\n    \"react-router-redux\": \"^4.0.8\",\n    \"react-router-transition\": \"^0.1.1\",\n    \"react-styled-flexboxgrid\": \"^1.1.2\",\n    \"react-tap-event-plugin\": \"^2.0.1\",\n    \"react-ultimate-pagination-material-ui\": \"^1.0.3\",\n    \"react-youtube\": \"^7.3.0\",\n    \"redux\": \"^3.6.0\",\n    \"redux-actions\": \"^2.0.1\",\n    \"redux-cli\": \"^1.9.0\",\n    \"redux-form\": \"^6.7.0\",\n    \"redux-form-material-ui\": \"^4.3.0\",\n    \"redux-promise\": \"^0.5.3\",\n    \"redux-reset\": \"^0.3.0\",\n    \"redux-thunk\": \"^2.2.0\",\n    \"relpers\": \"^1.3.3\",\n    \"selectn\": \"^1.1.2\",\n    \"sequelize\": \"^3.30.2\",\n    \"serialize-javascript\": \"^1.3.0\",\n    \"slug\": \"^0.9.1\",\n    \"styled-components\": \"^2.0.1\",\n    \"uglify-es\": \"git://github.com/mishoo/UglifyJS2#harmony\",\n    \"universal-cookie\": \"^2.1.2\",\n    \"uuid\": \"^3.1.0\",\n    \"validator\": \"^7.0.0\"\n  },\n  \"devDependencies\": {\n    \"babel\": \"^6.23.0\",\n    \"babel-cli\": \"^6.24.1\",\n    \"babel-core\": \"^6.24.1\",\n    \"babel-eslint\": \"6\",\n    \"babel-loader\": \"^7.0.0\",\n    \"babel-plugin-transform-class-properties\": \"^6.23.0\",\n    \"babel-plugin-transform-decorators-legacy\": \"^1.3.4\",\n    \"babel-plugin-transform-imports\": \"^1.2.0\",\n    \"babel-plugin-transform-runtime\": \"^6.23.0\",\n    \"babel-preset-es2015\": \"^6.22.0\",\n    \"babel-preset-es2016\": \"^6.24.1\",\n    \"babel-preset-latest\": \"^6.24.1\",\n    \"babel-preset-node6\": \"^11.0.0\",\n    \"babel-preset-react\": \"^6.23.0\",\n    \"babel-preset-stage-0\": \"^6.22.0\",\n    \"babel-preset-stage-3\": \"^6.22.0\",\n    \"browser-sync\": \"^2.18.12\",\n    \"browser-sync-webpack-plugin\": \"^1.1.4\",\n    \"casual\": \"^1.5.19\",\n    \"chai\": \"^3.5.0\",\n    \"chai-datetime\": \"^1.4.1\",\n    \"chai-enzyme\": \"^0.7.1\",\n    \"chai-immutable\": \"^1.6.0\",\n    \"chai-properties\": \"^1.2.1\",\n    \"chai-subset\": \"^1.6.0\",\n    \"change-case\": \"^3.0.1\",\n    \"compression-webpack-plugin\": \"^0.4.0\",\n    \"concurrently\": \"^3.4.0\",\n    \"copy-webpack-plugin\": \"^4.0.1\",\n    \"cross-env\": \"^5.1.1\",\n    \"css-loader\": \"^0.27.1\",\n    \"enzyme\": \"^2.8.2\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-jsx-plugin\": \"^1.0.0\",\n    \"esdoc-react-plugin\": \"^1.0.1\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^3.17.1\",\n    \"eslint-config-airbnb\": \"^14.1.0\",\n    \"eslint-plugin-import\": \"^2.2.0\",\n    \"eslint-plugin-jsx-a11y\": \"^4.0.0\",\n    \"eslint-plugin-react\": \"^6.10.0\",\n    \"express-handlebars\": \"^3.0.0\",\n    \"extract-text-webpack-plugin\": \"^3.0.2\",\n    \"faker\": \"^4.1.0\",\n    \"file-loader\": \"^0.10.1\",\n    \"friendly-errors-webpack-plugin\": \"^1.6.1\",\n    \"fs-extra\": \"^4.0.1\",\n    \"happypack\": \"^3.1.0\",\n    \"html-webpack-plugin\": \"^2.28.0\",\n    \"inquirer\": \"^3.2.1\",\n    \"jsdom\": \"^10.1.0\",\n    \"json-loader\": \"^0.5.4\",\n    \"mocha\": \"^3.2.0\",\n    \"mocha-clean\": \"^1.0.0\",\n    \"mocha-loader\": \"^1.1.1\",\n    \"mocha-webpack\": \"^0.7.0\",\n    \"mocha.parallel\": \"^0.15.2\",\n    \"morgan\": \"^1.8.1\",\n    \"nightmare\": \"^2.10.0\",\n    \"nock\": \"^9.0.13\",\n    \"node-sass\": \"^4.5.2\",\n    \"parallel-webpack\": \"^1.6.1\",\n    \"pluralize\": \"^7.0.0\",\n    \"pm2\": \"2.5.0\",\n    \"random-date-generator\": \"^1.0.2\",\n    \"react-test-renderer\": \"^15.5.4\",\n    \"redux-devtools-extension\": \"^2.13.2\",\n    \"redux-mock-store\": \"^1.2.3\",\n    \"replace\": \"^0.3.0\",\n    \"rimraf\": \"^2.6.2\",\n    \"sass-loader\": \"^6.0.3\",\n    \"sequelize-cli\": \"^2.7.0\",\n    \"shelljs\": \"^0.7.7\",\n    \"shelljs-nodecli\": \"^0.1.1\",\n    \"sinon\": \"^2.3.4\",\n    \"source-map-support\": \"^0.4.15\",\n    \"style-loader\": \"^0.13.2\",\n    \"supertest\": \"^3.0.0\",\n    \"test\": \"^0.6.0\",\n    \"typescript\": \"^2.2.1\",\n    \"uglify-js\": \"git://github.com/mishoo/UglifyJS2#harmony\",\n    \"uniqid\": \"^4.1.1\",\n    \"url-loader\": \"^0.5.8\",\n    \"webpack\": \"^3.0.0\",\n    \"webpack-bundle-analyzer\": \"^2.3.1\",\n    \"webpack-merge\": \"^4.1.0\",\n    \"webpack-node-externals\": \"^1.5.4\",\n    \"webpack-notifier\": \"^1.5.0\",\n    \"webpack-shell-plugin\": \"^0.5.0\",\n    \"xml-loader\": \"^1.2.1\"\n  }\n}\n",
    "longname": "C:\\Users\\undeadlol1\\Documents\\GitHub\\boilerplate\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]